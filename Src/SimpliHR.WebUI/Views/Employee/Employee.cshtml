@using SimpliHR.Infrastructure.Helper
@model SimpliHR.Infrastructure.Models.Employee.EmployeeMasterVM

@{
    int countryId, cityId, stateId;
    int pCountryId, pCityId, pStateId;

    countryId = cityId = stateId = pCountryId = pCityId = pStateId = 0;

    var x = Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "FirstName" && (x.IsMandatory == true)).Count();
    x = x;
}

@*Page CSS*@
<link rel="stylesheet" href="~/assets/vendor/libs/bs-stepper/bs-stepper.css" />
<link rel="stylesheet" href="~/assets/vendor/libs/bootstrap-select/bootstrap-select.css" />
<link rel="stylesheet" href="~/assets/vendor/libs/select2/select2.css" />
<link href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css" rel="stylesheet">


<style>
    menu-vertical .app-brand {
        /*padding-right: 0;padding-left: 2.3rem;*/
        justify-content:  center;
    }

    label.required:after {
        content: "*";
        color: red;
        font-size: 14px;
    }



    .img-panel {
        margin: 100px auto 40px;
        max-width: 500px;
        text-align: center;
    }

    .button_outer {
        background: #83ccd3;
        border-radius: 30px;
        text-align: center;
        height: 50px;
        width: 200px;
        display: inline-block;
        transition: .2s;
        position: relative;
        overflow: hidden;
    }

    .btn_upload {
        padding: 14px 30px 12px;
        color: #fff;
        text-align: center;
        position: relative;
        display: inline-block;
        overflow: hidden;
        z-index: 3;
        white-space: nowrap;
    }

        .btn_upload input {
            position: absolute;
            width: 100%;
            left: 0;
            top: 0;
            width: 100%;
            height: 105%;
            cursor: pointer;
            opacity: 0;
        }

    .file_uploading {
        width: 100%;
        height: 10px;
        margin-top: 20px;
        background: #ccc;
    }

        .file_uploading .btn_upload {
            display: none;
        }

    .processing_bar {
        position: absolute;
        left: 0;
        top: 0;
        width: 0;
        height: 100%;
        border-radius: 30px;
        background: #83ccd3;
        transition: 3s;
    }

    .file_uploading .processing_bar {
        width: 100%;
    }

    .success_box {
        display: none;
        width: 50px;
        height: 50px;
        position: relative;
    }

        .success_box:before {
            content: '';
            display: block;
            width: 17px;
            height: 25px;
            border-bottom: 6px solid #fff;
            border-right: 6px solid #fff;
            -webkit-transform: rotate(45deg);
            -moz-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
            position: absolute;
            left: 17px;
            top: 10px;
        }

    .file_uploaded .success_box {
        display: inline-block;
    }

    .file_uploaded {
        margin-top: 0;
        width: 50px;
        background: #83ccd3;
        height: 50px;
    }

    .uploaded_file_view {
        max-width: 300px;
        margin: 40px auto;
        text-align: center;
        position: relative;
        transition: .2s;
        opacity: 0;
        border: 2px solid #ddd;
        padding: 15px;
    }

    .file_remove {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: block;
        position: absolute;
        background: #aaa;
        line-height: 30px;
        color: #fff;
        font-size: 12px;
        cursor: pointer;
        right: -15px;
        top: -15px;
    }

        .file_remove:hover {
            background: #222;
            transition: .2s;
        }

    .uploaded_file_view img {
        max-width: 100%;
    }

    .uploaded_file_view.show {
        opacity: 1;
    }

    .error_msg {
        text-align: center;
        color: #f00
    }

    input.error {
        border: 1px solid red;
    }

    .bs-stepper-circle-green {
        height: 2.5rem;
        width: 2.5rem;
        font-weight: 500;
        font-size: 1.125rem;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 0.375rem;
        color: #fff;
        background-color: #28a745;
        border-color: #28a745;
    }

</style>


@*Page CSS*@
<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Employee Details</h4>

    <!-- Default -->
    <div class="row">
        <!-- Vertical Wizard -->
        <div class="col-12 mb-4">
            <div class="bs-stepper wizard-numbered wizard-vertical vertical mt-2">
                <div class="bs-stepper-header">
                    <div class="step" data-target="#personal">
                        <button type="button" class="step-trigger">
                            <span id="PersonalInformation" class='@(Model.EmployeeTabFillingStatusData.PersonalInformation ? "bs-stepper-circle-green" : "bs-stepper-circle")'>1</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Personal Information</span>

                            </span>
                            </bu+>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#job-information">
                        <button type="button" class="step-trigger">
                            <span id="JobInformation" class='@(Model.EmployeeTabFillingStatusData.JobInformation ? "bs-stepper-circle-green" : "bs-stepper-circle")'>2</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Job Information </span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#profile-picture">
                        <button type="button" class="step-trigger">
                            <span id="ProfilePicture" class='@(Model.EmployeeTabFillingStatusData.ProfilePicture ? "bs-stepper-circle-green" : "bs-stepper-circle")'>3</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Profile Picture</span>
                                <!--span class="bs-stepper-subtitle">Add personal info</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#contact-details">
                        <button type="button" class="step-trigger">
                            <span id="ContactDetails" class='@((Model.EmployeeTabFillingStatusData.CurrentAddress && Model.EmployeeTabFillingStatusData.PermanentAddress) ? "bs-stepper-circle-green" : "bs-stepper-circle")'>4</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Contact Details</span>
                                <!--span class="bs-stepper-subtitle">Add personal info</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#bank-details">
                        <button type="button" class="step-trigger">
                            <span id="BankDetails" class='@(Model.EmployeeTabFillingStatusData.BankDetails ? "bs-stepper-circle-green" : "bs-stepper-circle")'>5</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Bank Details</span>
                                <!--span class="bs-stepper-subtitle">Add personal info</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#family-details">
                        <button type="button" class="step-trigger">
                            <span id="FamilyDetails" class='@(Model.EmployeeTabFillingStatusData.FamilyDetails ? "bs-stepper-circle-green" : "bs-stepper-circle")'>6</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Family Details</span>
                                <!--span class="bs-stepper-subtitle">Add personal info</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#academic-details">
                        <button type="button" class="step-trigger">
                            <span id="AcademicDetails" class='@(Model.EmployeeTabFillingStatusData.AcademicDetails ? "bs-stepper-circle-green" : "bs-stepper-circle")'>7</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Academic Details</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#experiences">
                        <button type="button" class="step-trigger">
                            <span id="ExperiencesBackgroud" class='@(Model.EmployeeTabFillingStatusData.ExperiencesBackgroud ? "bs-stepper-circle-green" : "bs-stepper-circle")'>8</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Experiences Background</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#certification">
                        <button type="button" class="step-trigger">
                            <span id="CertificationDetails" class='@(Model.EmployeeTabFillingStatusData.CertificationDetails ? "bs-stepper-circle-green" : "bs-stepper-circle")'>9</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Certification Details</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#reference-details">
                        <button type="button" class="step-trigger">
                            <span id="ReferenceDetails" class='@(Model.EmployeeTabFillingStatusData.ReferenceDetails ? "bs-stepper-circle-green" : "bs-stepper-circle")'>10</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Reference Details</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#passport-details">
                        <button type="button" class="step-trigger">
                            <span id="PassportDetails" class='@(Model.EmployeeTabFillingStatusData.PassportDetails ? "bs-stepper-circle-green" : "bs-stepper-circle")'>11</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Passport Details</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#employee-languages">
                        <button type="button" class="step-trigger">
                            <span id="Language" class='@(Model.EmployeeTabFillingStatusData.Language ? "bs-stepper-circle-green" : "bs-stepper-circle")'>12</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Languages</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#seperation-details">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">13</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Seperation</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                </div>

                <div class="bs-stepper-content">
                    <div id="errorDiv">
                        <p id="errorPara" class="error" style="color:red"></p>
                    </div>
                    <div class="modal fade " id="attachmentPopUp" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered1 modal-simple modal-add-new-cc">
                            <!-- Configure a few settings and attach camera -->
                            <h1>Upload Attachment</h1>
                            <div class="modal-content p-3 p-md-5 modal-dialog">
                                <div id="upload_attachment"></div>
                                <input type="file" class="employeeDocs" id="FileName" name="FileName" />
                                <button id="Uploadfile" name="Uploadfile" class="form-control" onclick="UploadAttachment('/EmployeeUploadDoc/SaveEmployeeUploadInfo')">Upload File</button>
                                <div id="results">Click upload file to post the file to....</div>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                <input type="hidden" id="FieldName" name="FieldName" />
                            </div>
                        </div>
                    </div>
                    <!-- Personal Details  -->
                    <form id="employeepersonalinfoForm" onSubmit="return false">
                        <!-- Personal Details -->
                        <div id="personal" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Personal Information</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="FirstName" && x.IsMandatory==true).Count()==1? " required":"")" for=""><span class="">First Name</span></label>  &nbsp;
                                        <span style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="FirstName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;" : "display:inline;")'>
                                            <a href="#" onclick="ShowAttachmentPopUp('FirstName','First Name')"><i class="fa-solid fa-paperclip"></i></a>
                                            &nbsp;<a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('FirstName','First Name','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="FirstName" name="FirstName" maxlength="20" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "FirstName" && x.IsMandatory == true).Count() == 1 ? "required" : "") value="@Model.EmployeeMaster.FirstName" class="form-control" placeholder="First Name" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="LastName" && x.IsMandatory==true).Count()==1? " required":"")" for=""><span class="">Last Name</span></label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="LastName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('LastName','Last Name')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('LastName','Last Name','PersonalInformation')"></i></a>
                                        </span>

                                    </div>
                                    <input type="text" id="LastName" name="LastName" maxlength="20" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "LastName" && x.IsMandatory == true).Count() == 1 ? "required" : "") value="@Model.EmployeeMaster.LastName" class="form-control" placeholder="Last Name" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="MiddleName" && x.IsMandatory==true).Count()==1? " required":"")" for="">Middle Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="MiddleName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('MiddleName','Middle Name')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('MiddleName','Middle Name','PersonalInformation')"></i></a>
                                        </span>

                                    </div>
                                    <input type="text" id="MiddleName" name="MiddleName" onkeyup="return checkTextEntry(event)" maxlength="20" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "MiddleName" && x.IsMandatory == true).Count() == 1 ? " required" : "") value="@Model.EmployeeMaster.MiddleName" class="form-control" placeholder="Middle Name" />

                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="GenderId" && x.IsMandatory==true).Count()==1? " required":"")" for="">Gender</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="GenderId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('GenderId','Gender')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('GenderId','Gender','PersonalInformation')"></i></a>
                                        </span>

                                    </div>
                                    <select class="select2 form-select" id="GenderId" name="GenderId" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "GenderId" && x.IsMandatory == true).Count() == 1 ? "required" : "")>
                                        <option selected>Select Option</option>
                                        <option selected=@(@Model.EmployeeMaster.GenderId==1? true : false) value="1">Male</option>
                                        <option selected=@(@Model.EmployeeMaster.GenderId==2 ? true : false ) value="2">Female</option>
                                    </select>
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="DOB" && x.IsMandatory==true).Count()==1? " required":"")" for="">Date of Birth</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="DOB" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('DOB','DOB')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('DOB','Date of Birth','PersonalInformation')"></i></a>
                                        </span>

                                    </div>
                                    <input type="text" id="Dob" name="Dob" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "DOB" && x.IsMandatory == true).Count() == 1 ? " required" : "") value="@(Model.EmployeeMaster.Dob == null ? "" : ((DateTime)Model.EmployeeMaster.Dob).ToString("dd-MMM-yyyy"))" class="form-control flatpickr-date-dob" placeholder="DD-MMM-YYYY" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ContactNo" && x.IsMandatory==true).Count()==1? " required":"")" for="">Contact Number</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ContactNo" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ContactNo','ContactNo')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ContactNo','Contact Number','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" id="ContactNo" maxlength="15" class="form-control" placeholder="Contact Number" name="ContactNo" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ContactNo" && x.IsMandatory == true).Count() == 1 ? " required" : "") value="@Model.EmployeeMaster.ContactNo" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmailId" && x.IsMandatory==true).Count()==1? " required":"")" for="">Email</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmailId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('EmailId','EmailId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('EmailId','Email','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="email"
                                           id="EmailId" name="EmailId" maxlength="50" value="@Model.EmployeeMaster.EmailId"
                                           class="form-control"
                                           placeholder="john.doe@email.com"
                                           aria-label="john.doe" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EmailId" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="FatherName" && x.IsMandatory==true).Count()==1? " required":"")" for="">Father Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="FatherName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('FatherName','FatherName')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('FatherName','Father Name','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="FatherName" name="FatherName" maxlength="50" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "FatherName" && x.IsMandatory == true).Count() == 1 ? " required" : "") value="@Model.EmployeeMaster.FatherName" class="form-control" placeholder="Father Name" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="SpouseName" && x.IsMandatory==true).Count()==1? " required":"")" for="">Spouse Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="SpouseName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('SpouseName','SpouseName')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('SpouseName','Spouse Name','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="SpouseName" maxlength="50" name="SpouseName" value="@Model.EmployeeMaster.SpouseName" class="form-control" placeholder="Spouse Name" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "SpouseName" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="MaritalStatusId" && x.IsMandatory==true).Count()==1? " required":"")" for="">Marital Status</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="MaritalStatusId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('MaritalStatusId','MaritalStatusId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('MaritalStatusId','Marital Status','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    @*@Html.DropDownListFor(x => x.MaritalStatusId,new SelectList(Model.EmployeeMastersKeyValues.MaritalStatusKeyValues,"MaritalStatusId", "MaritalStatusName", Model.MaritalStatusId),"Select Option",htmlAttributes: new { @class = "form-select" , @required="required"})*@
                                    @Html.DropDownList("MaritalStatusId", new SelectList(Model.EmployeeMastersKeyValues.MaritalStatusKeyValues, "MaritalStatusId", "MaritalStatusName", Model.EmployeeMaster.MaritalStatusId), "Select Status", htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible", @name = "MaritalStatusId" })
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ReligionId" && x.IsMandatory==true).Count()==1? " required":"")" for="">Religion</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ReligionId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ReligionId','ReligionId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ReligionId','Religion','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    @*@Html.DropDownListFor(x => x.ReligionId,new SelectList(Model.EmployeeMastersKeyValues.ReligionKeyValues,"ReligionId", "ReligionName", Model.ReligionId),"Select Religion",htmlAttributes: new { @class = "form-select",@required="required"})*@
                                    @Html.DropDownList("ReligionId", new SelectList(Model.EmployeeMastersKeyValues.ReligionKeyValues, "ReligionId", "ReligionName", Model.EmployeeMaster.ReligionId), "Select Option", htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible", @name = "ReligionId" })

                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="BloodGroupId" && x.IsMandatory==true).Count()==1? " required":"")" for="">Blood Group</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="BloodGroupId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('BloodGroupId','BloodGroupId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('BloodGroupId','Blood Group','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    @*@Html.DropDownListFor(x => x.BloodGroupId,new SelectList(Model.EmployeeMastersKeyValues.BloodGroupKeyValues,"BloodGroupId", "BloodGroupName", Model.BloodGroupId),"Select Option",htmlAttributes: new { @class = "form-select"})*@
                                    @Html.DropDownList("BloodGroupId", new SelectList(Model.EmployeeMastersKeyValues.BloodGroupKeyValues, "BloodGroupId", "BloodGroupName", Model.EmployeeMaster.BloodGroupId), "Select Option", htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible", @name = "BloodGroupId" })

                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Pannumber" && x.IsMandatory==true).Count()==1? " required":"")" for="">Pan Card</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Pannumber" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Pannumber','Pannumber')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Pannumber','Pan Card','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Pannumber" name="Pannumber" maxlength="10" value="@Model.EmployeeMaster.Pannumber" class="form-control" placeholder="Pan Card" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Pannumber" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="AadharNumber" && x.IsMandatory==true).Count()==1? " required":"")" for="">Aadhar</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="AadharNumber" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")' />
                                        &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('AadharNumber','AadharNumber')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                        <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('AadharNumber','Aadhar','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" id="AadharNumber" name="AadharNumber" value="@Model.EmployeeMaster.AadharNumber" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" maxlength="12" class="form-control" placeholder="Aadhar" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "AadharNumber" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>

                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmergencyContactPerson" && x.IsMandatory==true).Count()==1? " required":"")" for="">Emergency Contact Person</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmergencyContactPerson" && ((x.AddAttachment==true))).Count()==0? "display:none;":"display:inline;")' />
                                        &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('EmergencyContactPerson','EmergencyContactPerson')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                        <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('EmergencyContactPerson','Emergency','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input id="EmergencyContactPerson" name="EmergencyContactPerson" value="@Model.EmployeeMaster.EmergencyContactPerson" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" maxlength="40" class="form-control" placeholder="Emergency Contact Person" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EmergencyContactPerson" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmergencyContactNo" && x.IsMandatory==true).Count()==1? " required":"")" for="">Emergency Contact No</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmergencyContactNo" && ((x.AddAttachment==true))).Count()==0? "display:none;":"display:inline;")' />
                                        &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('EmergencyContactNo','EmergencyContactNo')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                        <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('EmergencyContactNo','Emergency','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" id="EmergencyContactNo" name="EmergencyContactNo" value="@Model.EmployeeMaster.EmergencyContactNo" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" maxlength="15" class="form-control" placeholder="Emergency Contact No" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EmergencyContactNo" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmergencyContactRelation" && x.IsMandatory==true).Count()==1? " required":"")" for="">Emergency Contact Relation</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmergencyContactRelation" && ((x.AddAttachment==true))).Count()==0? "display:none;":"display:inline;")' />
                                        &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('EmergencyContactRelation','EmergencyContactRelation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                        <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('EmergencyContactRelation','Emergency','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input id="EmergencyContactRelation" name="EmergencyContactRelation" value="@Model.EmployeeMaster.EmergencyContactRelation" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" maxlength="40" class="form-control" placeholder="Emergency Contact Relation" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EmergencyContactRelation" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>

                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-label-secondary btn-prev" disabled>
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>

                                    <button class="btn btn-primary btn-next" style="visibility:hidden">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    @*<button class="btn btn-primary" onclick="SaveEmployeeInfo('employeepersonalinfoForm','/Employee/SaveEmployeePersonalInfo')">*@
                                    <button class="btn btn-primary" onclick="ValidateAndSaveEmployee('employeepersonalinfoForm','/Employee/SaveEmployeePersonalInfo','PersonalInformation')">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Save and Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                    <!-- Job Details  -->
                    <form id="employeejobForm" onSubmit="return false">
                        <!-- Job Information  -->
                        <div id="job-information" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Job Information</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <div class="row g-3">
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EmployeeCode" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="username-vertical">Employee Code</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmployeeCode" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('EmployeeCode','EmployeeCode')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('EmployeeCode','Employee Code','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="EmployeeCode" name="EmployeeCode" value="@Model.EmployeeMaster.EmployeeCode" class="form-control" placeholder="Employee Code" maxlength="20" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EmployeeCode" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "JobTitleId" && x.IsMandatory == true).Count() == 1 ? " required" : "") " for="email-vertical">Job Title</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="JobTitleId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('JobTitleId','JobTitleId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('JobTitleId','Job Title','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    @*@Html.DropDownListFor(x => x.JobTitleId,new SelectList(Model.EmployeeMastersKeyValues.JobTitleKeyValues,"JobTitleId", "JobTitle", Model.EmployeeMaster.JobTitleId),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible" ,@required="required"})*@
                                    @Html.DropDownList("JobTitleId", new SelectList(Model.EmployeeMastersKeyValues.JobTitleKeyValues, "JobTitleId", "JobTitle", Model.EmployeeMaster.JobTitleId), "Select Option", htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible", @name = "JobTitleId" })
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "DepartmentId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="email-vertical">Department</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="DepartmentId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('DepartmentId','DepartmentId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('DepartmentId','Department','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    @*@Html.DropDownListFor(x => x.DepartmentId,new SelectList(Model.EmployeeMastersKeyValues.DepartmentKeyValues,"DepartmentId", "DepartmentName", Model.EmployeeMaster.DepartmentId),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible" , @required="required"})*@
                                    @Html.DropDownList("DepartmentId", new SelectList(Model.EmployeeMastersKeyValues.DepartmentKeyValues, "DepartmentId", "DepartmentName", Model.EmployeeMaster.DepartmentId), "Select Option", htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible", @name = "DepartmentId", @required = "required" })
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ManagerId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="confirm-password-vertical">Supervisor/Manager</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ManagerId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ManagerId','ManagerId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ManagerId','Supervisor/Manager','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    @*@Html.DropDownListFor(x => x.ManagerId,new SelectList(Model.EmployeeMastersKeyValues.EmployeeKeyValues,"EmployeeId", "EmployeeName", Model.EmployeeMaster.ManagerId),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible",@name="ManagerId" , @required="required"})*@
                                    @Html.DropDownList("ManagerId", new SelectList(Model.EmployeeMastersKeyValues.EmployeeKeyValues.Where(x => x.EmployeeId != Model.LogInEmployeeId), "EmployeeId", "EmployeeNameCode", Model.EmployeeMaster.ManagerId), "Select Option", htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible", @name = "ManagerId", @required = "required" })
                                </div>
                                <div class="col-sm-6">
                                    <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "HODId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="confirm-password-vertical">HOD</label>
                                    @*@Html.DropDownListFor(x => x.HODId,new SelectList(Model.EmployeeMastersKeyValues.EmployeeKeyValues,"EmployeeId", "EmployeeName", Model.EmployeeMaster.HODId),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible",@name="HODId" , @required="required"})*@
                                    @Html.DropDownList("HODId", new SelectList(Model.EmployeeMastersKeyValues.EmployeeKeyValues, "EmployeeId", "EmployeeNameCode", Model.EmployeeMaster.HODId), "Select Option", htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible", @name = "HODId", @required = "required" })

                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "DOJ" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="confirm-password-vertical">Hiring Date</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="DOJ" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('DOJ','DOJ')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('DOJ','Hiring Date','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="DOJ" name="DOJ" class="form-control flatpickr-date1" value="@(Model.EmployeeMaster.Doj==null ? "" : ((DateTime)Model.EmployeeMaster.Doj).ToString("dd-MMM-yyyy"))" placeholder="DD-MMM-YYYY" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "DOJ" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "WorkLocationId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="confirm-password-vertical">Work Location</label>
                                    @*@Html.DropDownListFor(x => x.WorkLocationId,new SelectList(Model.EmployeeMastersKeyValues.WorkLocationKeyValues,"WorkLocationId", "Location", Model.EmployeeMaster.WorkLocationId),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible" })*@
                                    @Html.DropDownList("WorkLocationId", new SelectList(Model.EmployeeMastersKeyValues.WorkLocationKeyValues, "WorkLocationId", "Location", Model.EmployeeMaster.WorkLocationId), "Select Option", htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible", @name = "WorkLocationId" })
                                </div>
                                @*<div class="col-sm-6">
                                <label class="form-label required" for="confirm-password-vertical">Employment Type</label>
                                @Html.DropDownListFor(x => x.IdentityId,new SelectList(Model.EmployeeMastersKeyValues.IdtypeKeyValues,"IdentityId", "IdentityName", Model.IdentityId),"Select EmployeeType",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible" , @required="required"})
                                </div>*@
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EmploymentType" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="confirm-password-vertical">Employment Type</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmploymentType" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('EmploymentType','EmploymentType')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('EmploymentType','Employment Type','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible" id="EmploymentType" name="EmploymentType" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EmploymentType" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="">Select Option</option>
                                        <option value="1" selected="@(Model!=null && Model.EmployeeMaster!=null && Model.EmployeeMaster.EmploymentType!=null && Model.EmployeeMaster.EmploymentType==1 ? true : false)">Permanent</option>
                                        <option value="2" selected="@(Model!=null && Model.EmployeeMaster!=null && Model.EmployeeMaster.EmploymentType!=null && Model.EmployeeMaster.EmploymentType==2 ? true : false)">Probation</option>
                                        <option value="3" selected="@(Model!=null && Model.EmployeeMaster!=null && Model.EmployeeMaster.EmploymentType!=null && Model.EmployeeMaster.EmploymentType==3 ? true : false)">Terminated</option>
                                        <option value="4" selected="@(Model!=null && Model.EmployeeMaster!=null && Model.EmployeeMaster.EmploymentType!=null && Model.EmployeeMaster.EmploymentType==4 ? true : false)">Contractual</option>
                                        <option value="5" selected="@(Model!=null && Model.EmployeeMaster!=null && Model.EmployeeMaster.EmploymentType!=null && Model.EmployeeMaster.EmploymentType==5 ? true : false)">Third Party</option>
                                    </select>
                                    @*                                    @Html.DropDownListFor(x => x.IdentityId,new SelectList(Model.EmployeeMastersKeyValues.IdtypeKeyValues,"IdentityId", "IdentityName", Model.IdentityId),"Select EmployeeType",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible" , @required="required"})*@
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EmployeeStatus" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="confirm-password-vertical">Employment Status</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmployeeStatus" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('EmployeeStatus','EmployeeStatus')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('EmployeeStatus','Employment Status','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    <select class="form-select" id="EmployeeStatus" name="EmployeeStatus" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EmployeeStatus" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="" selected">Select Status</option>
                                        <option value="Active" selected="@(Model.EmployeeMaster.EmployeeStatus==null?false:(Model.EmployeeMaster.EmployeeStatus.ToUpper()=="ACTIVE"?true:false))">Active</option>
                                        <option value="Terminated" selected="@(Model.EmployeeMaster.EmployeeStatus==null?false:(Model.EmployeeMaster.EmployeeStatus.ToUpper()=="TERMINATED"?true:false))">Terminated</option>
                                        <option value="On Leave" selected="@(Model.EmployeeMaster.EmployeeStatus==null?false:(Model.EmployeeMaster.EmployeeStatus.ToUpper()=="ON LEAVE"?true:false))">On Leave</option>
                                    </select>

                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "OfficialEmail" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="confirm-password-vertical">Work Email</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="OfficialEmail" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('OfficialEmail','OfficialEmail')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('OfficialEmail','Work Email','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="email"
                                           id="OfficialEmail"
                                           name="OfficialEmail" maxlength="50"
                                           class="form-control" value="@Model.EmployeeMaster.OfficialEmail"
                                           placeholder="john.doe@email.com"
                                           aria-label="john.doe" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "OfficialEmail" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "RoleId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="confirm-password-vertical">Role</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="RoleId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('RoleId','RoleId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('RoleId','Role','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    @*@Html.DropDownListFor(x => x.RoleId,new SelectList(Model.EmployeeMastersKeyValues.RoleKeyValues,"RoleId", "RoleName", Model.EmployeeMaster.RoleId),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible" , @required="required"})*@
                                    @Html.DropDownList("RoleId", new SelectList(Model.EmployeeMastersKeyValues.RoleKeyValues, "RoleId", "RoleName", Model.EmployeeMaster.RoleId), "Select Option", htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible", @name = "RoleId" })

                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "BandId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="confirm-password-vertical">Band</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="BandId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('BandId','BandId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('BandId','Band','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    @*@Html.DropDownListFor(x => x.BandId,new SelectList(Model.EmployeeMastersKeyValues.BandKeyValues,"BandId", "Band", Model.EmployeeMaster.BandId),"Select Option",htmlAttributes: new { @class = "form-select"})*@
                                    @Html.DropDownList("BandId", new SelectList(Model.EmployeeMastersKeyValues.BandKeyValues, "BandId", "Band", Model.EmployeeMaster.BandId), "Select Option", htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible", @name = "BandId", @required = "required" })
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CTC" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">CTC (Anually)</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="CTC" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('CTC','CTC')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('CTC','CTC','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" class="form-control" id="CTC" name="CTC" value="@Model.EmployeeMaster.CTC" placeholder="CTC" maxlength="8" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CTC" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EPFNumber" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">EPF Number</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EPFNumber" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('EPFNumber','EPFNumber')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('EPFNumber','EPF Number','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" class="form-control" id="EPFNumber" name="EPFNumber" value="@Model.EmployeeMaster.EPFNumber" placeholder="EPF Number" maxlength="15" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EPFNumber" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ESINumber" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">ESI Number</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ESINumber" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ESINumber','ESINumber')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ESINumber','ESI Number','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" class="form-control" id="ESINumber" value="@((Model!=null && Model.EmployeeMaster!=null) ? Model.EmployeeMaster.ESINumber : "")" name="ESINumber" maxlength="20" placeholder="ESI Number" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ESINumber" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "UAN" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">UAN</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="UAN" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('UAN','UAN')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('UAN','UAN','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" class="form-control" id="UANNumber" name="UANNumber" maxlength="15" onkeyup="return checkTextEntry(event)" value="@((Model!=null && Model.EmployeeMaster!=null) ? Model.EmployeeMaster.UANNumber : "")" placeholder="UAN" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "UAN" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ConfirmationPeriod" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="ConfirmationPeriod">Confirmation Period (In Day)</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ConfirmationPeriod" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ConfirmationPeriod','ConfirmationPeriod')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ConfirmationPeriod','Confirmation Period (In Day)','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" class="form-control" id="ConfirmationPeriod" name="ConfirmationPeriod" value="@Model.EmployeeMaster.ConfirmationPeriod" placeholder="Confirmation Period (In Day)" onKeyPress="if(this.value.length==3) return false;" max="365" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ConfirmationPeriod" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "DOC" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="ConfirmationPeriod">Date Of Confirmation</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="DOC" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('DOC','DOC')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('DOC','Date Of Confirmation','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="DOC" name="DOC" value="@(Model.EmployeeMaster.DOC == null ? "" : ((DateTime)Model.EmployeeMaster.DOC).ToString("dd-MMM-yyyy"))" class="form-control flatpickr-date1" placeholder="DD-MMM-YYYY" readonly disabled @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "DOC" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "NoticePeriod" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="NoticePeriod">Notice Period (In Day)</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="NoticePeriod" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('NoticePeriod','NoticePeriod')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('NoticePeriod','Notice Period (In Day)','JobInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" class="form-control" id="NoticePeriod" name="NoticePeriod" value="@Model.EmployeeMaster.NoticePeriod" placeholder="Notice Period (In Day)" onKeyPress="if(this.value.length==3) return false;" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "NoticePeriod" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>

                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>

                                    <button class="btn btn-primary btn-next" style="visibility:hidden">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    @*<button class="btn btn-primary" onclick="SaveEmployeeInfo('employeejobForm','/Employee/SaveEmployeeJobInfo')">*@
                                    <button class="btn btn-primary" onclick="ValidateAndSaveEmployee('employeejobForm','/Employee/SaveEmployeeJobInfo','JobInformation')">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Save and Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                    <!-- Profile Picture  -->
                    <div>
                        <input type="button" id="btnModalImageCrop" data-bs-toggle="modal" data-bs-target="#backDropModal" data-bs-backdrop="static" value="Test" style="display:none" />
                        <style>
                            #croppedImage {
                                max-width: 100%; /* This rule is very important, please do not ignore this! */
                                display: block;
                            }
                        </style>
                        <div class="modal fade" id="backDropModal" data-bs-backdrop="static" tabindex="-1" style="display: none;" aria-hidden="true">
                            <div class="modal-dialog modal-lg">
                                <form class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="backDropModalTitle">Crop Image</h5>
                                        <button style="visibility:hidden" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div style="width:100%;margin:auto">
                                            <img id="croppedImage" src="#" alt="Cropped Image" style="margin:auto">
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        @*<button type="button" class="btn btn-label-secondary" data-bs-dismiss="modal">Close</button>*@
                                        <button type="button" class="btn btn-primary" id="cropButton">Crop Image</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <form id="employeeportfolioForm" onSubmit="return false" enctype="multipart/form-data">
                        <div id="profile-picture" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Profile Picture<span style="font-size:14px; color:#ff0000">*</span></h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <div class="row g-3">
                                <div class="col-12">
                                    <div class="container">
                                        <div class="img-panel center">
                                            <div class="button_outer">
                                                <div class="btn_upload">
                                                    <input class="form-control" type="file" id="upload_file" accept="image/*" name="" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "upload_file" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                                    Upload Image
                                                </div>
                                                <div class="processing_bar"></div>
                                                <div class="success_box center"></div>
                                            </div>
                                        </div>
                                        <div class="error_msg"></div>
                                        <div class="uploaded_file_view" id="uploaded_view">
                                            <span class="file_remove">X</span>
                                            <img id="profileimagepreview" src="@Model.EmployeeMaster.Base64ProfileImage" "@((Model.EmployeeMaster.Base64ProfileImage == null) ? " style=display:none" : Model.EmployeeMaster.Base64ProfileImage.Trim() == "data:image/png;base64," ? " style=display:none" : "")" />
                                        </div>


                                    </div>
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next" style="visibility:hidden">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    <button class="btn btn-primary">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1" onclick="UploadEmployeeDocument('employeeportfolioForm','/Employee/UploadEmployeeProfileImage')">Save and Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>



                        </div>
                    </form>
                    <!-- Contact Details -->
                    <form id="employeecontactdetailForm" onSubmit="return false">
                        <div id="contact-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Contact Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            @{
                                dynamic employeeCurrentContact = null;
                                dynamic employeePermanentContact = null;

                                if (Model.EmployeeMaster.EmployeeContactDetails != null)
                                {
                                    employeeCurrentContact = Model.EmployeeMaster.EmployeeContactDetails.Where(r => r.ContactType.ToUpper() == "CURRENT").FirstOrDefault();
                                    countryId = (employeeCurrentContact == null ? 0 : (@employeeCurrentContact.CountryId == null ? 0 : @employeeCurrentContact.CountryId));
                                    stateId = (employeeCurrentContact == null ? 0 : (@employeeCurrentContact.StateId == null ? 0 : @employeeCurrentContact.StateId));
                                    cityId = (employeeCurrentContact == null ? 0 : (@employeeCurrentContact.CityId == null ? 0 : @employeeCurrentContact.CityId));
                                    employeePermanentContact = Model.EmployeeMaster.EmployeeContactDetails.Where(r => r.ContactType.ToUpper() == "PERMANENT").FirstOrDefault();
                                    pCountryId = (@employeePermanentContact == null ? 0 : (@employeePermanentContact.CountryId == null ? 0 : @employeePermanentContact.CountryId));
                                    pStateId = (@employeePermanentContact == null ? 0 : (@employeePermanentContact.StateId == null ? 0 : @employeePermanentContact.StateId));
                                    pCityId = (@employeePermanentContact == null ? 0 : (@employeePermanentContact.CityId == null ? 0 : @employeePermanentContact.CityId));
                                }

                            }
                            <div class="row g-3" id="currentDiv">
                                <div class="col-12">
                                    <h6><strong>CURRENT ADDRESS</strong></h6>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Address1" && x.IsMandatory == true).Count() == 1 ? " required" : "")" id="lblAddress1" for="">Current Address 1 :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Address1" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Address1','Address1')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Address1','Current Address 1','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Address1" name="Address1" value="@(employeeCurrentContact==null?"":(@employeeCurrentContact.Address1==null?"":@employeeCurrentContact.Address1))" class="form-control" placeholder="Current Address 1" maxlength="100" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Address1" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Address2" && x.IsMandatory == true).Count() == 1 ? " required" : "")" id="lblAddress2" name="lblAddress2" for="">Address Line 2 :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Address2" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Address2','Address2')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Address2','Address Line 2','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Address2" name="Address2" value="@(employeeCurrentContact==null?"":(@employeeCurrentContact.Address2==null?"":@employeeCurrentContact.Address2))" class="form-control " placeholder="Address Line 2" maxlength="100" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Address2" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Landmark" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Landmark :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Landmark" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Landmark','Landmark')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Landmark','Landmark','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Landmark" name="Landmark" value="@(employeeCurrentContact==null?"":(@employeeCurrentContact.Landmark==null?"":@employeeCurrentContact.Landmark))" class="form-control" placeholder="Landmark" maxlength="100" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Landmark" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Country :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="CountryId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('CountryId','CountryId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('CountryId','Country','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <div class="position-relative">
                                        <select id="CountryId" name="CountryId" onchange="javascript:PopulateCascadingDDL('/MastersKeyValue/StateKeyValue','CountryId','@countryId','StateId','@stateId','stateId','stateName','CityId')" class="select2 form-select select2-hidden-accessible" data-allow-clear="true" data-select2-id="multicol-country" tabindex="-1" aria-hidden="true" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                            <option value="0">Select Option</option>
                                            @if (Model.EmployeeMastersKeyValues.CountryKeyValues != null)
                                                foreach (var item in Model.EmployeeMastersKeyValues.CountryKeyValues)
                                                {
                                                    <option value="@item.CountryId" selected="@(item.CountryId==countryId ? true : false)"> @item.CountryName</option>
                                                }
                                        </select>
                                        @*<span asp-validation-for="CountryId" class="text-danger"></span>*@
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">State</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="StateId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('StateId','StateId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('StateId','State','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible" data-allow-clear="true" id="StateId" name="StateId" onchange="javascript:PopulateCascadingDDL('/MastersKeyValue/CityKeyValue','StateId','@stateId','CityId','@cityId','cityId','cityName')" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "StateId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>

                                    </select>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CityId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">City</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="CityId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('CityId','CityId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('CityId','City','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible" data-allow-clear="true" id="CityId" name="CityId" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CityId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>
                                    </select>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Pincode" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Pincode</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Pincode" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Pincode','Pincode')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Pincode','Pincode','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" id="Pincode" name="Pincode" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" value="@(employeeCurrentContact==null?"":(@employeeCurrentContact.Pincode==null?"":@employeeCurrentContact.Pincode))" class="form-control" placeholder="Pincode" maxlength="6" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Pincode" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ContactNum" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Contact Number</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ContactNum" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ContactNum','ContactNum')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ContactNum','Contact Number','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" id="ContactNum" class="form-control" placeholder="ContactNumber" maxlength="15" name="ContactNum" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ContactNum" && x.IsMandatory == true).Count() == 1 ? " required" : "") value="@(employeeCurrentContact == null ? "" : @employeeCurrentContact.ContactNum)" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" />
                                </div>
                                <div class="col-12"></div>
                            </div>
                            <div id="permanentDiv" class="row g-3">

                                <div class="col-sm-6">
                                    <h6><strong>PERMANENT ADDRESS</strong></h6>
                                </div>
                                <div class="col-sm-6" style=" text-align: right;">
                                    <div class="form-check custom-option custom-option-basic" style="border: 0;">
                                        <label class="form-check-label" for="customCheckTemp3">
                                            <input class="form-check-input" type="checkbox" value="" id="sameAsCurrent" onclick="javascript:CopyClearDataForPermanent()" />
                                            <span class="custom-option-header">
                                                <span class="h6 mb-0" style="line-height: 1.7;">Same as Current Address</span>
                                            </span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentAddress1" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Permanent Address 1 :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentAddress1" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentAddress1','PermanentAddress1')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentAddress1','Permanent Address 1','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PermanentAddress1" name="Address1" class="form-control" value="@(employeePermanentContact==null?"":(@employeePermanentContact.Address1==null?"":@employeePermanentContact.Address1))" placeholder="Address Line 1" maxlength="100" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentAddress1" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentAddress2" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Address Line 2 :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentAddress2" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentAddress2','PermanentAddress2')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentAddress2','Address Line 2','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PermanentAddress2" name="Address2" class="form-control" value="@(employeePermanentContact==null?"":(@employeePermanentContact.Address2==null?"":@employeePermanentContact.Address2))" placeholder="Address Line 2" maxlength="100" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentAddress2" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentLandmark" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Landmark :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentLandmark" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentLandmark','PermanentLandmark')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentLandmark','Landmark','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PermanentLandmark" name="Landmark" class="form-control" value="@(employeePermanentContact==null?"":(@employeePermanentContact.Landmark==null?"":@employeePermanentContact.Landmark))" placeholder="Landmark" maxlength="100" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentLandmark" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentCountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Country :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentCountryId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentCountryId','PermanentCountryId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentCountryId','Country','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <select id="PermanentCountryId" name="CountryId" onchange="javascript:PopulateCascadingDDL('/MastersKeyValue/StateKeyValue','PermanentCountryId','','PermanentStateId','@pStateId','stateId','stateName','CityId')" class="select2 form-select select2-hidden-accessible" data-allow-clear="true" tabindex="-1" aria-hidden="true" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentCountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>
                                        @if (Model.EmployeeMastersKeyValues.CountryKeyValues != null)
                                            foreach (var item in Model.EmployeeMastersKeyValues.CountryKeyValues)
                                            {
                                                <option value="@item.CountryId" selected="@(item.CountryId==pCountryId ? true : false)"> @item.CountryName</option>
                                            }
                                    </select>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentStateId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">State</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentStateId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentStateId','PermanentStateId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentStateId','State','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible" data-allow-clear="true" id="PermanentStateId" name="StateId" onchange="javascript:PopulateCascadingDDL('/MastersKeyValue/CityKeyValue','PermanentStateId','','PermanentCityId','@pCityId','cityId','cityName')" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentStateId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>

                                    </select>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentCityId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">City</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentCityId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentCityId','PermanentCityId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentCityId','City','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible" data-allow-clear="true" id="PermanentCityId" name="CityId" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentCityId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>

                                    </select>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentPincode" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Pincode</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentPincode" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentPincode','PermanentPincode')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Pincode','Pincode','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" id="PermanentPincode" name="Pincode" value="@(employeePermanentContact==null?"":(@employeePermanentContact.Pincode==null?"":@employeePermanentContact.Pincode))" class="form-control" placeholder="Pincode" maxlength="6" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentPincode" && x.IsMandatory == true).Count() == 1 ? " required" : "") oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentContactNum" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Contact Number</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentContactNum" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentContactNum','PermanentContactNum')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentContactNunm','Contact Number','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" id="PermanentContactNum" name="ContactNum" class="form-control" value="@(employeePermanentContact==null?"":(@employeePermanentContact.ContactNum==null?"":@employeePermanentContact.ContactNum))" placeholder="" maxlength="15" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentContactNum" && x.IsMandatory == true).Count() == 1 ? " required" : "") oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" />
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-label-secondary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next" style="visibility:hidden">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    @* <button class="btn btn-primary" onclick="SaveEmployeeInfo('employeecontactdetailForm','/EmployeeContact/SaveEmployeeContactInfo')">*@
                                    <button class="btn btn-primary" onclick="ValidateAndSaveEmployee('employeecontactdetailForm','/EmployeeContact/SaveEmployeeContactInfo','CurrentAddress')">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Save and Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    <input type="hidden" id="pEmployeeContactDetailId" name="pEmployeeContactDetailId" value="@(employeePermanentContact==null?"0":@employeePermanentContact.EmployeeContactDetailId)" />
                                    <input type="hidden" id="EmployeeContactDetailId" name="EmployeeContactDetailId" value="@(employeeCurrentContact==null?"0":@employeeCurrentContact.EmployeeContactDetailId)" />

                                </div>

                            </div>

                        </div>
                    </form>
                    <!-- Bank Details -->
                    <form id="employeeBankForm" onSubmit="return false">
                        <!-- Bank Account Info -->
                        <div id="bank-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Bank Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            @{
                                dynamic employeeBank = null;
                                var bankId = 0;

                                if (Model.EmployeeMaster.EmployeeBankDetails != null)
                                {
                                    employeeBank = Model.EmployeeMaster.EmployeeBankDetails.Select(x => x).FirstOrDefault();
                                    bankId = (employeeBank == null ? 0 : employeeBank.BankId == null ? 0 : employeeBank.BankId);
                                }
                            }
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "BankId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="country-vertical">Bank Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="BankId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('BankId','BankId','BankDetailId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('BankId','BankId','BankDetails')"></i></a>
                                        </span>
                                    </div>

                                    @Html.DropDownList("BankId", new SelectList(Model.EmployeeMastersKeyValues.BankKeyValues, "BankId", "BankName", bankId), "Select Option", htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible" })
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "AccountNo" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="first-name-vertical">Account Number</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="AccountNo" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('AccountNo','AccountNo','BankDetailId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('AccountNo','AccountNo','BankDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" id="AccountNo" name="AccountNo" maxlength="15" value="@(employeeBank==null?"":(employeeBank.AccountNo==null?"":employeeBank.AccountNo))" class="form-control" placeholder="Account Number" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "AccountNo" && x.IsMandatory == true).Count() == 1 ? " required" : "") oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "IFSCCode" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="last-name-vertical">IFSC Code</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="IFSCCode" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('IFSCCode','IFSCCode','BankDetailId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('IFSCCode','IFSCCode','BankDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="IFSCCode" name="IFSCCode" maxlength="15" onkeyup="return checkTextEntry(event)" value="@(employeeBank==null?"":(employeeBank.IFSCCode==null?"":employeeBank.IFSCCode))" class="form-control" placeholder="IFSC Code" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "IFSCCode" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next" style="visibility:hidden">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Next</span>
                                        <input type="hidden" id="BankDetailId" name="BankDetailId" value="@(employeeBank == null ? 0 : employeeBank.BankDetailId)" />
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    @*<button class="btn btn-primary" onclick="SaveEmployeeInfo('employeeBankForm','/EmployeeBank/SaveEmployeeBankInfo')">*@
                                    <button class="btn btn-primary" onclick="ValidateAndSaveEmployee('employeeBankForm','/EmployeeBank/SaveEmployeeBankInfo','BankDetails')">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Save and Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>

                        </div>
                    </form>
                    <!-- Family Details -->
                    <form id="employeefamilyForm" onSubmit="return false">
                        <!-- Family Details -->
                        <div id="family-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Family Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <!--div class="content-header mb-3">
                              <h6 class="mb-0">Personal Info</h6>
                              <small>Enter Your Personal Info.</small>
                            </div-->
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Relationship" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="country-vertical">Relationship</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Relationship" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Relationship','Relationship')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Relationship','Relationship','FamilyDetails')"></i></a>
                                        </span>
                                    </div>
                                    <select class="form-select form-control" id="Relationship" name="Relationship" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Relationship" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="">Select Option</option>
                                        <option>Father</option>
                                        <option>Mother</option>
                                        <option>Husband</option>
                                        <option>Wife</option>
                                        <option>Child</option>
                                    </select>
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "MemberDob" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Date of Birth</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="MemberDob" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('MemberDob','MemberDob')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('MemberDob','MemberDob','FamilyDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="MemberDob" name="MemberDob" class="form-control flatpickr-date1" placeholder="DD-MMM-YYYY" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "MemberDob" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "MemberName" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="first-name-vertical">Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="MemberName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('MemberName','MemberName')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('MemberName','MemberName','FamilyDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="MemberName" name="MemberName" class="form-control" maxlength="50" placeholder="Name" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "MemberName" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div style="height: 27px;">&nbsp;</div>
                                    @*<button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="SaveEmployeeInfo('employeefamilyForm','/EmployeeFamily/SaveEmployeeFamilyInfo')">*@
                                    <button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="ValidateAndSaveEmployee('employeefamilyForm','/EmployeeFamily/SaveEmployeeFamilyInfo','FamilyDetails')">
                                        <i class="bx bx-plus me-1"></i>
                                        <span class="align-middle">Save</span>
                                    </button>
                                    <input type="hidden" id="EmployeeFamilyDetailId" name="EmployeeFamilyDetailId" />
                                    <button class="btn btn-warning btn-sm pt-2 data-repeater-create" onclick="ResetForm('employeefamilyForm')">
                                        <i class="bx bx-refresh me-1"></i>
                                        <span class="align-middle">Reset</span>
                                    </button>
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>
                            <br />
                            <div class="row g-3 addShowData" style="width:auto">
                                <div class="card" id="List">
                                    <div class="card-body">

                                        <div style="clear:both"></div>
                                        <div class="card-datatable table-responsive text-nowrap">
                                            <table id="familyTable" class="datatables-ajax table List" id="List">
                                                <thead>
                                                    <tr>
                                                        <th>Member</th>
                                                        <th>DOB</th>
                                                        <th>Relationship</th>
                                                        <td>Action</td>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.EmployeeMaster.EmployeeFamilyDetails != null)
                                                        @foreach (var item in Model.EmployeeMaster.EmployeeFamilyDetails)
                                                        {
                                                            <tr>
                                                                <td><span id="MemberName_@item.EmployeeFamilyDetailId">@item.MemberName</span></td>
                                                                <td><span id="MemberDob_@item.EmployeeFamilyDetailId">@(item.MemberDob == null ? "" : ((DateTime)item.MemberDob).ToString("dd-MMM-yyyy"))</span></td>
                                                                <td><span id="Relationship_@item.EmployeeFamilyDetailId">@item.Relationship</span></td>

                                                                <td>
                                                                    <button class="btn btn-primary me-1" onclick="javascript:SetFormDetail('familyTable','EmployeeFamilyDetailId','@item.EmployeeFamilyDetailId')">Edit</button>
                                                                    <button class="btn btn-primary" onclick="DeleteRecordList('@item.EmployeeFamilyDetailId','familyTable')"> Delete</button>
                                                                </td>
                                                            </tr>
                                                        }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </form>
                    <!-- Academic Details -->
                    <form id="employeeacdemicForm" onSubmit="return false">
                        <!-- Academic Details -->
                        <div id="academic-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Academic Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <div class="row g-3">
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "InstituteName" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="last-name-vertical">Institute/University</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="InstituteName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('InstituteName','Institute Name')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('InstituteName','Institute Name','AcademicDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="InstituteName" name="InstituteName" class="form-control" maxlength="100" placeholder="Institute/ University" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "InstituteName" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "AcademicId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="country-vertical">Qualification Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="AcademicId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('AcademicId','AcademicId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('AcademicId','Academic Name','AcademicDetails')"></i></a>
                                        </span>
                                    </div>
                                    @Html.DropDownList("AcademicId", new SelectList(Model.EmployeeMastersKeyValues.AcademicKeyValues, "AcademicId", "AcademicName"), "Select Option", htmlAttributes: new { @class = "select2 form-select form-control select2-hidden-accessible", @required = "required" })

                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassingYear" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="country-vertical">Year of Passing</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassingYear" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassingYear','PassingYear')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassingYear','Passing Year','AcademicDetails')"></i></a>
                                        </span>
                                    </div>
                                    @Html.DropDownList("PassingYear", new SelectList(Model.EmployeeMastersKeyValues.GetYears(1970, DateTime.Now.Year - 1970 + 1), "Select PassingYear"), "Select Option", htmlAttributes: new { @class = "select2 form-select form-control select2-hidden-accessible", @name = "PassingYear" })
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Percentage" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="first-name-vertical">Percentage/grade</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Percentage" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Percentage','Percentage')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Percentage','Percentage','AcademicDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Percentage" name="Percentage" class="form-control" placeholder="Percentage/grade" maxlength="5" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Percentage" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>

                                <div class="col-sm-6">
                                    <div style="height: 27px;">&nbsp;</div>
                                    @*<button class="btn btn-primary btn-sm pt-2" data-repeater-create onclick="SaveEmployeeInfo('employeeacdemicForm','/EmployeeAcademic/SaveEmployeeAcademicInfo')">*@
                                    <button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="ValidateAndSaveEmployee('employeeacdemicForm','/EmployeeAcademic/SaveEmployeeAcademicInfo','AcademicDetails')">
                                        <i class="bx bx-plus me-1"></i>
                                        <span class="align-middle">Save</span>
                                    </button>
                                    <button class="btn btn-warning btn-sm pt-2 data-repeater-create" onclick="ResetForm('employeeacdemicForm')">
                                        <i class="bx bx-refresh me-1"></i>
                                        <span class="align-middle">Reset</span>
                                    </button>
                                    <input type="hidden" id="AcademicDetailId" name="AcademicDetailId" />
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>
                            <br />
                            <div class="row g-3 addShowData" style="width:auto">
                                <div class="card" id="List">
                                    <div class="card-body">

                                        <div style="clear:both"></div>
                                        <div class="card-datatable table-responsive text-nowrap">
                                            <table id="academicTable" class="datatables-ajax table List">
                                                <thead>
                                                    <tr>
                                                        <th>Institute/University</th>
                                                        <th>Qualification</th>
                                                        <th>Year Of Passing</th>
                                                        <th>Percentage</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.EmployeeMaster.EmployeeAcademicDetails != null)
                                                        @foreach (var item in Model.EmployeeMaster.EmployeeAcademicDetails)
                                                        {
                                                            <tr>
                                                                <td><span id="InstituteName_@item.AcademicDetailId">@item.InstituteName</span></td>
                                                                <td>
                                                                    <span id="AcademicId_@item.AcademicDetailId" data-selectedid="@item.AcademicId">
                                                                        @Model.EmployeeMastersKeyValues.AcademicKeyValues.Where(r => r.AcademicId == item.AcademicId).Select(x => x.AcademicName).FirstOrDefault()
                                                                    </span>
                                                                </td>
                                                                <td><span id="PassingYear_@item.AcademicDetailId" selectValue="@item.AcademicId">@item.PassingYear</span></td>
                                                                <td><span id="Percentage_@item.AcademicDetailId">@item.Percentage</span></td>
                                                                <td>
                                                                    <button class="btn btn-primary" onclick="javascript:SetFormDetail('academicTable','AcademicDetailId','@item.AcademicDetailId')">Edit</button>
                                                                    <button class="btn btn-primary" onclick="DeleteRecordList('@item.AcademicDetailId','academicTable')"> Delete</button>
                                                                    @*<button class="btn btn-primary" onclick="DeleteRecord('@item.AcademicDetailId')"> Delete</button>*@
                                                                </td>
                                                            </tr>
                                                        }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </form>
                    <!-- Experience Details -->
                    <form id="employeeexperienceForm" onSubmit="return false">
                        <!-- Experiences Background -->
                        <div id="experiences" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Experiences Backgroud</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <!--div class="content-header mb-3">
                              <h6 class="mb-0">Personal Info</h6>
                              <small>Enter Your Personal Info.</small>
                            </div-->
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CompanyName" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="first-name-vertical">Company Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="CompanyName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('CompanyName','CompanyName')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('CompanyName','Company Name','ExperiencesBackgroud')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="CompanyName" name="CompanyName" class="form-control" placeholder="Company Name" maxlength="100" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CompanyName" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ExperienceJobTitleId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="last-name-vertical">Job title</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ExperienceJobTitleId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ExperienceJobTitleId','ExperienceJobTitleId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ExperienceJobTitleId','Job Title','ExperiencesBackgroud')"></i></a>
                                        </span>
                                    </div>
                                    @*<input type="text" id="JobTitleId" name="JobTitleId" class="form-control" placeholder="Job title" />*@
                                    @Html.DropDownList("ExperienceJobTitleId", new SelectList(Model.EmployeeMastersKeyValues.JobTitleKeyValues, "JobTitleId", "JobTitle"), "Select Option", htmlAttributes: new { @class = "select2 form-select form-control select2-hidden-accessible", @required = "required" })

                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "JoinDate" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for=" ">Joined Date</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="JoinDate" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('JoinDate','JoinDate')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('JoinDate','Join Date','ExperiencesBackgroud')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="JoinDate" name="JoinDate" class="form-control flatpickr-date1" placeholder="DD-MMM-YYYY" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "JoinDate" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "LastWorkingDate" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Last working Date</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="LastWorkingDate" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('LastWorkingDate','Last Working Date')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('LastWorkingDate','LastWorkingDate','ExperiencesBackgroud')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="LastWorkingDate" name="LastWorkingDate" class="form-control flatpickr-date1" placeholder="DD-MMM-YYYY" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "LastWorkingDate" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div style="height: 27px;">&nbsp;</div>
                                    @*<button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="SaveEmployeeInfo('employeeexperienceForm','/EmployeeExperience/SaveEmployeeExperienceInfo')">*@
                                    <button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="ValidateAndSaveEmployee('employeeexperienceForm','/EmployeeExperience/SaveEmployeeExperienceInfo','ExperiencesBackgroud')">
                                        <i class="bx bx-plus me-1"></i>
                                        <span class="align-middle">Save</span>
                                    </button>
                                    <button class="btn btn-warning btn-sm pt-2 data-repeater-create" onclick="ResetForm('employeeexperienceForm')">
                                        <i class="bx bx-refresh me-1"></i>
                                        <span class="align-middle">Reset</span>
                                    </button>
                                    <input type="hidden" id="ExperienceDetailId" name="ExperienceDetailId" />
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>
                            <br />
                            <div class="row g-3 addShowData" style="width:auto">
                                <div class="card" id="List">
                                    <div class="card-body">

                                        <div style="clear:both"></div>
                                        <div class="card-datatable table-responsive text-nowrap">
                                            <table id="experienceTable" class="datatables-ajax table List dataTable" id="List">
                                                <thead>
                                                    <tr>
                                                        <th>Company Name</th>
                                                        <th>Job Title</th>
                                                        <th>Joining Date</th>
                                                        <th>Last Working Date</th>

                                                        <th>Action</th>
                                                    </tr>
                                                </thead>

                                                @if (Model.EmployeeMaster.EmployeeExperienceDetails != null)
                                                    @foreach (var item in Model.EmployeeMaster.EmployeeExperienceDetails.Where(x => x.EmployeeId == Model.EmployeeId).Select(x => x))
                                                    {
                                                        <tr>
                                                            <td><span id="CompanyName_@item.ExperienceDetailId">@item.CompanyName</span></td>
                                                            <td>
                                                                <span id="ExperienceJobTitleId_@item.ExperienceDetailId" data-selectedid="@item.ExperienceJobTitleId">
                                                                    @Model.EmployeeMastersKeyValues.JobTitleKeyValues.Where(r => r.JobTitleId == item.ExperienceJobTitleId).Select(x => x.JobTitle).FirstOrDefault()
                                                                </span>
                                                            </td>

                                                            <td><span id="JoinDate_@item.ExperienceDetailId">@(item.JoinDate == null ? "" : ((DateTime)item.JoinDate).ToString("dd-MMM-yyyy"))</span></td>
                                                            <td><span id="LastWorkingDate_@item.ExperienceDetailId">@(item.LastWorkingDate == null ? "" : ((DateTime)item.LastWorkingDate).ToString("dd-MMM-yyyy"))</span></td>
                                                            <td>
                                                                <button class="btn btn-primary" onclick="javascript:SetFormDetail('experienceTable','ExperienceDetailId','@item.ExperienceDetailId')">Edit</button>
                                                                <button class="btn btn-primary" onclick="DeleteRecordList('@item.ExperienceDetailId','experienceTable')"> Delete</button>
                                                                @*<button class="btn btn-primary" onclick="DeleteRecord('@item.ExperienceDetailId')"> Delete</button>*@
                                                            </td>
                                                        </tr>
                                                    }

                                            </table>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </form>
                    <!-- Certification Details -->
                    <form id="employeecertificationForm" onSubmit="return false">
                        <!-- Certification Details  -->
                        <div id="certification" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Certification Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CertificationName" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Certification Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="CertificationName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('CertificationName','CertificationName')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('CertificationName','Certification Name','CertificationDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="CertificationName" name="CertificationName" class="form-control" placeholder="Certification Name" maxlength="100" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CertificationName" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "YearOfCertification" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="confirm-password-vertical">Year of certification</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="YearOfCertification" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('YearOfCertification','YearOfCertification')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('YearOfCertification','Year Of Certification','CertificationDetails')"></i></a>
                                        </span>
                                    </div>
                                    @Html.DropDownList("YearOfCertification", new SelectList(Model.EmployeeMastersKeyValues.GetYears(1970, DateTime.Now.Year - 1970 + 1), DateTime.Now.Year), "Select Option", htmlAttributes: new { @class = "select2 form-select form-control select2-hidden-accessible", @required = "required" })
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Duration" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Duration</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Duration" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Duration','Duration')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Duration','Duration','CertificationDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Duration" name="Duration" class="form-control" placeholder="Duration" maxlength="50" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Duration" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div style="height: 27px;">&nbsp;</div>
                                    @*<button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="SaveEmployeeInfo('employeecertificationForm','/EmployeeCertification/SaveEmployeeCertificationInfo')">*@
                                    <button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="ValidateAndSaveEmployee('employeecertificationForm','/EmployeeCertification/SaveEmployeeCertificationInfo','CertificationDetails')">
                                        <i class="bx bx-plus me-1"></i>
                                        <span class="align-middle">Save</span>

                                    </button>
                                    <button class="btn btn-warning btn-sm pt-2 data-repeater-create" onclick="ResetForm('employeecertificationForm')">
                                        <i class="bx bx-refresh me-1"></i>
                                        <span class="align-middle">Reset</span>
                                    </button>
                                    <input type="hidden" id="CertificationDetailId" name="CertificationDetailId" />
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>
                            <br />
                            <div class="row g-3 addShowData" style="width:auto">
                                <div class="card" id="List">
                                    <div class="card-body">

                                        <div style="clear:both"></div>
                                        <div class="card-datatable table-responsive text-nowrap">
                                            <table id="certificationTable" class="datatables-ajax table List" id="List">
                                                <thead>
                                                    <tr>
                                                        <th>Certification Name</th>
                                                        <th>Year Of Certification Title</th>
                                                        <th>Duration</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.EmployeeCertificationDetails != null)
                                                        @foreach (var item in Model.EmployeeMaster.EmployeeCertificationDetails.Where(x => x.EmployeeId == Model.EmployeeId).Select(x => x))
                                                        {
                                                            <tr>
                                                                <td><span id="CertificationName_@item.CertificationDetailId">@item.CertificationName</span></td>
                                                                <td><span id="YearOfCertification_@item.CertificationDetailId">@item.YearOfCertification</span></td>
                                                                <td><span id="Duration_@item.CertificationDetailId">@item.Duration</span></td>
                                                                <td>
                                                                    <button class="btn btn-primary" onclick="javascript:SetFormDetail('certificationTable','CertificationDetailId','@item.CertificationDetailId')">Edit</button>
                                                                    <button class="btn btn-primary" onclick="DeleteRecordList('@item.CertificationDetailId','certificationTable')"> Delete</button>
                                                                    @*<button class="btn btn-primary" onclick="DeleteRecord('@item.CertificationDetailId')"> Delete</button>*@
                                                                </td>
                                                            </tr>
                                                        }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>

                            </div>

                        </div>
                    </form>
                    <!-- Reference Details -->
                    <form id="employeereferenceForm" onSubmit="return false">
                        <!-- Reference Details  -->
                        <div id="reference-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Reference Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>

                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PersonName" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PersonName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PersonName','PersonName')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PersonName','Person Name','ReferenceDetails')"></i></a>
                                        </span>
                                    </div>

                                    <input type="text" id="PersonName" name="PersonName" class="form-control" placeholder="Name" maxlength="50" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PersonName" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                @* <div class="col-sm-6">
                                <label class="form-label" for="confirm-password-vertical">ReferenceOf By</label>
                                @Html.DropDownList("ReferenceOf",new SelectList(Model.EmployeeMastersKeyValues.EmployeeKeyValues,"EmployeeId", "EmployeeName"),"Select ReferenceOf",htmlAttributes: new { @class = "form-select",@name="ReferenceOf"})
                                </div>*@
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PresentCompany" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Present Company</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PresentCompany" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PresentCompany','PresentCompany')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PresentCompany','Present Company','ReferenceDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PresentCompany" name="PresentCompany" class="form-control" placeholder="Present Company" maxlength="100" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PresentCompany" && x.IsMandatory == true).Count() == 1 ? " required" : "") />

                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReferenceDesignation" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Designation</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ReferenceDesignation" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ReferenceDesignation','ReferenceDesignation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ReferenceDesignation','Reference Designation','ReferenceDetails')"></i></a>
                                        </span>

                                    </div>
                                    <input type="text" id="ReferenceDesignation" name="ReferenceDesignation" class="form-control" placeholder="Designation" maxlength="50" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReferenceDesignation" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>

                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReferenceContactNo" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Contact No</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ReferenceContactNo" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ReferenceContactNo','ReferenceContactNo')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ReferenceContactNo','Reference ContactNo','ReferenceDetails')"></i></a>
                                        </span>

                                    </div>

                                    <input type="number" id="ReferenceContactNo" name="ReferenceContactNo" class="form-control" placeholder="Contact No" maxlength="15" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReferenceContactNo" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReferenceMobileNo" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Mobile No</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ReferenceMobileNo" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ReferenceMobileNo','ReferenceMobileNo')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ReferenceMobileNo','Reference MobileNo','ReferenceDetails')"></i></a>
                                        </span>

                                    </div>
                                    <input type="number" id="ReferenceMobileNo" name="ReferenceMobileNo" class="form-control" placeholder="Mobile No" maxlength="15" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReferenceMobileNo" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "HowYouKnow" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">How do you know him/her </label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="HowYouKnow" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('HowYouKnow','HowYouKnow')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('HowYouKnow','How You Know','ReferenceDetails')"></i></a>
                                        </span>

                                    </div>
                                    <input type="text" id="HowYouKnow" name="HowYouKnow" class="form-control" placeholder="How do you know him/her" maxlength="100" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "HowYouKnow" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div style="height: 27px;">&nbsp;</div>
                                    @*<button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="SaveEmployeeInfo('employeereferenceForm','/EmployeeReference/SaveEmployeeReferenceInfo')">*@
                                    <button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="ValidateAndSaveEmployee('employeereferenceForm','/EmployeeReference/SaveEmployeeReferenceInfo','ReferenceDetails')">
                                        <i class="bx bx-plus me-1"></i>
                                        <span class="align-middle">Save</span>
                                    </button>
                                    <input type="hidden" id="ReferenceOf" name="ReferenceOf" value="@Model.EmployeeMaster.EmployeeId" />
                                    <button class="btn btn-warning btn-sm pt-2 data-repeater-create" onclick="ResetForm('employeereferenceForm')">
                                        <i class="bx bx-refresh me-1"></i>
                                        <span class="align-middle">Reset</span>
                                    </button>
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    @* <input type="hidden" id="EmployeeId" name="EmployeeId" value="@Model.EmployeeId" />
                                    <input type="hidden" id="ClientId" name="ClientId" value="@Model.ClientId" />
                                    <input type="hidden" id="UnitId" name="UnitId" value="@Model.UnitId" />
                                    <input type="hidden" id="FormName" name="FormName" />
                                    <input type="hidden" id="InfoFillingStatus" name="InfoFillingStatus" value="@Model.InfoFillingStatus" />*@
                                    <input type="hidden" id="EmployeeReferenceId" name="EmployeeReferenceId" />
                                    <button class="btn btn-primary btn-next">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    @*<button class="btn btn-success btn-submit" onclick="SaveEmployeeInfo('finalSubmit','/Employee/FinalDataSubmit')">Submit</button>*@
                                </div>
                            </div>
                            <br />
                            <div class="row g-3 addShowData" style="width:auto">
                                <div class="card" id="List">
                                    <div class="card-body">

                                        <div style="clear:both"></div>
                                        <div class="card-datatable table-responsive text-nowrap">
                                            <table id="referenceTable" class="datatables-ajax table List dataTable" id="List">
                                                <thead>
                                                    <tr>
                                                        <th>Pserson Name</th>
                                                        <th>Present Company</th>
                                                        <th>Designation</th>
                                                        @*  <th>Contact No</th> *@
                                                        <th>Mobile No</th>
                                                        <th>How Do you Know</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.EmployeeMaster.EmployeeReferenceDetails != null)
                                                        @foreach (var item in Model.EmployeeMaster.EmployeeReferenceDetails)
                                                        {
                                                            <tr>
                                                                <td><span id="PersonName_@item.EmployeeReferenceId">@item.PersonName</span></td>
                                                                @*<td><span id="EmployeeId_@item.EmployeeReferenceId">@item.EmployeeId</span></td>*@
                                                                @*  <td>
                                                        <span id="ReferenceOf_@item.EmployeeReferenceId" data-selectedid="@item.EmployeeReferenceId">
                                                        @Model.EmployeeMastersKeyValues.EmployeeKeyValues.Where(r=>r.EmployeeId==item.ReferenceOf).Select(x => x.EmployeeName).FirstOrDefault()
                                                        </span>
                                                        </td>*@
                                                                <td><span id="PresentCompany_@item.EmployeeReferenceId">@item.PresentCompany</span></td>
                                                                <td><span id="ReferenceDesignation_@item.EmployeeReferenceId">@item.ReferenceDesignation</span></td>
                                                                @*  <td><span id="ReferenceContactNo_@item.EmployeeReferenceId">@item.ReferenceContactNo</span></td> *@
                                                                <td><span id="ReferenceMobileNo_@item.EmployeeReferenceId">@item.ReferenceMobileNo</span></td>
                                                                <td><span id="HowYouKnow_@item.EmployeeReferenceId">@item.HowYouKnow</span></td>

                                                                <td>
                                                                    <button class="btn btn-primary" onclick="javascript:SetFormDetail('referenceTable','EmployeeReferenceId','@item.EmployeeReferenceId')">Edit</button>
                                                                    <button class="btn btn-primary" onclick="DeleteRecordList('@item.EmployeeReferenceId','referenceTable')"> Delete</button>
                                                                    @*<button class="btn btn-primary" onclick="DeleteRecord('@item.EmployeeReferenceId')"> Delete</button>*@
                                                                </td>
                                                            </tr>
                                                        }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </form>
                    <!-- Passport Details -->
                    <form id="employeepassportdetailsForm" onSubmit="return false">
                        <!-- Reference Details  -->
                        <div id="passport-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Passport Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <div class="row g-3">
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportNumber" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Passport No</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassportNumber" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassportNumber','PassportNumber')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassportNumber','Passport Number','PassportDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PassportNumber" name="PassportNumber" value="@Model.EmployeeMaster.PassportNumber" maxlength="10" class="form-control" placeholder="Passport No" onkeyup="return checkTextEntry(event)" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportNumber" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueDate" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="PassportIssueDate">Issue Date</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassportIssueDate" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassportIssueDate','PassportIssueDate')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassportIssueDate','Issue Date','PassportDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PassportIssueDate" name="PassportIssueDate" class="form-control flatpickr-date1" value="@Model.EmployeeMaster.PassportIssueDate" placeholder="DD-MMM-YYYY" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueDate" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportValidTillDate" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="PassportValidTillDate">Valid Till</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassportValidTillDate" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassportValidTillDate','PassportValidTillDate')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassportValidTillDate','Valid Till','PassportDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PassportValidTillDate" name="PassportValidTillDate" class="form-control flatpickr-date1" value="@Model.EmployeeMaster.PassportValidTillDate" placeholder="DD-MMM-YYYY" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportValidTillDate" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueCountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="PassportIssueCountryId">Country</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassportIssueCountryId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassportIssueCountryId','PassportIssueCountryId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassportIssueCountryId','Country','PassportDetails')"></i></a>
                                        </span>
                                    </div>

                                    <select id="PassportIssueCountryId" name="PassportIssueCountryId" onchange="javascript:PopulateCascadingDDL('/MastersKeyValue/StateKeyValue','PassportIssueCountryId','@Model.EmployeeMaster.PassportIssueCountryId','PassportIssueStateId','@Model.EmployeeMaster.PassportIssueStateId','stateId','stateName')" class="select2 form-select select2-hidden-accessible" data-allow-clear="true" data-select2-id="multicol-country" tabindex="-1" aria-hidden="true" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueCountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>
                                        @if (Model.EmployeeMastersKeyValues.CountryKeyValues != null)
                                            foreach (var item in Model.EmployeeMastersKeyValues.CountryKeyValues)
                                            {
                                                <option value="@item.CountryId" selected="@(item.CountryId==Model.EmployeeMaster.PassportIssueCountryId ? true : false)"> @item.CountryName</option>
                                            }
                                    </select>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueStateId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="PassportIssueStateId">State</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassportIssueStateId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassportIssueStateId','PassportIssueStateId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassportIssueStateId','State','PassportDetails')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible" data-allow-clear="true" id="PassportIssueStateId" name="PassportIssueStateId" onchange="javascript:PopulateCascadingDDL('/MastersKeyValue/CityKeyValue','PassportIssueStateId','@Model.EmployeeMaster.PassportIssueStateId','PassportIssueCityId','@Model.EmployeeMaster.PassportIssueCityId','cityId','cityName')" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueStateId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>

                                    </select>
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueCityId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="PassportIssueCityId">City</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassportIssueCityId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassportIssueCityId','PassportIssueCityId')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassportIssueCityId','City','PassportDetails')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible" data-allow-clear="true" id="PassportIssueCityId" name="PassportIssueCityId" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueCityId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>
                                    </select>
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>

                                    <button class="btn btn-primary btn-next" style="visibility:hidden">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    @*<button class="btn btn-primary" onclick="SaveEmployeeInfo('employeepassportdetailsForm','/Employee/SaveEmployeePassportInfo')">*@
                                    <button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="ValidateAndSaveEmployee('employeepassportdetailsForm','/Employee/SaveEmployeePassportInfo','PassportDetails')">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Save and Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    @*<button class="btn btn-success btn-submit" onclick="SaveEmployeeInfo('finalSubmit','/Employee/FinalDataSubmit')">Submit</button>*@
                                </div>
                            </div>
                        </div>
                    </form>
                    <!-- Langauge Details -->
                    <form id="employeelanguagesForm" onSubmit="return false">
                        <!-- Sepration Details -->
                        <div id="employee-languages" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Languages</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>

                            <div class="row g-3">
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "LanguageId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="Language">Language</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="LanguageId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('LanguageId','Language')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('LanguageId','Language','Languages')"></i></a>
                                        </span>
                                    </div>
                                    @Html.DropDownList("LanguageId", new SelectList(Model.EmployeeMastersKeyValues.LanguageKeyValue, "LanguageId", "Language", @Model.EmployeeMaster.LanguageId), "Select Language", htmlAttributes: new { @class = "form-select form-control" })
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "RWS" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Proficiency</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="RWS" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('RWS','RWS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('RWS','Read Write Speek','Languages')"></i></a>
                                        </span>
                                    </div>
                                    <div>
                                        <input type="checkbox" id="Read" name="Read" /> Read
                                        <input type="checkbox" id="Write" name="Write" /> Write
                                        <input type="checkbox" id="Speak" name="Speak" /> Speak
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div style="height: 27px;">&nbsp;</div>
                                    @*<button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="SaveEmployeeInfo('employeelanguagesForm','/EmployeeLanguageDetail/SaveEmployeeLanguageInfo')">*@
                                    <button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="ValidateAndSaveEmployee('employeelanguagesForm','/EmployeeLanguageDetail/SaveEmployeeLanguageInfo','Language')">
                                        <i class="bx bx-plus me-1"></i>
                                        <span class="align-middle">Save</span>
                                    </button>
                                    <input type="hidden" id="LanguageOf" name="LanguageOf" value="@Model.EmployeeMaster.EmployeeId" />
                                    <input type="hidden" id="EmployeeLanguageDetailId" name="EmployeeLanguageDetailId" />
                                    <button class="btn btn-warning btn-sm pt-2 data-repeater-create" onclick="ResetForm('employeelanguagesForm')">
                                        <i class="bx bx-refresh me-1"></i>
                                        <span class="align-middle">Reset</span>
                                    </button>
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <input type="hidden" id="EmployeeId" name="EmployeeId" value="@Model.EmployeeMaster.EmployeeId" />

                                    @{
                                        string EnycEmployeeId = "";
                                        if (Model != null && Model.EmployeeMaster != null && Model.EmployeeMaster.EmployeeId > 0)
                                        {
                                            EnycEmployeeId = CommonHelper.EncryptURLHTML(Model.EmployeeMaster.EmployeeId.ToString());
                                        }

                                    }

                                    <input type="hidden" id="EncEmployeeId" name="EncEmployeeId" value="@(EnycEmployeeId)" />
                                    <input type="hidden" id="ClientId" name="ClientId" value="@Model.ClientId" />
                                    <input type="hidden" id="UnitId" name="UnitId" value="@Model.UnitId" />
                                    <input type="hidden" id="LogInEmployeeId" name="UnitId" value="@Model.LogInEmployeeId" />
                                    <input type="hidden" id="FormName" name="FormName" />
                                    <input type="hidden" id="InfoFillingStatus" name="InfoFillingStatus" value="@Model.EmployeeMaster.InfoFillingStatus" />

                                    @*<button class="btn btn-primary btn-next">
                                    <span class="align-middle d-sm-inline-block d-none me-sm-1">Move Next</span>
                                    <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>*@
                                    @*<button class="btn btn-success btn-submit" onclick="SaveEmployeeInfo('finalSubmit','/Employee/FinalDataSubmit')">Submit</button>*@
                                    <button class="btn btn-success btn-submit" onclick="ValidateAndSaveEmployee('finalSubmit','/Employee/FinalDataSubmit','')">Submit</button>
                                </div>
                            </div>
                            <br />
                            <div class="row g-3 addShowData" style="width:auto">
                                <div class="card" id="List">
                                    <div class="card-body">

                                        <div style="clear:both"></div>
                                        <div class="card-datatable table-responsive text-nowrap">
                                            <table id="languageTable" class="datatables-ajax table List dataTable" id="List">
                                                <thead>
                                                    <tr>
                                                        <th>Language</th>
                                                        <th>Read</th>
                                                        <th>Write</th>
                                                        <th>Speak</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.EmployeeMaster.EmployeeLanguageDetails != null)
                                                        @foreach (var item in Model.EmployeeMaster.EmployeeLanguageDetails)
                                                        {
                                                            if (item.IsActive == true)
                                                            {
                                                                <tr>
                                                                    <td><span id="LanguageId_@item.EmployeeLanguageDetailId" data-selectedid="@item.LanguageId">@Model.EmployeeMastersKeyValues.LanguageKeyValue.Where(x => x.LanguageId == @item.LanguageId).Select(p => p.Language).FirstOrDefault()</span></td>
                                                                    <td><span id="Read_@item.EmployeeLanguageDetailId">@(item.Read == true ? "Yes" : "No")</span></td>
                                                                    <td><span id="Write_@item.EmployeeLanguageDetailId">@(item.Write == true ? "Yes" : "No")</span></td>
                                                                    <td><span id="Speak_@item.EmployeeLanguageDetailId">@(item.Speak == true ? "Yes" : "No")</span></td>
                                                                    <td>
                                                                        <button class="btn btn-primary" onclick="javascript:SetFormDetail('languageTable','EmployeeLanguageDetailId','@item.EmployeeLanguageDetailId')">Edit</button>
                                                                        <button class="btn btn-primary" onclick="DeleteRecordList('@item.EmployeeLanguageDetailId','languageTable')"> Delete</button>
                                                                        @*<button class="btn btn-primary" onclick="DeleteRecordList('@item.EmployeeLanguageDetailId','languageTable')"> Delete</button>*@
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </form>
                    <!-- Sepration Details -->
                    <form id="employeeseperationForm" onSubmit="return false">
                        <!-- Sepration Details -->
                        <div id="seperation-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Seperation Details</h5>
                            </div>
                            @{
                                if (Model.EmployeeMaster.EmployeeExitResignationDetails != null && Model.EmployeeMaster.EmployeeExitResignationDetails.Count() > 0)
                                {
                                    var resignationDetails = Model.EmployeeMaster.EmployeeExitResignationDetails.FirstOrDefault();
                                    <div class="row g-3">
                                        <div class="col-md-12">
                                            <div style="padding: 20px;border: 2px solid green;" class="mb-5 section-resignationdetails">
                                                <div class="row g-3">
                                                    <h4 style="text-decoration: underline;">Resignation Details By Employee</h4>
                                                    @*<div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Employee Code</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@resignationDetails?.EmployeeCode">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Employee Name</label>
                                                        <input type="text" class="form-control  form-control-plaintext" readonly value="@resignationDetails?.EmployeeName">
                                                    </div>*@
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Resignation Date</label>
                                                        <input type="text" class="form-control  form-control-plaintext" readonly value="@(resignationDetails?.ResignationDate?.ToString("dd-MMM-yyyy"))">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Last Working Day</label>
                                                        <input type="text" class="form-control  form-control-plaintext" readonly value="@resignationDetails?.LastWorkingDate?.ToString("dd-MMM-yyyy")">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Reason For Leaving</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@resignationDetails?.ReasonForLeaving">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Comments</label>
                                                        <textarea class="form-control form-control-plaintext auto-resize" readonly>@(resignationDetails?.EmployeeComments)</textarea>
                                                    </div>
                                                </div>
                                            </div>
                                            <div style="padding: 20px;border: 2px solid green;" class="mb-5 section-resignationdetails">                                                
                                                <div class="row g-3">
                                                    <h4 style="text-decoration: underline;">Resignation Details By Manager</h4>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Resignation Date</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@resignationDetails?.ResignationDateManager?.ToString("dd-MMM-yyyy")">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Last Working Day</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@resignationDetails?.LastWorkingDateManager?.ToString("dd-MMM-yyyy")">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Notice Period Waive Off</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@(resignationDetails?.NoticePeriodWaiveOff == false ? "No" : "Yes")">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Eligible To Hire</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@(resignationDetails?.EligibleToHire == false ? "No" : "Yes")">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Reason For Leaving</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@resignationDetails?.ReasonForLeavingManager">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Document</label>
                                                        <br />
                                                        @{
                                                            if (resignationDetails?.DocumentName != null)
                                                            {
                                                                <a href="javascript:void(0)" onclick="DownloadResignationDocumentM('@resignationDetails?.encResignationListId','@resignationDetails?.DocumentName')">@(resignationDetails?.DocumentName == null ? "No Document Uploaded" : resignationDetails?.DocumentName)</a>
                                                            }
                                                            else
                                                            {
                                                                <input type="text" class="form-control form-control-plaintext" readonly placeholder="No Document Uploaded">
                                                            }
                                                        }
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Remarks</label>
                                                        <textarea class="form-control form-control-plaintext auto-resize" readonly>@(resignationDetails?.ManagerRemarks)</textarea>
                                                    </div>
                                                </div>
                                            </div>

                                            <div style="padding: 20px;border: 2px solid green;" class="mb-5 section-resignationdetails">
                                                <div class="row g-3">
                                                    <h4 style="text-decoration: underline;">Resignation Details By Admin</h4>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Resignation Date</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@resignationDetails?.ResignationDateAdmin?.ToString("dd-MMM-yyyy")">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Last Working Day</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@resignationDetails?.LastWorkingDateAdmin?.ToString("dd-MMM-yyyy")">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Notice Period Waive Off</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@(resignationDetails?.NoticePeriodWaiveOffAdmin == false ? "No" : "Yes")">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Eligible To Hire</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@(resignationDetails?.EligibleToHireAdmin == false ? "No" : "Yes")">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Exit Interview</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@(resignationDetails?.ActivateExitInterview == false ? "No" : "Yes")">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Skip Clearance Process</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@(resignationDetails?.ClearanceByPass == false ? "No" : "Yes")">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Reason For Leaving</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@resignationDetails?.ReasonForLeavingAdmin">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Document</label>
                                                        <br />
                                                        @{
                                                            if (resignationDetails?.DocumentNameAdmin != null)
                                                            {
                                                                <a href="javascript:void(0)" onclick="DownloadResignationDocumentM('@resignationDetails?.encResignationListId','@resignationDetails?.DocumentNameAdmin')">@(resignationDetails?.DocumentNameAdmin == null ? "No Document Uploaded" : resignationDetails?.DocumentNameAdmin)</a>
                                                            }
                                                            else
                                                            {
                                                                <input type="text" class="form-control form-control-plaintext" readonly placeholder="No Document Uploaded">
                                                            }
                                                        }
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">LWD Policy</label>
                                                        <input type="text" class="form-control form-control-plaintext" readonly value="@resignationDetails?.LWDPolicy">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <label class="form-label required" for="multicol-last-name">Remarks</label>
                                                        <textarea class="form-control form-control-plaintext auto-resize" readonly>@(resignationDetails?.AdminRemarks)</textarea>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>                                        
                                    </div>
                                }
                            }

                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- /Vertical Wizard -->
    </div>


</div>

@section scripts {
    <!-- Vendors JS -->
    <script src="~/assets/vendor/libs/bs-stepper/bs-stepper.js"></script>
    <script src="~/assets/vendor/libs/bootstrap-select/bootstrap-select.js"></script>
    <script src="~/assets/vendor/libs/select2/select2.js"></script>
    <!-- Page JS -->
    <script src="~/assets/js/form-wizard-numbered.js"></script>
    <script src="~/assets/js/form-wizard-validation.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

    @*  <script src="http://malsup.github.io/jquery.blockUI.js" type="text/javascript"></script>*@
    @*    <script type="text/javascript">
        $(document).ready(function () {
            $(".flatpickr-date1").flatpickr({
                monthSelectorType: 'static'
            });
        });


    </script>
    @*<script src="../../customjs/countrydatatabletable.js"></script>*@
    @* <script src="../../customjs/CommonFunction.js"></script>*@
    <script src="~/customjs/commonfunction.js"></script>
    <script src="~/customjs/employeevalidation.js"></script>
    <script src="~/customjs/employee/employee.js"></script>
    <script type="text/javascript">
        pageName = "Employee";

        jQuery(document).ready(function () {
            SetOpt("@Model.Opt");
            SetEmployeeGridCount();
            ProfileImageCrop();

            SetDDLRequiredAttribute();

            jQuery("#attachmentPopUp").hide();
            updateConfirmationDate();
            $("#ConfirmationPeriod").blur(function () {
                updateConfirmationDate();
            });
            $("#DOJ").blur(function () {
                updateConfirmationDate();
            });


            //Add the dirty class for change in case to any control in Upload document form
            //AddDirtyClass(".employeeDocs");
            jQuery(".employeeDocs").each(function (key) {
                jQuery(this).change(function () {
                    jQuery(this).addClass('dirty');
                });
            });





            // $("#upload_file").click(function () {
            //     $("#profileimagepreview").hide();
            // });

            //$("#upload_file")[0].files[0]
            //alert(jQuery("#profileimagepreview").prop("src"));
            if (jQuery("#profileimagepreview").prop("src") != "")
                jQuery("#uploaded_view").addClass("show");

            $(".file_remove").click(function () {
                $("#profileimagepreview").show();
            });

            var maxBirthdayDate = new Date();
            maxBirthdayDate.setFullYear(maxBirthdayDate.getFullYear() - 18);

            $(".flatpickr-date-dob").flatpickr({
                //monthSelectorType: 'static',
                dateFormat: "d-M-Y",
                maxDate: maxBirthdayDate
            });
            $(".flatpickr-date1").flatpickr({
                //monthSelectorType: 'static',
                dateFormat: "d-M-Y"

            });

            $("#employeeexperienceForm").find("[name='JoinDate']").flatpickr({
                dateFormat: "d-M-Y",
                maxDate: new Date()
            });
            $("#employeeexperienceForm").find("[name='LastWorkingDate']").flatpickr({
                dateFormat: "d-M-Y",
                maxDate: new Date()
            });

            var maxMemberDate = new Date();
            maxMemberDate.setFullYear(maxMemberDate.getFullYear() - 16);



            $("#family-details").find("[name='MemberDob']").flatpickr({
                dateFormat: "d-M-Y",
                maxDate: maxMemberDate
            });


            if (jQuery("#CountryId").val() > 0)
                jQuery("#CountryId").trigger("change");
            if (@stateId > 0)
                jQuery("#StateId").trigger("change");
            if (jQuery("#PermanentCountryId").val() > 0)
                jQuery("#PermanentCountryId").trigger("change");
            if (@pStateId > 0)
                jQuery("#PermanentStateId").trigger("change");
            if (jQuery("#PassportIssueCountryId").val() > 0)
                jQuery("#PassportIssueCountryId").trigger("change");



        });

        function SetEmployeeGridCount() {
            GridForm.FamilyGridCount = "@Model.EmployeeMaster.EmployeeFamilyDetails.Count";
            GridForm.AcademicGridCount = "@Model.EmployeeMaster.EmployeeAcademicDetails.Count";
            GridForm.ExperienceGridCount = "@Model.EmployeeMaster.EmployeeExperienceDetails.Count";
            GridForm.CertificationGridCount = "@Model.EmployeeMaster.EmployeeCertificationDetails.Count";
            GridForm.ReferenceGridCount = "@Model.EmployeeMaster.EmployeeReferenceDetails.Count";
            GridForm.LanguageGridCount = "@Model.EmployeeMaster.EmployeeLanguageDetails.Count";
        }


        $('#ConfirmationPeriod').change(function () {

            if ($("#ConfirmationPeriod").val() > 365) {
                $("#ConfirmationPeriod").val(0);
                $erroralert("Transaction Failed!", "Confirmation Period could not be more than 365 days!");

                return false;
            }

        });

        $('#NoticePeriod').change(function () {

            if ($("#NoticePeriod").val() > 365) {
                $("#NoticePeriod").val(0);
                $erroralert("Transaction Failed!", "Notice Period could not be more than 365 days!");
                UnblockUI();
                return false;
            }

        });


        function SetDDLRequiredAttribute() {
            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "MaritalStatusId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#MaritalStatusId").attr('required', 'required');
            }
            else
                jQuery("#MaritalStatusId").removeAttr('required');
            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReligionId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#ReligionId").attr('required', 'required');
            }
            else
                jQuery("#ReligionId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "BloodGroupId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#BloodGroupId").attr('required', 'required');
            }
            else
                jQuery("#BloodGroupId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "BankId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#BankId").attr('required', 'required');
            }
            else
                jQuery("#BankId").removeAttr('required');


            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "AcademicId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#AcademicId").attr('required', 'required');
            }
            else
                jQuery("#AcademicId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ExperienceJobTitleId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#ExperienceJobTitleId").attr('required', 'required');
            }
            else
                jQuery("#ExperienceJobTitleId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "JobTitleId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#JobTitleId").attr('required', 'required');
            }
            else
                jQuery("#JobTitleId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "DepartmentId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#DepartmentId").attr('required', 'required');
            }
            else
                jQuery("#DepartmentId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ManagerId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#ManagerId").attr('required', 'required');
            }
            else
                jQuery("#ManagerId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "HODId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#HODId").attr('required', 'required');
            }
            else
                jQuery("#HODId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "RoleId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#RoleId").attr('required', 'required');
            }
            else
                jQuery("#RoleId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "BandId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#BandId").attr('required', 'required');
            }
            else
                jQuery("#BandId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "YearOfCertification" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#YearOfCertification").attr('required', 'required');
            }
            else
                jQuery("#YearOfCertification").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassingYear" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#PassingYear").attr('required', 'required');
            }
            else
                jQuery("#PassingYear").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "LanguageId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#LanguageId").attr('required', 'required');
            }
            else
                jQuery("#LanguageId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "WorkLocationId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#WorkLocationId").attr('required', 'required');
            }
            else
                jQuery("#WorkLocationId").removeAttr('required');
        }

        function ShowAttachmentPopUp(fldName, lblName, refField) {
            var fldVal = jQuery("#" + fldName).val();
            if (fldVal == "") {
                $erroralert("Error!", "Enter or select control value to upload attachment!");
                return false;
            }
            //if(refField!="")
            //    jQuery("#ReferenceId").val(jQuery("#" + refField).val());
            jQuery("#FileName").val("");
            jQuery("#FieldName").val(fldName);
            jQuery("#attachmentPopUp").modal("show");
        }

        function updateConfirmationDate() {
            let cp = $("#ConfirmationPeriod").val();
            if (cp.length > 3) {
                $("#ConfirmationPeriod").val("0");
            }
            if ($("#ConfirmationPeriod").val() == 0) {
                $("#DOC").val($("#DOJ").val());
            }
            else {
                let d = moment($("#DOJ").val(), "DD-MMM-YYYY").add(cp, 'days');
                $("#DOC").val(d.format("DD-MMM-YYYY"));
            }


        }


        function ClearOptions(cntrlId) {
            var courseSelect = document.querySelector("#cntrlId");

            while (courseSelect.childNodes[0] != null) {
                courseSelect.childNodes[0].remove();
            }
        }

        function CapitalizeSmallFirstLetter(sStr, sChange) {
            var string = sStr;
            if (sChange == "S")
                newString = string[0].toLowerCase() + string.slice(1);
            else
                newString = string[0].toUpperCase() + string.slice(1);

            return newString
        }

        function GetContactData() {

            var formData = [];
            var permanentData = {};
            var currentData = {};
            //   formData.push({jQuery("#currentDiv :input").serialize()})
            // formData.push({jQuery("#permanentDiv :input").serialize()})

            var allCtrl = jQuery("[id^=Permanent]")

            allCtrl.each(function (i) {
                var curCtrl = jQuery(this);
                var dataKey = (curCtrl.attr('id')).replace("Permanent", "");
                permanentData[dataKey] = (IsNumeric(curCtrl.val()) ? parseInt(curCtrl.val()) : curCtrl.val());
                currentData[dataKey] = (IsNumeric((jQuery("#" + dataKey).val())) ? parseInt(jQuery("#" + dataKey).val()) : jQuery("#" + dataKey).val());
            });

            currentData["ContactType"] = "Current"
            currentData["EmployeeId"] = jQuery("#EmployeeId").val();
            currentData["EmployeeContactDetailId"] = jQuery("#EmployeeContactDetailId").val();
            formData.push(currentData)

            permanentData["ContactType"] = "Permanent"
            permanentData["EmployeeId"] = jQuery("#EmployeeId").val();
            permanentData["EmployeeContactDetailId"] = jQuery("#pEmployeeContactDetailId").val();
            formData.push(permanentData)

            return formData;
        }


        //PopulateCascadingDDL('/MastersKeyValue/StateKeyValue', 'PermanentCountryId', 'PermanentStateId', '@pStateId', 'stateId', 'stateName')


        function OpenWindows(src, type, target) {
            var myWindow = window.open("", "FileViwerWindow", "width=700,height=500");
            if (type == '')
                myWindow.document.write("<embed src='" + src + "' width='500' height='400' />");
            else
                myWindow.document.write("<embed src='" + src + "' type='" + type + "' width='500' height='400' />");
        }

        //  var nospecial = /^[^*|\":<>[\]{}`\\()';&$]+$/;
        function IsAlphaNumeric(e) {

            alert('test');
            alert(e.val());
            return;
            alert(e.length);
            var keyCode = e.keyCode || e.which;

            alert(keyCode);
            var regex = /^[A-Za-z0-9]+$/;

            //Validate TextBox value against the Regex.
            var isValid = regex.test(String.fromCharCode(keyCode));
            if (!isValid) {
                // return false;
                alert("Only Alphabets and Numbers allowed.");

            }

            // alert(isValid);
            return true;

        }

        // $('input:text').keyup(function (e) {

        //     var pastedData = e.target.value;


        //         var specialChars = "<>!#$%^&*()_+[]{}?:;|'\"\\,./~`-="
        //             for (i = 0; i < specialChars.length; i++) {
        //                     if (pastedData.indexOf(specialChars[i]) > -1) {
        //                    $(e.target).val('');
        //             alert('Your inserting illegal characters.');
        //                     return false
        //                 }
        //             }
        //             return true;
        // });

        // $('input:text').on("paste", function (e) {
        //     // var pastedData = e.target.value;
        //     var k, J;
        //       k=  e.keyCode;
        //     J = e.which;
        //     alert(k);
        //         alert(J);
        //         var pastedData = $('#FirstName').val();
        //     alert(pastedData);
        //     var specialChars = "<>!#$%^&*()_+[]{}?:;|'\"\\,./~`-="
        //         for (i = 0; i < specialChars.length; i++) {
        //                 if (pastedData.indexOf(specialChars[i]) > -1) {
        //                     alert('test');
        //                 return false
        //             }
        //         }
        //        // return true;


        // })



    </script>
}
