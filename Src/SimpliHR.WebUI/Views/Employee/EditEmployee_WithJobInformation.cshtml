@model SimpliHR.Infrastructure.Models.Employee.EmployeeMasterVM

@{
    int countryId, cityId, stateId;
    int pCountryId, pCityId, pStateId;

    countryId = cityId = stateId = pCountryId = pCityId = pStateId = 0;

    var x = Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "FirstName" && (x.IsMandatory == true)).Count();
    x = x;
}

@*Page CSS*@
<link rel="stylesheet" href="~/assets/vendor/libs/bs-stepper/bs-stepper.css" />
<link rel="stylesheet" href="~/assets/vendor/libs/bootstrap-select/bootstrap-select.css" />
<link rel="stylesheet" href="~/assets/vendor/libs/select2/select2.css" />

<style>
    menu-vertical .app-brand {
        /*padding-right: 0;
                                      padding-left: 2.3rem;*/
        justify-content:  center;
    }

    label.required:after {
        content: "*";
        color: red;
        font-size: 14px;
    }



    .img-panel {
        margin: 100px auto 40px;
        max-width: 500px;
        text-align: center;
    }

    .button_outer {
        background: #83ccd3;
        border-radius: 30px;
        text-align: center;
        height: 50px;
        width: 200px;
        display: inline-block;
        transition: .2s;
        position: relative;
        overflow: hidden;
    }

    .btn_upload {
        padding: 14px 30px 12px;
        color: #fff;
        text-align: center;
        position: relative;
        display: inline-block;
        overflow: hidden;
        z-index: 3;
        white-space: nowrap;
    }

        .btn_upload input {
            position: absolute;
            width: 100%;
            left: 0;
            top: 0;
            width: 100%;
            height: 105%;
            cursor: pointer;
            opacity: 0;
        }

    .file_uploading {
        width: 100%;
        height: 10px;
        margin-top: 20px;
        background: #ccc;
    }

        .file_uploading .btn_upload {
            display: none;
        }

    .processing_bar {
        position: absolute;
        left: 0;
        top: 0;
        width: 0;
        height: 100%;
        border-radius: 30px;
        background: #83ccd3;
        transition: 3s;
    }

    .file_uploading .processing_bar {
        width: 100%;
    }

    .success_box {
        display: none;
        width: 50px;
        height: 50px;
        position: relative;
    }

        .success_box:before {
            content: '';
            display: block;
            width: 17px;
            height: 25px;
            border-bottom: 6px solid #fff;
            border-right: 6px solid #fff;
            -webkit-transform: rotate(45deg);
            -moz-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
            position: absolute;
            left: 17px;
            top: 10px;
        }

    .file_uploaded .success_box {
        display: inline-block;
    }

    .file_uploaded {
        margin-top: 0;
        width: 50px;
        background: #83ccd3;
        height: 50px;
    }

    .uploaded_file_view {
        max-width: 300px;
        margin: 40px auto;
        text-align: center;
        position: relative;
        transition: .2s;
        opacity: 0;
        border: 2px solid #ddd;
        padding: 15px;
    }

    .file_remove {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: block;
        position: absolute;
        background: #aaa;
        line-height: 30px;
        color: #fff;
        font-size: 12px;
        cursor: pointer;
        right: -15px;
        top: -15px;
    }

        .file_remove:hover {
            background: #222;
            transition: .2s;
        }

    .uploaded_file_view img {
        max-width: 100%;
    }

    .uploaded_file_view.show {
        opacity: 1;
    }

    .error_msg {
        text-align: center;
        color: #f00
    }

    input.error {
        border: 1px solid red;
    }
</style>

@*Page CSS*@
<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Employee Details</h4>

    <!-- Default -->
    <div class="row">
        <!-- Vertical Wizard -->
        <div class="col-12 mb-4">
            <div class="bs-stepper wizard-numbered wizard-vertical vertical mt-2">
                <div class="bs-stepper-header">
                    <div class="step" data-target="#personal">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">1</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Personal Information</span>
                                <!--span class="bs-stepper-subtitle">Setup Account Details</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#job-information">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">2</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Job Information </span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#profile-picture">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">3</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Profile Picture</span>
                                <!--span class="bs-stepper-subtitle">Add personal info</span-->
                            </span>
                        </button>
                    </div><div class="line"></div>
                    <div class="line"></div>
                    <div class="step" data-target="#contact-details">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">4</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Contact Details</span>
                                <!--span class="bs-stepper-subtitle">Add personal info</span-->
                            </span>
                        </button>
                    </div>                  
                    <div class="line"></div>
                    <div class="step" data-target="#bank-details">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">5</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Bank Details</span>
                                <!--span class="bs-stepper-subtitle">Add personal info</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#family-details">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">6</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Family Details</span>
                                <!--span class="bs-stepper-subtitle">Add personal info</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#academic-details">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">7</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Academic Details</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#experiences">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">8</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Experiences Background</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#certification">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">9</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Certification Details</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#reference-details">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">10</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Reference Details</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#passport-details">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">11</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Passport Details</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#employee-languages">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">12</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Languages</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                    <div class="line"></div>
                    <div class="step" data-target="#seperation-details">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-circle">13</span>
                            <span class="bs-stepper-label mt-1">
                                <span class="bs-stepper-title">Seperation</span>
                                <!--span class="bs-stepper-subtitle">Add social links</span-->
                            </span>
                        </button>
                    </div>
                </div>

                <div class="bs-stepper-content" style="width: calc(100% - 18rem);">
                    <div id="errorDiv">
                        <p id="errorPara" class="error" style="color:red"></p>
                    </div>
                    <div class="modal fade " id="attachmentPopUp" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered1 modal-simple modal-add-new-cc">
                            <!-- Configure a few settings and attach camera -->
                            <h1>Upload Attachment</h1>
                            <div class="modal-content p-3 p-md-5 modal-dialog">
                                <div id="upload_attachment"></div>
                                <input type="file" class="employeeDocs" id="FileName" name="FileName" />
                                <button id="Uploadfile" name="Uploadfile" class="form-control" onclick="UploadAttachment('/EmployeeUploadDoc/SaveEditEmployeeUploadInfo')">Upload File</button>
                                <div id="results">Click upload file to post the file to....</div>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                <input type="hidden" id="FieldName" name="FieldName" />
                                <input type="hidden" id="TableReferenceId" name="TableReferenceId" />
                                <input type="hidden" id="TicketId" name="TicketId" />
                            </div>
                        </div>
                    </div>
                     <!-- Personal Details  -->
                    <form id="employeepersonalinfoForm" onSubmit="return false">
                        <!-- Personal Details -->
                        <div id="personal" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Personal Information</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="FirstName" && x.IsMandatory==true).Count()==1? " required":"")" for=""><span class="">First Name</span></label>  &nbsp;
                                        <span style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="FirstName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;" : "display:inline;")'>
                                            <a href="#" onclick="ShowAttachmentPopUp('FirstName','First Name','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>
                                            &nbsp;<a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('FirstName','First Name','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="FirstName" name="FirstName" maxlength="50" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "FirstName" && x.IsMandatory == true).Count() == 1 ? "required" : "") value="@Model.EmployeeMaster.FirstName" class="form-control editControl" placeholder="First Name" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="LastName" && x.IsMandatory==true).Count()==1? " required":"")" for=""><span class="">Last Name</span></label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="LastName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('LastName','Last Name','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('LastName','Last Name','PersonalInformation')"></i></a>
                                        </span>

                                    </div>
                                    <input type="text" id="LastName" name="LastName" maxlength="50" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "LastName" && x.IsMandatory == true).Count() == 1 ? "required" : "") value="@Model.EmployeeMaster.LastName" class="form-control editControl" placeholder="Last Name" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="MiddleName" && x.IsMandatory==true).Count()==1? " required":"")" for="">Middle Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="MiddleName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('MiddleName','Middle Name','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('MiddleName','Middle Name','PersonalInformation')"></i></a>
                                        </span>

                                    </div>
                                    <input type="text" id="MiddleName" name="MiddleName" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "MiddleName" && x.IsMandatory == true).Count() == 1 ? " required" : "") maxlength="50" value="@Model.EmployeeMaster.MiddleName" class="form-control editControl" placeholder="Middle Name" />

                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="GenderId" && x.IsMandatory==true).Count()==1? " required":"")" for="">Gender</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="GenderId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('GenderId','Gender','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('GenderId','Gender','PersonalInformation')"></i></a>
                                        </span>

                                    </div>
                                    <select class="select2 form-select editControl" id="GenderId" name="GenderId" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "GenderId" && x.IsMandatory == true).Count() == 1 ? "required" : "")>
                                        <option selected>Select Option</option>
                                        <option selected=@(@Model.EmployeeMaster.GenderId==1? true : false) value="1">Male</option>
                                        <option selected=@(@Model.EmployeeMaster.GenderId==2 ? true : false ) value="2">Female</option>
                                    </select>
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="DOB" && x.IsMandatory==true).Count()==1? " required":"")" for="">Date of Birth</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="DOB" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('DOB','DOB','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('DOB','Date of Birth','PersonalInformation')"></i></a>
                                        </span>

                                    </div>
                                    <input type="text" id="Dob" name="Dob" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "DOB" && x.IsMandatory == true).Count() == 1 ? " required" : "") value="@(Model.EmployeeMaster.Dob == null ? "" : ((DateTime)Model.EmployeeMaster.Dob).ToString("dd-MMM-yyyy"))" class="form-control flatpickr-date-dob editControl" placeholder="DD-MMM-YYYY" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ContactNo" && x.IsMandatory==true).Count()==1? " required":"")" for="">Contact Number</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ContactNo" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ContactNo','ContactNo','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ContactNo','Contact Number','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" id="ContactNo" name="ContactNo" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "DOB" && x.IsMandatory == true).Count() == 1 ? " required" : "") value="@Model.EmployeeMaster.ContactNo" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" maxlength="12" class="form-control editControl" placeholder="Contact Number" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmailId" && x.IsMandatory==true).Count()==1? " required":"")" for="">Email</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="EmailId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('EmailId','EmailId','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('EmailId','Email','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="email"
                                           id="EmailId" name="EmailId" maxlength="50" value="@Model.EmployeeMaster.EmailId"
                                           class="form-control editControl"
                                           placeholder="john.doe@email.com"
                                           aria-label="john.doe" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "EmailId" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="FatherName" && x.IsMandatory==true).Count()==1? " required":"")" for="">Father Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="FatherName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('FatherName','FatherName','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('FatherName','Father Name','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="FatherName" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "FatherName" && x.IsMandatory == true).Count() == 1 ? " required" : "") name="FatherName" maxlength="50" value="@Model.EmployeeMaster.FatherName" class="form-control editControl" placeholder="Father Name" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="SpouseName" && x.IsMandatory==true).Count()==1? " required":"")" for="">Spouse Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="SpouseName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('SpouseName','SpouseName','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('SpouseName','Spouse Name','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="SpouseName" maxlength="50" name="SpouseName" value="@Model.EmployeeMaster.SpouseName" class="form-control editControl" placeholder="Spouse Name" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "SpouseName" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="MaritalStatusId" && x.IsMandatory==true).Count()==1? " required":"")" for="">Marital Status</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="MaritalStatusId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('MaritalStatusId','MaritalStatusId','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('MaritalStatusId','Marital Status','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    @*@Html.DropDownListFor(x => x.MaritalStatusId,new SelectList(Model.EmployeeMastersKeyValues.MaritalStatusKeyValues,"MaritalStatusId", "MaritalStatusName", Model.MaritalStatusId),"Select Option",htmlAttributes: new { @class = "form-select" , @required="required"})*@
                                    @Html.DropDownList("MaritalStatusId",new SelectList(Model.EmployeeMastersKeyValues.MaritalStatusKeyValues,"MaritalStatusId", "MaritalStatusName",Model.EmployeeMaster.MaritalStatusId),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible" ,@name="MaritalStatusId"})
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ReligionId" && x.IsMandatory==true).Count()==1? " required":"")" for="">Religion</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ReligionId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ReligionId','ReligionId','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ReligionId','Religion','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    @*@Html.DropDownListFor(x => x.ReligionId,new SelectList(Model.EmployeeMastersKeyValues.ReligionKeyValues,"ReligionId", "ReligionName", Model.ReligionId),"Select Religion",htmlAttributes: new { @class = "form-select",@required="required"})*@
                                    @Html.DropDownList("ReligionId",new SelectList(Model.EmployeeMastersKeyValues.ReligionKeyValues,"ReligionId", "ReligionName",Model.EmployeeMaster.ReligionId),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible" ,@name="ReligionId" })

                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="BloodGroupId" && x.IsMandatory==true).Count()==1? " required":"")" for="">Blood Group</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="BloodGroupId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('BloodGroupId','BloodGroupId','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('BloodGroupId','Blood Group','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    @*@Html.DropDownListFor(x => x.BloodGroupId,new SelectList(Model.EmployeeMastersKeyValues.BloodGroupKeyValues,"BloodGroupId", "BloodGroupName", Model.BloodGroupId),"Select Option",htmlAttributes: new { @class = "form-select"})*@
                                    @Html.DropDownList("BloodGroupId",new SelectList(Model.EmployeeMastersKeyValues.BloodGroupKeyValues,"BloodGroupId", "BloodGroupName",Model.EmployeeMaster.BloodGroupId),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible" ,@name="BloodGroupId"})

                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Pannumber" && x.IsMandatory==true).Count()==1? " required":"")" for="">Pan Card</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Pannumber" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Pannumber','Pannumber','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Pannumber','Pan Card','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Pannumber" name="Pannumber" maxlength="10" value="@Model.EmployeeMaster.Pannumber" required class="form-control editControl" placeholder="Pan Card" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Pannumber" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="AadharNumber" && x.IsMandatory==true).Count()==1? " required":"")" for="">Aadhar</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="AadharNumber" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")' />
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('AadharNumber','AadharNumber','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('AadharNumber','Aadhar','PersonalInformation')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="AadharNumber" name="AadharNumber" value="@Model.EmployeeMaster.AadharNumber" required maxlength="12" class="form-control editControl" placeholder="Aadhar" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Pannumber" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-label-secondary btn-prev" disabled>
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>

                                    <button class="btn btn-primary btn-next" style="visibility:hidden">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    <button class="btn btn-primary" onclick="SaveEmployeeEditInfo()">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Save and Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                   @* <button class="btn btn-primary" onclick="SaveEmployeeInfo('employeepersonalinfoForm','/Employee/SaveEmployeePersonalInfo')">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Save and Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>*@
                                </div>
                            </div>
                        </div>
                    </form>
                    <!-- Profile Picture  -->
                    <form id="employeeportfolioForm" onSubmit="return false" enctype="multipart/form-data">
                        <div id="profile-picture" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Profile Picture<span style="font-size:14px; color:#ff0000">*</span></h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <div class="row g-3">
                                <div class="col-12">
                                    <div class="container">
                                        <div class="img-panel center">
                                            <div class="button_outer">
                                                <div class="btn_upload">
                                                    <input type="file" id="upload_file" class="editControl" name="" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "upload_file" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                                    Upload Image
                                                </div>
                                                <div class="processing_bar"></div>
                                                <div class="success_box center"></div>
                                            </div>
                                        </div>
                                        <div class="error_msg"></div>
                                        <div class="uploaded_file_view" id="uploaded_view">
                                            <span class="file_remove">X</span>
                                            <img id="profileimagepreview" src="@Model.EmployeeMaster.Base64ProfileImage" "@((Model.EmployeeMaster.Base64ProfileImage == null) ? " style=display:none" : Model.EmployeeMaster.Base64ProfileImage.Trim() == "data:image/png;base64," ? " style=display:none" : "")" />
                                        </div>


                                    </div>
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next" style="visibility:hidden">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    <button class="btn btn-primary">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1" onclick="UploadEmployeeDocument('employeeportfolioForm','/Employee/UploadEmployeeProfileImage')">Save and Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>

                        </div>
                    </form>                  
                    <!-- Contact Details -->
                    <form id="employeecontactdetailForm" onSubmit="return false">
                        <div id="contact-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Contact Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            @{
                                dynamic employeeCurrentContact = null;
                                dynamic employeePermanentContact = null;

                                if (Model.EmployeeMaster.EmployeeContactDetails != null)
                                {
                                    employeeCurrentContact = Model.EmployeeMaster.EmployeeContactDetails.Where(r => r.ContactType.ToUpper() == "CURRENT").FirstOrDefault();
                                    countryId = (employeeCurrentContact == null ? 0 : (@employeeCurrentContact.CountryId == null ? 0 : @employeeCurrentContact.CountryId));
                                    stateId = (employeeCurrentContact == null ? 0 : (@employeeCurrentContact.StateId == null ? 0 : @employeeCurrentContact.StateId));
                                    cityId = (employeeCurrentContact == null ? 0 : (@employeeCurrentContact.CityId == null ? 0 : @employeeCurrentContact.CityId));
                                    employeePermanentContact = Model.EmployeeMaster.EmployeeContactDetails.Where(r => r.ContactType.ToUpper() == "PERMANENT").FirstOrDefault();
                                    pCountryId = (@employeePermanentContact == null ? 0 : (@employeePermanentContact.CountryId == null ? 0 : @employeePermanentContact.CountryId));
                                    pStateId = (@employeePermanentContact == null ? 0 : (@employeePermanentContact.StateId == null ? 0 : @employeePermanentContact.StateId));
                                    pCityId = (@employeePermanentContact == null ? 0 : (@employeePermanentContact.CityId == null ? 0 : @employeePermanentContact.CityId));
                                }

                            }
                            <div class="row g-3" id="currentDiv">
                                <div class="col-12">
                                    <h6><strong>CURRENT ADDRESS</strong></h6>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Address1" && x.IsMandatory == true).Count() == 1 ? " required" : "")" id="lblAddress1" for="">Current Address 1 :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Address1" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Address1','Address1','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Address1','Current Address 1','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Address1" name="Address1" value="@(employeeCurrentContact==null?"":(@employeeCurrentContact.Address1==null?"":@employeeCurrentContact.Address1))" class="form-control editControl" placeholder="Current Address 1" maxlength="200" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Address1" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Address2" && x.IsMandatory == true).Count() == 1 ? " required" : "")" id="lblAddress2" name="lblAddress2" for="">Address Line 2 :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Address2" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Address2','Address2','PersonalInformation')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Address2','Address Line 2','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Address2" name="Address2" value="@(employeeCurrentContact==null?"":(@employeeCurrentContact.Address2==null?"":@employeeCurrentContact.Address2))" class="form-control editControl" placeholder="Address Line 2" maxlength="200" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Address2" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Landmark" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Landmark :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Landmark" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Landmark','Landmark','CURRENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Landmark','Landmark','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Landmark" name="Landmark" value="@(employeeCurrentContact==null?"":(@employeeCurrentContact.Landmark==null?"":@employeeCurrentContact.Landmark))" class="form-control editControl" placeholder="Landmark" maxlength="200" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Landmark" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Country :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="CountryId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('CountryId','CountryId','CURRENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('CountryId','Country','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <div class="position-relative">
                                        <select id="CountryId" name="CountryId" onchange="javascript:PopulateCascadingDDL('/MastersKeyValue/StateKeyValue','CountryId','@countryId','StateId','@stateId','stateId','stateName')" class="select2 form-select select2-hidden-accessible editControl" data-allow-clear="true" data-select2-id="multicol-country" tabindex="-1" aria-hidden="true" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                            <option value="0">Select Option</option>
                                            @if (Model.EmployeeMastersKeyValues.CountryKeyValues != null)
                                                foreach (var item in Model.EmployeeMastersKeyValues.CountryKeyValues)
                                                {
                                                    <option value="@item.CountryId" selected="@(item.CountryId==countryId ? true : false)"> @item.CountryName</option>
                                                }
                                        </select>
                                        @*<span asp-validation-for="CountryId" class="text-danger"></span>*@
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">State</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="StateId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('StateId','StateId''CURRENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('StateId','State','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible editControl" data-allow-clear="true" id="StateId" name="StateId" onchange="javascript:PopulateCascadingDDL('/MastersKeyValue/CityKeyValue','StateId','@stateId','CityId','@cityId','cityId','cityName')" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "StateId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>

                                    </select>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CityId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">City</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="CityId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('CityId','CityId''CURRENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('CityId','City','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible editControl" data-allow-clear="true" id="CityId" name="CityId" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CityId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>
                                    </select>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Pincode" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Pincode</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Pincode" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Pincode','Pincode''CURRENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Pincode','Pincode','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Pincode" name="Pincode" value="@(employeeCurrentContact==null?"":(@employeeCurrentContact.Pincode==null?"":@employeeCurrentContact.Pincode))" class="form-control editControl" placeholder="Pincode" required maxlength="10" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ContactNum" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Contact Number</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ContactNum" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ContactNum','ContactNum','CURRENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ContactNum','Contact Number','CURRENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="ContactNum" name="ContactNum" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ContactNum" && x.IsMandatory == true).Count() == 1 ? " required" : "") value="@(employeeCurrentContact == null ? "0" : @employeeCurrentContact.ContactNum)" class="form-control editControl" placeholder="ContactNumber" maxlength="10" />
                                </div>
                                <div class="col-12"></div>
                            </div>
                            <div id="permanentDiv" class="row g-3">

                                <div class="col-sm-6">
                                    <h6><strong>PERMANENT ADDRESS</strong></h6>
                                </div>
                                <div class="col-sm-6" style=" text-align: right;">
                                    <div class="form-check custom-option custom-option-basic" style="border: 0;">
                                        <label class="form-check-label" for="customCheckTemp3">
                                            <input class="form-check-input" type="checkbox" value="" id="sameAsCurrent" onclick="javascript:CopyClearDataForPermanent()" />
                                            <span class="custom-option-header">
                                                <span class="h6 mb-0" style="line-height: 1.7;">Same as Current Address</span>
                                            </span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentAddress1" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Permanent Address 1 :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentAddress1" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentAddress1','PermanentAddress1','PERMANENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentAddress1','Permanent Address 1','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PermanentAddress1" name="Address1" class="form-control editControl" value="@(employeePermanentContact==null?"":(@employeePermanentContact.Address1==null?"":@employeePermanentContact.Address1))" placeholder="Address Line 1" maxlength="200" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentAddress1" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentAddress2" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Address Line 2 :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentAddress2" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentAddress2','PermanentAddress2','PERMANENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentAddress2','Address Line 2','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PermanentAddress2" name="Address2" class="form-control editControl" value="@(employeePermanentContact==null?"":(@employeePermanentContact.Address2==null?"":@employeePermanentContact.Address2))" placeholder="Address Line 2" maxlength="200" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentAddress2" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentLandmark" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Landmark :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentLandmark" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentLandmark','PermanentLandmark','PERMANENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentLandmark','Landmark','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PermanentLandmark" name="Landmark" class="form-control editControl" value="@(employeePermanentContact==null?"":(@employeePermanentContact.Landmark==null?"":@employeePermanentContact.Landmark))" placeholder="Landmark" maxlength="200" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentLandmark" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentCountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Country :</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentCountryId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentCountryId','PermanentCountryId','PERMANENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentCountryId','Country','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <select id="PermanentCountryId" name="CountryId" onchange="javascript:PopulateCascadingDDL('/MastersKeyValue/StateKeyValue','PermanentCountryId','PermanentStateId','@pStateId','stateId','stateName')" class="select2 form-select select2-hidden-accessible editControl" data-allow-clear="true" tabindex="-1" aria-hidden="true" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentCountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>
                                        @if (Model.EmployeeMastersKeyValues.CountryKeyValues != null)
                                            foreach (var item in Model.EmployeeMastersKeyValues.CountryKeyValues)
                                            {
                                                <option value="@item.CountryId" selected="@(item.CountryId==pCountryId ? true : false)"> @item.CountryName</option>
                                            }
                                    </select>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentStateId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">State</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentStateId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentStateId','PermanentStateId','PERMANENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentStateId','State','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible editControl" data-allow-clear="true" id="PermanentStateId" name="StateId" onchange="javascript:PopulateCascadingDDL('/MastersKeyValue/CityKeyValue','PermanentStateId','PermanentCityId','@pCityId','cityId','cityName')" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentStateId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>

                                    </select>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentCityId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">City</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentCityId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentCityId','PermanentCityId','PERMANENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentCityId','City','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible editControl" data-allow-clear="true" id="PermanentCityId" name="CityId" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentCityId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>

                                    </select>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Pincode" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Pincode</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentPincode" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentPincode','PermanentPincode','PERMANENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Pincode','Pincode','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PermanentPincode" name="Pincode" value="@(employeePermanentContact==null?"":(@employeePermanentContact.Pincode==null?"":@employeePermanentContact.Pincode))" class="form-control editControl" placeholder="Pincode" maxlength="10" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Pincode" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentContactNum" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Contact Number</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PermanentContactNum" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PermanentContactNum','PermanentContactNum','PERMANENTADDRESS')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PermanentContactNum','Contact Number','PERMANENTADDRESS')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PermanentContactNum" name="ContactNum" class="form-control editControl" value="@(employeePermanentContact==null?"":(@employeePermanentContact.ContactNum==null?"":@employeePermanentContact.ContactNum))" placeholder="" maxlength="10" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PermanentContactNum" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-label-secondary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next" style="visibility:hidden">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    <button class="btn btn-primary" onclick="SaveEmployeeInfo('employeecontactdetailForm','/EmployeeContact/SaveEmployeeContactInfo')">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Save and Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    <input type="hidden" id="pEmployeeContactDetailId" name="pEmployeeContactDetailId" value="@(employeePermanentContact==null?"0":@employeePermanentContact.EmployeeContactDetailId)" />
                                    <input type="hidden" id="EmployeeContactDetailId" name="EmployeeContactDetailId" value="@(employeePermanentContact==null?"0":@employeePermanentContact.EmployeeContactDetailId)" />

                                </div>

                            </div>

                        </div>
                    </form>
                    <!-- Bank Details -->
                    <form id="employeeBankForm" onSubmit="return false">
                        <!-- Bank Account Info -->
                        <div id="bank-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Bank Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            @{
                                dynamic employeeBank = null;
                                var bankId = 0;

                                if (Model.EmployeeMaster.EmployeeBankDetails != null)
                                {
                                    employeeBank = Model.EmployeeMaster.EmployeeBankDetails.Select(x => x).FirstOrDefault();
                                    bankId = (employeeBank == null ? 0 : employeeBank.BankId);
                                }
                            }
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "BankId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="country-vertical">Bank Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="BankId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('BankId','BankId','BankDetailId','BankDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('BankId','BankId','BankDetails')"></i></a>
                                        </span>
                                    </div>

                                    @Html.DropDownList("BankId",new SelectList(Model.EmployeeMastersKeyValues.BankKeyValues,"BankId", "BankName",bankId),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible editControl"})
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "AccountNo" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="first-name-vertical">Account Number</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="AccountNo" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('AccountNo','AccountNo','BankDetailId','BankDetails','BankDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('AccountNo','AccountNo','BankDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="AccountNo" name="AccountNo" maxlength="25" required value="@(employeeBank==null?"":(employeeBank.AccountNo==null?"":employeeBank.AccountNo))" class="form-control editControl" placeholder="Account Number" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "AccountNo" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "IFSCCode" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="last-name-vertical">IFSC Code</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="IFSCCode" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('IFSCCode','IFSCCode','BankDetailId','BankDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('IFSCCode','IFSCCode','BankDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="IFSCCode" name="IFSCCode" maxlength="10" required value="@(employeeBank==null?"":(employeeBank.IFSCCode==null?"":employeeBank.IFSCCode))" class="form-control editControl" placeholder="IFSC Code" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "IFSCCode" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next" style="visibility:hidden">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Next</span>
                                        <input type="hidden" id="BankDetailId" name="BankDetailId" value="@(employeeBank == null ? 0 : employeeBank.BankDetailId)" />
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    <button class="btn btn-primary" onclick="SaveEmployeeInfo('employeeBankForm','/EmployeeBank/SaveEmployeeBankInfo')">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Save and Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>

                        </div>
                    </form>
                    <!-- Family Details -->
                    <form id="employeefamilyForm" onSubmit="return false">
                        <!-- Family Details -->
                        <div id="family-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Family Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <!--div class="content-header mb-3">
                              <h6 class="mb-0">Personal Info</h6>
                              <small>Enter Your Personal Info.</small>
                            </div-->
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Relationship" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="country-vertical">Relationship</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Relationship" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Relationship','Relationship')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Relationship','Relationship','FamilyDetails')"></i></a>
                                        </span>
                                    </div>
                                    <select class="form-select editControl" id="Relationship" name="Relationship" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Relationship" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="">Select Option</option>
                                        <option>Father</option>
                                        <option>Mother</option>
                                        <option>Wife</option>
                                        <option>Child</option>
                                    </select>
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "MemberDob" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Date of Birth</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="MemberDob" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('MemberDob','MemberDob','FamilyDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('MemberDob','MemberDob','FamilyDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="MemberDob" name="MemberDob" required class="form-control flatpickr-date1 editControl" placeholder="DD-MMM-YYYY" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "MemberDob" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "MemberName" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="first-name-vertical">Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="MemberName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('MemberName','MemberName','FamilyDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('MemberName','MemberName','FamilyDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="MemberName" name="MemberName" class="form-control editControl" placeholder="Name" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "MemberName" && x.IsMandatory == true).Count() == 1 ? " required" : "") maxlength="50" />
                                </div>
                                <div class="col-sm-6">
                                    <div style="height: 27px;">&nbsp;</div>
                                    <button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="SaveEmployeeEditInfo()">
                                        <i class="bx bx-plus me-1"></i>
                                        <span class="align-middle">Save</span>
                                    </button>
                                    <input type="hidden" id="EmployeeFamilyDetailId" name="EmployeeFamilyDetailId" />
                                    <button class="btn btn-warning btn-sm pt-2 data-repeater-create" onclick="ResetForm('employeefamilyForm')">
                                        <i class="bx bx-refresh me-1"></i>
                                        <span class="align-middle">Reset</span>
                                    </button>
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="row g-3 addShowData" style="width:auto">
                                <div class="card" id="List">
                                    <div class="card-body">

                                        <div style="clear:both"></div>
                                        <div class="card-datatable table-responsive text-nowrap">
                                            <table id="familyTable" class="datatables-ajax table List" id="List">
                                                <thead>
                                                    <tr>
                                                        <th>Member</th>
                                                        <th>DOB</th>
                                                        <th>Relationship</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.EmployeeMaster.EmployeeFamilyDetails != null)
                                                        @foreach (var item in Model.EmployeeMaster.EmployeeFamilyDetails)
                                                        {
                                                            <tr>
                                                                <td><span id="MemberName_@item.EmployeeFamilyDetailId">@item.MemberName</span></td>
                                                                <td><span id="MemberDob_@item.EmployeeFamilyDetailId">@(item.MemberDob == null ? "" : ((DateTime)item.MemberDob).ToString("dd-MMM-yyyy"))</span></td>
                                                                <td><span id="Relationship_@item.EmployeeFamilyDetailId">@item.Relationship</span></td>
                                                                <td>
                                                                    <button class="btn btn-primary" onclick="javascript:SetFormDetail('familyTable','EmployeeFamilyDetailId','@item.EmployeeFamilyDetailId')">Edit</button>
                                                                    <button class="btn btn-primary" onclick="DeleteRecord('@item.EmployeeFamilyDetailId')"> Delete</button>
                                                                </td>
                                                            </tr>
                                                        }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </form>
                    <!-- Academic Details -->
                    <form id="employeeacdemicForm" onSubmit="return false">
                        <!-- Academic Details -->
                        <div id="academic-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Academic Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <div class="row g-3">
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "InstituteName" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="last-name-vertical">Institute/University</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="InstituteName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('InstituteName','Institute Name')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('InstituteName','Institute Name','AcademicDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="InstituteName" name="InstituteName" required class="form-control editControl" placeholder="Institute/ University" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "InstituteName" && x.IsMandatory == true).Count() == 1 ? " required" : "") maxlength="100" />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "AcademicId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="country-vertical">Qualification Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="AcademicId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('AcademicId','AcademicId','AcademicDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('AcademicId','Academic Name','AcademicDetails')"></i></a>
                                        </span>
                                    </div>
                                    @Html.DropDownList("AcademicId",new SelectList(Model.EmployeeMastersKeyValues.AcademicKeyValues,"AcademicId", "AcademicName"),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible editControl" , @required="required"})

                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassingYear" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="country-vertical">Year of Passing</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassingYear" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassingYear','PassingYear','AcademicDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassingYear','Passing Year','AcademicDetails')"></i></a>
                                        </span>
                                    </div>
                                    @Html.DropDownList("PassingYear",new SelectList(Model.EmployeeMastersKeyValues.GetYears(1970,DateTime.Now.Year - 1970 + 1),"Select PassingYear"),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible editControl",@name="PassingYear" , @required="required"})
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Percentage" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="first-name-vertical">Percentage/grade</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Percentage" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Percentage','Percentage','AcademicDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Percentage','Percentage','AcademicDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="number" id="Percentage" name="Percentage" class="form-control editControl" placeholder="Percentage/grade" required maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Percentage" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>

                                <div class="col-sm-6">
                                    <div style="height: 27px;">&nbsp;</div>
                                    <button class="btn btn-primary btn-sm pt-2" data-repeater-create onclick="SaveEmployeeInfo('employeeacdemicForm','/EmployeeAcademic/SaveEmployeeAcademicInfo')">
                                        <i class="bx bx-plus me-1"></i>
                                        <span class="align-middle">Save</span>
                                    </button>
                                    <button class="btn btn-warning btn-sm pt-2 data-repeater-create" onclick="ResetForm('employeeacdemicForm')">
                                        <i class="bx bx-refresh me-1"></i>
                                        <span class="align-middle">Reset</span>
                                    </button>
                                    <input type="hidden" id="AcademicDetailId" name="AcademicDetailId" />
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="row g-3 addShowData" style="width:auto">
                                <div class="card" id="List">
                                    <div class="card-body">

                                        <div style="clear:both"></div>
                                        <div class="card-datatable table-responsive text-nowrap">
                                            <table id="academicTable" class="  table   List" id="List">
                                                <thead>
                                                    <tr>
                                                        <th>Institute/University</th>
                                                        <th>Qualification</th>
                                                        <th>Year Of Passing</th>
                                                        <th>Percentage</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.EmployeeMaster.EmployeeAcademicDetails != null)
                                                        @foreach (var item in Model.EmployeeMaster.EmployeeAcademicDetails)
                                                        {
                                                            <tr>
                                                                <td><span id="InstituteName_@item.AcademicDetailId">@item.InstituteName</span></td>
                                                                <td>
                                                                    <span id="AcademicId_@item.AcademicDetailId" data-selectedid="@item.AcademicId">
                                                                        @Model.EmployeeMastersKeyValues.AcademicKeyValues.Where(r=>r.AcademicId==item.AcademicId).Select(x => x.AcademicName).FirstOrDefault()
                                                                    </span>
                                                                </td>
                                                                <td><span id="PassingYear_@item.AcademicDetailId" selectValue="@item.AcademicId">@item.PassingYear</span></td>
                                                                <td><span id="Percentage_@item.AcademicDetailId">@item.Percentage</span></td>
                                                                <td>
                                                                    <button class="btn btn-primary" onclick="javascript:SetFormDetail('academicTable','AcademicDetailId','@item.AcademicDetailId')">Edit</button>
                                                                    <button class="btn btn-primary" onclick="DeleteRecord('@item.AcademicDetailId')"> Delete</button>
                                                                </td>
                                                            </tr>
                                                        }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </form>
                    <!-- Experience Details -->
                    <form id="employeeexperienceForm" onSubmit="return false">
                        <!-- Experiences Background -->
                        <div id="experiences" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Experiences Backgroud</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <!--div class="content-header mb-3">
                              <h6 class="mb-0">Personal Info</h6>
                              <small>Enter Your Personal Info.</small>
                            </div-->
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CompanyName" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="first-name-vertical">Company Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="CompanyName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('CompanyName','CompanyName')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('CompanyName','Company Name','ExperiencesBackgroud')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="CompanyName" name="CompanyName" required class="form-control editControl" placeholder="Company Name" maxlength="100" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CompanyName" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ExperienceJobTitleId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="last-name-vertical">Job title</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ExperienceJobTitleId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ExperienceJobTitleId','ExperienceJobTitleId','ExperiencesBackgroud')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ExperienceJobTitleId','Job Title','ExperiencesBackgroud')"></i></a>
                                        </span>
                                    </div>
                                    
                                    @Html.DropDownList("ExperienceJobTitleId",new SelectList(Model.EmployeeMastersKeyValues.JobTitleKeyValues,"JobTitleId", "JobTitle"),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible editControl" , @required="required"})

                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "JoinDate" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for=" ">Joined Date</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="JoinDate" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('JoinDate','JoinDate','ExperiencesBackgroud')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('JoinDate','Join Date','ExperiencesBackgroud')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="JoinDate" name="JoinDate" required class="form-control flatpickr-date1 editControl" placeholder="DD-MMM-YYYY" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "JoinDate" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "LastWorkingDate" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Last working Date</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="LastWorkingDate" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('LastWorkingDate','Last Working Date','ExperiencesBackgroud')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('LastWorkingDate','LastWorkingDate','ExperiencesBackgroud')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="LastWorkingDate" name="LastWorkingDate" required class="form-control flatpickr-date1 editControl" placeholder="DD-MMM-YYYY" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "LastWorkingDate" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div style="height: 27px;">&nbsp;</div>
                                    <button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="SaveEmployeeInfo('employeeexperienceForm','/EmployeeExperience/SaveEmployeeExperienceInfo')">
                                        <i class="bx bx-plus me-1"></i>
                                        <span class="align-middle">Save</span>
                                    </button>
                                    <button class="btn btn-warning btn-sm pt-2 data-repeater-create" onclick="ResetForm('employeeexperienceForm')">
                                        <i class="bx bx-refresh me-1"></i>
                                        <span class="align-middle">Reset</span>
                                    </button>
                                    <input type="hidden" id="ExperienceDetailId" name="ExperienceDetailId" />
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="row g-3 addShowData" style="width:auto">
                                <div class="card" id="List">
                                    <div class="card-body">

                                        <div style="clear:both"></div>
                                        <div class="card-datatable table-responsive text-nowrap">
                                            <table id="experienceTable" class="datatables-ajax table List dataTable" id="List">
                                                <thead>
                                                    <tr>
                                                        <th>Company Name</th>
                                                        <th>Job Title</th>
                                                        <th>Joining Date</th>
                                                        <th>Last Working Date</th>

                                                        <th>Action</th>
                                                    </tr>
                                                </thead>

                                                @if (Model.EmployeeMaster.EmployeeExperienceDetails != null)
                                                    @foreach (var item in Model.EmployeeMaster.EmployeeExperienceDetails.Where(x => x.EmployeeId == Model.EmployeeId).Select(x => x))
                                                    {
                                                        <tr>
                                                            <td><span id="CompanyName_@item.ExperienceDetailId">@item.CompanyName</span></td>
                                                            <td>
                                                                <span id="ExperienceJobTitleId_@item.ExperienceDetailId" data-selectedid="@item.ExperienceJobTitleId">
                                                                    @Model.EmployeeMastersKeyValues.JobTitleKeyValues.Where(r=>r.JobTitleId==item.ExperienceJobTitleId).Select(x => x.JobTitle).FirstOrDefault()
                                                                </span>
                                                            </td>

                                                            <td><span id="JoinDate_@item.ExperienceDetailId">@(item.JoinDate == null ? "" : ((DateTime)item.JoinDate).ToString("dd-MMM-yyyy"))</span></td>
                                                            <td><span id="LastWorkingDate_@item.ExperienceDetailId">@(item.LastWorkingDate == null ? "" : ((DateTime)item.LastWorkingDate).ToString("dd-MMM-yyyy"))</span></td>
                                                            <td>
                                                                <button class="btn btn-primary" onclick="javascript:SetFormDetail('experienceTable','ExperienceDetailId','@item.ExperienceDetailId')">Edit</button>
                                                                <button class="btn btn-primary" onclick="DeleteRecord('@item.ExperienceDetailId')"> Delete</button>
                                                            </td>
                                                        </tr>
                                                    }

                                            </table>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </form>
                     <!-- Certification Details -->
                    <form id="employeecertificationForm" onSubmit="return false">
                        <!-- Certification Details  -->
                        <div id="certification" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Certification Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CertificationName" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Certification Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="CertificationName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('CertificationName','CertificationName','CertificationDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('CertificationName','Certification Name','CertificationDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="CertificationName" name="CertificationName" required class="form-control" placeholder="Certification Name" maxlength="100" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "CertificationName" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "YearOfCertification" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="confirm-password-vertical">Year of certification</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="YearOfCertification" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('YearOfCertification','YearOfCertification','CertificationDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('YearOfCertification','Year Of Certification','CertificationDetails')"></i></a>
                                        </span>
                                    </div>
                                    @Html.DropDownList("YearOfCertification",new SelectList(Model.EmployeeMastersKeyValues.GetYears(1970,DateTime.Now.Year - 1970 + 1),DateTime.Now.Year),"Select Option",htmlAttributes: new { @class = "select2 form-select select2-hidden-accessible" , @required="required"})
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Duration" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Duration</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Duration" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Duration','Duration','CertificationDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Duration','Duration','CertificationDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Duration" name="Duration" required class="form-control editControl" placeholder="Duration" maxlength="50" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Duration" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div style="height: 27px;">&nbsp;</div>
                                    <button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="SaveEmployeeInfo('employeecertificationForm','/EmployeeCertification/SaveEmployeeCertificationInfo')">
                                        <i class="bx bx-plus me-1"></i>
                                        <span class="align-middle">Save</span>

                                    </button>
                                    <button class="btn btn-warning btn-sm pt-2 data-repeater-create" onclick="ResetForm('employeecertificationForm')">
                                        <i class="bx bx-refresh me-1"></i>
                                        <span class="align-middle">Reset</span>
                                    </button>
                                    <input type="hidden" id="CertificationDetailId" name="CertificationDetailId" />
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <button class="btn btn-primary btn-next">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                </div>
                            </div>
                            <br />
                            <div class="row g-3 addShowData" style="width:auto">
                                <div class="card" id="List">
                                    <div class="card-body">

                                        <div style="clear:both"></div>
                                        <div class="card-datatable table-responsive text-nowrap">
                                            <table id="certificationTable" class="datatables-ajax table List" id="List">
                                                <thead>
                                                    <tr>
                                                        <th>Certification Name</th>
                                                        <th>Year Of Certification Title</th>
                                                        <th>Duration</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.EmployeeCertificationDetails != null)
                                                        @foreach (var item in Model.EmployeeMaster.EmployeeCertificationDetails.Where(x => x.EmployeeId == Model.EmployeeId).Select(x => x))
                                                        {
                                                            <tr>
                                                                <td><span id="CertificationName_@item.CertificationDetailId">@item.CertificationName </span></td>
                                                                <td><span id="YearOfCertification_@item.CertificationDetailId">@item.YearOfCertification </span></td>
                                                                <td><span id="Duration_@item.CertificationDetailId">@item.Duration </span></td>
                                                                <td>
                                                                    <button class="btn btn-primary" onclick="javascript:SetFormDetail('certificationTable','CertificationDetailId','@item.CertificationDetailId')">Edit</button>
                                                                    <button class="btn btn-primary" onclick="DeleteRecord('@item.CertificationDetailId')"> Delete</button>
                                                                </td>
                                                            </tr>
                                                        }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>

                            </div>

                        </div>
                    </form>
                    <!-- Reference Details -->
                    <form id="employeereferenceForm" onSubmit="return false">
                        <!-- Reference Details  -->
                        <div id="reference-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Reference Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>

                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PersonName" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Name</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PersonName" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PersonName','PersonName')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PersonName','Person Name','ReferenceDetails')"></i></a>
                                        </span>
                                    </div>

                                    <input type="text" id="PersonName" name="PersonName" required class="form-control editControl" placeholder="Name" maxlength="50" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PersonName" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                @* <div class="col-sm-6">
                                <label class="form-label" for="confirm-password-vertical">ReferenceOf By</label>
                                @Html.DropDownList("ReferenceOf",new SelectList(Model.EmployeeMastersKeyValues.EmployeeKeyValues,"EmployeeId", "EmployeeName"),"Select ReferenceOf",htmlAttributes: new { @class = "form-select",@name="ReferenceOf"})
                                </div>*@
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PresentCompany" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Present Company</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PresentCompany" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PresentCompany','PresentCompany','ReferenceDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PresentCompany','Present Company','ReferenceDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PresentCompany" name="PresentCompany" class="form-control editControl" placeholder="Present Company" maxlength="250" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PresentCompany" && x.IsMandatory == true).Count() == 1 ? " required" : "") />

                                </div>
                                <div class="col-sm-6">
                                    
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReferenceDesignation" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Designation</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ReferenceDesignation" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ReferenceDesignation','ReferenceDesignation','ReferenceDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ReferenceDesignation','Reference Designation','ReferenceDetails')"></i></a>
                                        </span>
                                        
                                    </div>
                                    <input type="text" id="ReferenceDesignation" name="ReferenceDesignation" class="form-control editControl" placeholder="Designation" maxlength="50" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReferenceDesignation" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>

                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReferenceContactNo" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Contact No</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ReferenceContactNo" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ReferenceContactNo','ReferenceContactNo','ReferenceDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ReferenceContactNo','Reference ContactNo','ReferenceDetails')"></i></a>
                                        </span>

                                    </div>
                                    
                                    <input type="number" id="ReferenceContactNo" name="ReferenceContactNo" required class="form-control editControl" placeholder="Contact No" maxlength="10" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReferenceContactNo" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReferenceMobileNo" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Mobile No</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="ReferenceMobileNo" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('ReferenceMobileNo','ReferenceMobileNo','ReferenceDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('ReferenceMobileNo','Reference MobileNo','ReferenceDetails')"></i></a>
                                        </span>

                                    </div>                                    
                                    <input type="number" id="ReferenceMobileNo" name="ReferenceMobileNo" class="form-control editControl" placeholder="Mobile No" maxlength="10" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "ReferenceMobileNo" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "HowYouKnow" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">How do you know him/her </label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="HowYouKnow" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('HowYouKnow','HowYouKnow','ReferenceDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('HowYouKnow','How You Know','ReferenceDetails')"></i></a>
                                        </span>

                                    </div>
                                    <input type="text" id="HowYouKnow" name="HowYouKnow" required class="form-control editControl" placeholder="How do you know him/her" maxlength="50" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "HowYouKnow" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div style="height: 27px;">&nbsp;</div>
                                    <button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="SaveEmployeeInfo('employeereferenceForm','/EmployeeReference/SaveEmployeeReferenceInfo')">
                                        <i class="bx bx-plus me-1"></i>
                                        <span class="align-middle">Save</span>
                                    </button>
                                    <input type="hidden" id="ReferenceOf" name="ReferenceOf" value="@Model.EmployeeMaster.EmployeeId" />
                                    <button class="btn btn-warning btn-sm pt-2 data-repeater-create" onclick="ResetForm('employeereferenceForm')">
                                        <i class="bx bx-refresh me-1"></i>
                                        <span class="align-middle">Reset</span>
                                    </button>
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    @* <input type="hidden" id="EmployeeId" name="EmployeeId" value="@Model.EmployeeId" />
                                    <input type="hidden" id="ClientId" name="ClientId" value="@Model.ClientId" />
                                    <input type="hidden" id="UnitId" name="UnitId" value="@Model.UnitId" />
                                    <input type="hidden" id="FormName" name="FormName" />
                                    <input type="hidden" id="InfoFillingStatus" name="InfoFillingStatus" value="@Model.InfoFillingStatus" />*@
                                    <input type="hidden" id="EmployeeReferenceId" name="EmployeeReferenceId" />
                                    <button class="btn btn-primary btn-next">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    @*<button class="btn btn-success btn-submit" onclick="SaveEmployeeInfo('finalSubmit','/Employee/FinalDataSubmit')">Submit</button>*@
                                </div>
                            </div>

                            <div class="row g-3 addShowData" style="width:auto">
                                <div class="card" id="List">
                                    <div class="card-body">

                                        <div style="clear:both"></div>
                                        <div class="card-datatable table-responsive text-nowrap">
                                            <table id="referenceTable" class="datatables-ajax table List dataTable" id="List">
                                                <thead>
                                                    <tr>
                                                        <th>Pserson Name</th>
                                                        <th>Present Company</th>
                                                        <th>Designation</th>
                                                        <th>Contact No</th>
                                                        <th>Mobile No</th>
                                                        <th>How Do you Know</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.EmployeeMaster.EmployeeReferenceDetails != null)
                                                        @foreach (var item in Model.EmployeeMaster.EmployeeReferenceDetails)
                                                        {
                                                            <tr>
                                                                <td><span id="PersonName_@item.EmployeeReferenceId">@item.PersonName</span></td>
                                                                @*<td><span id="EmployeeId_@item.EmployeeReferenceId">@item.EmployeeId</span></td>*@
                                                                @*  <td>
                                                        <span id="ReferenceOf_@item.EmployeeReferenceId" data-selectedid="@item.EmployeeReferenceId">
                                                        @Model.EmployeeMastersKeyValues.EmployeeKeyValues.Where(r=>r.EmployeeId==item.ReferenceOf).Select(x => x.EmployeeName).FirstOrDefault()
                                                        </span>
                                                        </td>*@
                                                                <td><span id="PresentCompany_@item.EmployeeReferenceId">@item.PresentCompany</span></td>
                                                                <td><span id="ReferenceDesignation_@item.EmployeeReferenceId">@item.ReferenceDesignation</span></td>
                                                                <td><span id="ReferenceContactNo_@item.EmployeeReferenceId">@item.ReferenceContactNo</span></td>
                                                                <td><span id="ReferenceMobileNo_@item.EmployeeReferenceId">@item.ReferenceMobileNo</span></td>
                                                                <td><span id="HowYouKnow_@item.EmployeeReferenceId">@item.HowYouKnow</span></td>

                                                                <td>
                                                                    <button class="btn btn-primary" onclick="javascript:SetFormDetail('referenceTable','EmployeeReferenceId','@item.EmployeeReferenceId')">Edit</button>
                                                                    <button class="btn btn-primary" onclick="DeleteRecord('@item.EmployeeReferenceId')"> Delete</button>
                                                                </td>
                                                            </tr>
                                                        }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </form>
                    <!-- Passport Details -->
                    <form id="employeepassportdetailsForm" onSubmit="return false">
                        <!-- Reference Details  -->
                        <div id="passport-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Passport Details</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>
                            <div class="row g-3">
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportNumber" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Passport No</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassportNumber" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassportNumber','PassportNumber','PassportDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassportNumber','Passport Number','PassportDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PassportNumber" name="PassportNumber" maxlength="10" class="form-control editControl" placeholder="Passport No" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportNumber" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueDate" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="PassportIssueDate">Issue Date</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassportIssueDate" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassportIssueDate','PassportIssueDate','PassportDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassportIssueDate','Issue Date','PassportDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PassportIssueDate" name="PassportIssueDate" class="form-control flatpickr-date1 editControl" placeholder="DD-MMM-YYYY" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueDate" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportValidTillDate" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="PassportValidTillDate">Valid Till</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassportValidTillDate" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassportIssueDate','PassportIssueDate','PassportDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassportValidTillDate','Valid Till','PassportDetails')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="PassportValidTillDate" name="PassportValidTillDate" class="form-control flatpickr-date1 editControl" placeholder="DD-MMM-YYYY" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportValidTillDate" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueCountryId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="PassportIssueCountryId">Country</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassportIssueCountryId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassportIssueCountryId','PassportIssueCountryId','PassportDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassportIssueCountryId','Country','PassportDetails')"></i></a>
                                        </span>
                                    </div>
                                    
                                    <select id="PassportIssueCountryId" name="PassportIssueCountryId" onchange="javascript:PopulateCascadingDDL('/MastersKeyValue/StateKeyValue','PassportIssueCountryId','@Model.EmployeeMaster.PassportIssueCountryId','PassportIssueStateId','@Model.EmployeeMaster.PassportIssueStateId','stateId','stateName')" class="select2 form-select select2-hidden-accessible editControl" data-allow-clear="true" data-select2-id="multicol-country" tabindex="-1" aria-hidden="true" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportValidTillDate" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>
                                        @if (Model.EmployeeMastersKeyValues.CountryKeyValues != null)
                                            foreach (var item in Model.EmployeeMastersKeyValues.CountryKeyValues)
                                            {
                                                <option value="@item.CountryId" selected="@(item.CountryId==Model.EmployeeMaster.PassportIssueCountryId ? true : false)"> @item.CountryName</option>
                                            }
                                    </select>
                                </div>
                                <div class="col-sm-6">
                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueStateId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="PassportIssueStateId">State</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassportIssueStateId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassportIssueStateId','PassportIssueStateId','PassportDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassportIssueStateId','State','PassportDetails')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible editControl" data-allow-clear="true" id="PassportIssueStateId" name="PassportIssueStateId" onchange="javascript:PopulateCascadingDDL('/MastersKeyValue/CityKeyValue','PassportIssueStateId','@Model.EmployeeMaster.PassportIssueStateId','PassportIssueCityId','@Model.EmployeeMaster.PassportIssueCityId','cityId','cityName')" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueStateId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>

                                    </select>
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueCityId" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="PassportIssueCityId">City</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="PassportIssueCityId" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('PassportIssueCityId','PassportIssueCityId','PassportDetails')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('PassportIssueCityId','City','PassportDetails')"></i></a>
                                        </span>
                                    </div>
                                    <select class="select2 form-select select2-hidden-accessible editControl" data-allow-clear="true" id="PassportIssueCityId" name="PassportIssueCityId" aria-label="Default select example" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "PassportIssueCityId" && x.IsMandatory == true).Count() == 1 ? " required" : "")>
                                        <option value="0">Select Option</option>
                                    </select>
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>

                                    <button class="btn btn-primary btn-next" style="visibility:hidden">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    <button class="btn btn-primary" onclick="SaveEmployeeInfo('employeepassportdetailsForm','/Employee/SaveEmployeePassportInfo')">
                                        <span class="align-middle d-sm-inline-block d-none me-sm-1">Save and Move Next</span>
                                        <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>
                                    @*<button class="btn btn-success btn-submit" onclick="SaveEmployeeInfo('finalSubmit','/Employee/FinalDataSubmit')">Submit</button>*@
                                </div>
                            </div>
                        </div>
                    </form>
                    <!-- Langauge Details -->
                    <form id="employeelanguagesForm" onSubmit="return false">
                        <!-- Langauge Details -->
                        <div id="employee-languages" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Languages</h5>
                                @*<small>Enter Your Account Details.</small>*@
                            </div>

                            <div class="row g-3">
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Language" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="Language">Language</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="Language" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('Language','Language','Languages')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('Language','Language','Languages')"></i></a>
                                        </span>
                                    </div>
                                    <input type="text" id="Language" name="Language" class="form-control editControl" placeholder="Language " maxlength="50" @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "Language" && x.IsMandatory == true).Count() == 1 ? " required" : "") />
                                </div>
                                <div class="col-sm-6">

                                    <div>
                                        <label class="form-label @(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName == "RWS" && x.IsMandatory == true).Count() == 1 ? " required" : "")" for="">Proficiency</label>
                                        <span class="attachment" style='@(Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x=>x.FieldName=="RWS" && ((x.AddAttachment==true && Model.EmployeeMaster.EmployeeId==0) || (x.EditAttachment==true && Model.EmployeeMaster.EmployeeId!=0))).Count()==0? "display:none;":"display:inline;")'>
                                            &nbsp;  &nbsp;<a href="#" onclick="ShowAttachmentPopUp('RWS','RWS','Languages')"><i class="fa-solid fa-paperclip"></i></a>  &nbsp;
                                            <a href="#"><i class="fa-solid fa-eye" onclick="ViewAttachment('RWS','Read Write Speek','Languages')"></i></a>
                                        </span>
                                    </div>
                                    <div>
                                        <input type="checkbox" id="Read" name="Read" /> Read
                                        <input type="checkbox" id="Write" name="Write" /> Write
                                        <input type="checkbox" id="Speak" name="Speak" /> Speak
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div style="height: 27px;">&nbsp;</div>
                                    <button class="btn btn-primary btn-sm pt-2 data-repeater-create" onclick="SaveEmployeeInfo('employeelanguagesForm','/EmployeeLanguageDetail/SaveEmployeeLanguageInfo')">
                                        <i class="bx bx-plus me-1"></i>
                                        <span class="align-middle">Save</span>
                                    </button>
                                    <input type="hidden" id="LanguageOf" name="LanguageOf" value="@Model.EmployeeMaster.EmployeeId" />
                                    <input type="hidden" id="EmployeeLanguageDetailId" name="EmployeeLanguageDetailId" />
                                    <button class="btn btn-warning btn-sm pt-2 data-repeater-create" onclick="ResetForm('employeelanguagesForm')">
                                        <i class="bx bx-refresh me-1"></i>
                                        <span class="align-middle">Reset</span>
                                    </button>
                                </div>
                                <div class="col-12 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-prev">
                                        <i class="bx bx-chevron-left bx-sm ms-sm-n2"></i>
                                        <span class="align-middle d-sm-inline-block d-none">Previous</span>
                                    </button>
                                    <input type="hidden" id="EmployeeId" name="EmployeeId" value="@Model.EmployeeMaster.EmployeeId" />
                                    <input type="hidden" id="ClientId" name="ClientId" value="@Model.ClientId" />
                                    <input type="hidden" id="UnitId" name="UnitId" value="@Model.UnitId" />
                                    <input type="hidden" id="LogInEmployeeId" name="UnitId" value="@Model.LogInEmployeeId" />
                                    <input type="hidden" id="FormName" name="FormName" />
                                    <input type="hidden" id="InfoFillingStatus" name="InfoFillingStatus" value="@Model.InfoFillingStatus" />

                                    @*<button class="btn btn-primary btn-next">
                                    <span class="align-middle d-sm-inline-block d-none me-sm-1">Move Next</span>
                                    <i class="bx bx-chevron-right bx-sm me-sm-n2"></i>
                                    </button>*@
                                    <button class="btn btn-success btn-submit" onclick="SaveEmployeeInfo('finalSubmit','/Employee/FinalDataSubmit')">Submit</button>
                                </div>
                            </div>

                            <div class="row g-3 addShowData" style="width:auto">
                                <div class="card" id="List">
                                    <div class="card-body">

                                        <div style="clear:both"></div>
                                        <div class="card-datatable table-responsive text-nowrap">
                                            <table id="languageTable" class="datatables-ajax table List dataTable" id="List">
                                                <thead>
                                                    <tr>
                                                        <th>Language</th>
                                                        <th>Read</th>
                                                        <th>Write</th>
                                                        <th>Speak</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.EmployeeMaster.EmployeeLanguageDetails != null)
                                                        @foreach (var item in Model.EmployeeMaster.EmployeeLanguageDetails)
                                                        {
                                                            if (item.IsActive == true)
                                                            {
                                                                <tr>
                                                                    <td><span id="Language_@item.EmployeeLanguageDetailId">@item.Language</span></td>
                                                                    <td><span id="Read_@item.EmployeeLanguageDetailId">@item.Read</span></td>
                                                                    <td><span id="Write_@item.EmployeeLanguageDetailId">@item.Write</span></td>
                                                                    <td><span id="Speak_@item.EmployeeLanguageDetailId">@item.Speak</span></td>
                                                                    <td>
                                                                        <button class="btn btn-primary" onclick="javascript:SetFormDetail('languageTable','EmployeeLanguageDetailId','@item.EmployeeLanguageDetailId')">Edit</button>
                                                                        <button class="btn btn-primary" onclick="DeleteRecordList('@item.EmployeeLanguageDetailId','languageTable')"> Delete</button>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </form>
                    <!-- Sepration Details -->
                    <form id="employeeseperationForm" onSubmit="return false">
                        <!-- Sepration Details -->
                        <div id="seperation-details" class="content">
                            <div class="content-header mb-3">
                                <h5 class="mb-0">Seperation Details</h5>
                            </div>
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <label class="form-label" for="">Resignation Date</label>
                                    <input type="text" id="" name="" class="form-control form-control-plaintext" value="@(Model==null ? "NA" : Model.EmployeeMaster.EmployeeExitResignationDetails==null ? "NA" : Model.EmployeeMaster.EmployeeExitResignationDetails.Count==0 ? "NA" : Model.EmployeeMaster.EmployeeExitResignationDetails.FirstOrDefault().ResignationDateAdmin==null ? "NA" :  ((DateTime)Model.EmployeeExitResignationDetails.FirstOrDefault().ResignationDateAdmin).ToString("dd-MMM-yyyy"))" />
                                </div>
                                <div class="col-sm-6">
                                    <label class="form-label" for="">Last Working Date</label>
                                    <input type="text" id="" name="" class="form-control form-control-plaintext" value="@(Model==null ? "NA" : Model.EmployeeMaster.EmployeeExitResignationDetails==null ? "NA" : Model.EmployeeExitResignationDetails.Count==0 ? "NA" : Model.EmployeeMaster.EmployeeExitResignationDetails.FirstOrDefault().LastWorkingDateAdmin==null ? "NA" :  ((DateTime)Model.EmployeeExitResignationDetails.FirstOrDefault().LastWorkingDateAdmin).ToString("dd-MMM-yyyy"))" />
                                </div>
                                <div class="col-sm-6">
                                    <label class="form-label" for="">Rehire Eligibility</label>
                                    <input type="text" id="" name="" class="form-control form-control-plaintext" value="@(Model==null ? "NA" : Model.EmployeeMaster.EmployeeExitResignationDetails==null ? "NA" : Model.EmployeeExitResignationDetails.Count==0 ? "NA" : Model.EmployeeMaster.EmployeeExitResignationDetails.FirstOrDefault().EligibleToHireAdmin==null ? "NA" :  Model.EmployeeExitResignationDetails.FirstOrDefault().EligibleToHireAdmin==true ? "Yes" : "NO")" />
                                </div>
                                <div class="col-sm-6">
                                    <label class="form-label" for="">Reason For Resignation</label>
                                    <textarea class="form-control form-control-plaintext" value="@(Model==null ? "NA" : Model.EmployeeMaster.EmployeeExitResignationDetails==null ? "NA" : Model.EmployeeMaster.EmployeeExitResignationDetails.Count==0 ? "NA" : Model.EmployeeMaster.EmployeeExitResignationDetails.FirstOrDefault().ReasonForLeavingAdmin)"></textarea>
                                </div>

                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- /Vertical Wizard -->
    </div>


</div>

@section scripts{
    <!-- Vendors JS -->
    <script src="~/assets/vendor/libs/bs-stepper/bs-stepper.js"></script>
    <script src="~/assets/vendor/libs/bootstrap-select/bootstrap-select.js"></script>
    <script src="~/assets/vendor/libs/select2/select2.js"></script>
    <!-- Page JS -->
    <script src="~/assets/js/form-wizard-numbered.js"></script>
    <script src="~/assets/js/form-wizard-validation.js"></script>
    @*  <script src="http://malsup.github.io/jquery.blockUI.js" type="text/javascript"></script>*@
    @*    <script type="text/javascript">
        $(document).ready(function () {
            $(".flatpickr-date1").flatpickr({
                monthSelectorType: 'static'
            });
        });


    </script>
    @*<script src="../../customjs/countrydatatabletable.js"></script>*@
    @* <script src="../../customjs/CommonFunction.js"></script>*@
    <script src="~/customjs/commonfunction.js"></script>
    <script src="~/customjs/employeevalidation.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function () {

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="MaritalStatusId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#MaritalStatusId").attr('required', 'required');
            }
            else
                jQuery("#MaritalStatusId").removeAttr('required');
            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="ReligionId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#ReligionId").attr('required', 'required');
            }
            else
                jQuery("#ReligionId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="BloodGroupId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#BloodGroupId").attr('required', 'required');
            }
            else
                jQuery("#BloodGroupId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="BankId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#BankId").attr('required', 'required');
            }
            else
                jQuery("#BankId").removeAttr('required');


            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="AcademicId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#AcademicId").attr('required', 'required');
            }
            else
                jQuery("#AcademicId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="ExperienceJobTitleId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#ExperienceJobTitleId").attr('required', 'required');
            }
            else
                jQuery("#ExperienceJobTitleId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="JobTitleId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#JobTitleId").attr('required', 'required');
            }
            else
                jQuery("#JobTitleId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="DepartmentId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#DepartmentId").attr('required', 'required');
            }
            else
                jQuery("#DepartmentId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="ManagerId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#ManagerId").attr('required', 'required');
            }
            else
                jQuery("#ManagerId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="HODId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#HODId").attr('required', 'required');
            }
            else
                jQuery("#HODId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="RoleId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#RoleId").attr('required', 'required');
            }
            else
                jQuery("#RoleId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="BandId" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#BandId").attr('required', 'required');
            }
            else
                jQuery("#BandId").removeAttr('required');

            if ('@Model.EmployeeMastersKeyValues.EmployeeValidations.Where(x => x.FieldName=="YearOfCertification" && x.IsMandatory == true).Count()' == '1') {
                jQuery("#YearOfCertification").attr('required', 'required');
            }
            else
                jQuery("#YearOfCertification").removeAttr('required');


            jQuery("#attachmentPopUp").hide();
            updateConfirmationDate();
            $("#ConfirmationPeriod").blur(function () {
                updateConfirmationDate();
            });
            $("#DOJ").blur(function () {
                updateConfirmationDate();
            });


            //Add the dirty class for change in case to any control in Upload document form
            //AddDirtyClass(".employeeDocs");
            jQuery(".employeeDocs").each(function (key) {
                jQuery(this).change(function () {
                    jQuery(this).addClass('dirty');
                });
            });

              jQuery(".editControl").each(function (key) {
                jQuery(this).change(function () {
                   // jQuery(this).addClass('dirtyControl');
                    var formId = $(this).closest("form").get(0).id;
                    CollectEmployeeEditInfo(this.id, this.value, formId)
                });
            });

            $("#upload_file").click(function () {
                $("#profileimagepreview").hide();
            });

            //$("#upload_file")[0].files[0]
            //alert(jQuery("#profileimagepreview").prop("src"));
            if (jQuery("#profileimagepreview").prop("src") != "")
                jQuery("#uploaded_view").addClass("show");
            $(".file_remove").click(function () {
                $("#profileimagepreview").show();
            });

            var maxBirthdayDate = new Date();
            maxBirthdayDate.setFullYear(maxBirthdayDate.getFullYear() - 18);

            $(".flatpickr-date-dob").flatpickr({
                //monthSelectorType: 'static',
                dateFormat: "d-M-Y",
                maxDate: maxBirthdayDate
            });
            $(".flatpickr-date1").flatpickr({
                //monthSelectorType: 'static',
                dateFormat: "d-M-Y"
            });

            $("#employeeexperienceForm").find("[name='JoinDate']").flatpickr({
                dateFormat: "d-M-Y",
                maxDate: new Date()
            });

            if (jQuery("#CountryId").val() > 0)
                jQuery("#CountryId").trigger("change");
            if (@stateId > 0)
                jQuery("#StateId").trigger("change");
            if (jQuery("#PermanentCountryId").val() > 0)
                jQuery("#PermanentCountryId").trigger("change");
            if (@pStateId > 0)
                jQuery("#PermanentStateId").trigger("change");
            if (jQuery("#PassportIssueCountryId").val() > 0)
                jQuery("#PassportIssueCountryId").trigger("change");
           
        });

        function ShowAttachmentPopUp(fldName, lblName, ScreenTab) {
            var fldVal=jQuery("#"+fldName).val();
            if (fldVal == "") {
                $erroralert("Error!", "Enter or select control value to upload attachment!");
                return false;
            }
            //if(refField!="")
            //    jQuery("#ReferenceId").val(jQuery("#" + refField).val());
            jQuery("#FileName").val("");
            jQuery("#FieldName").val(fldName);
            jQuery("#attachmentPopUp").modal("show");

            var refId = 0;
            if (ScreenTab.replace(" ", "").toLowerCase() == "bankdetails")
                refId = jQuery("#BankDetailId").val();
            else if (ScreenTab.replace(" ", "").toLowerCase() == "familydetails")
                refId = jQuery("#EmployeeFamilyDetailId").val();
            else if (ScreenTab.replace(" ", "").toLowerCase() == "academicdetails")
                refId = jQuery("#AcademicDetailId").val();
            else if (ScreenTab.replace(" ", "").toLowerCase() == "experiencesbackgroud")
                refId = jQuery("#ExperienceDetailId").val();
            else if (ScreenTab.replace(" ", "").toLowerCase() == "certificationdetails")
                refId = jQuery("#CertificationDetailId").val();
            else if (ScreenTab.replace(" ", "").toLowerCase() == "referencedetails")
                refId = jQuery("#EmployeeReferenceId").val();
            else if (ScreenTab.replace(" ", "").toLowerCase() == "language")
                refId = jQuery("#EmployeeLanguageDetailId").val();

            if (refId != 0)
                jQuery("#TableReferenceId").val(refId);


        }

        function ViewAttachment(fldName, lblName, ScreenTab) {
            var refId=0;
            if(ScreenTab.replace(" ","").toLowerCase()=="bankdetails")
                refId = jQuery("#BankDetailId").val();
            else if (ScreenTab.replace(" ", "").toLowerCase() == "familydetails")
                refId = jQuery("#EmployeeFamilyDetailId").val();
            else if (ScreenTab.replace(" ", "").toLowerCase() == "academicdetails")
                refId = jQuery("#AcademicDetailId").val();
            else if (ScreenTab.replace(" ", "").toLowerCase() == "experiencesbackgroud")
                refId = jQuery("#ExperienceDetailId").val();
            else if (ScreenTab.replace(" ", "").toLowerCase() == "certificationdetails")
                refId = jQuery("#CertificationDetailId").val();
            else if (ScreenTab.replace(" ", "").toLowerCase() == "referencedetails")
                refId = jQuery("#EmployeeReferenceId").val();
            else if (ScreenTab.replace(" ", "").toLowerCase() == "language")
                refId = jQuery("#EmployeeLanguageDetailId").val();
                
                
            var w = window.open();
            w.document.title = "SimpliHR-View Attachment";
            w.document.location.href = "ViewFile/" + fldName + ("@Model.EnycEmployeeId" != "" ? "&@Model.EnycEmployeeId" + (refId == 0 ? "" : "-=refid__" + refId) : "&%20"); //how to assign the url to the newly opened window
            $(w.document.body).html(stored);
            return false;
        }

        function updateConfirmationDate() {
            let cp = $("#ConfirmationPeriod").val();
            let d = moment($("#DOJ").val(), "DD-MMM-YYYY").add(cp, 'days');
            $("#DOC").val(d.format("DD-MMM-YYYY"));
        }


        function MoveNext(formID) {
            btnNext = jQuery("#" + formID).find('.btn-next')
            btnNext.trigger("click")
        }

        function CopyClearDataForPermanent() {
            //jQuery("#sameAsCurrent").attr("checked") ? CopyCurrentToPermanent() : ClearFormData()
            if (jQuery("#sameAsCurrent").prop("checked") == true)
                CopyCurrentToPermanent();
            else
                ClearFormData();
        }

        function CopyCurrentToPermanent() {
            var formData = {};
            var allCtrl = jQuery("[id^=Permanent]")
            var copyFrom = "";
            var curCtrl = "";
            allCtrl.each(function (i) {
                curCtrl = jQuery(this);
                copyFrom = (curCtrl.attr('id')).replace("Permanent", "");
                if (curCtrl.prop("type").indexOf("select-") != -1) {
                    if ((curCtrl.prop("id").indexOf("CountryId") != -1)) {
                        var selectedVal = jQuery("#" + copyFrom).val();
                        curCtrl.val(selectedVal);
                        curCtrl.text = jQuery("#" + copyFrom).find(':selected').text();
                    }
                    else if ((curCtrl.prop("id").indexOf("StateId") != -1) || (curCtrl.prop("id").indexOf("CityId") != -1))
                        curCtrl.append(jQuery("<option selected></option>").val(jQuery("#" + copyFrom).val()).html(jQuery("#" + copyFrom).find(':selected').text()));
                }
                curCtrl.val(jQuery("#" + copyFrom).val())
            });
        }

        function CapitalizeSmallFirstLetter(sStr, sChange) {
            var string = sStr;
            if (sChange == "S")
                newString = string[0].toLowerCase() + string.slice(1);
            else
                newString = string[0].toUpperCase() + string.slice(1);

            return newString
        }

        function GetContactData() {

            var formData = [];
            var permanentData = {};
            var currentData = {};
            //   formData.push({jQuery("#currentDiv :input").serialize()})
            // formData.push({jQuery("#permanentDiv :input").serialize()})

            var allCtrl = jQuery("[id^=Permanent]")

            allCtrl.each(function (i) {
                var curCtrl = jQuery(this);
                var dataKey = (curCtrl.attr('id')).replace("Permanent", "");
                permanentData[dataKey] = (IsNumeric(curCtrl.val()) ? parseInt(curCtrl.val()) : curCtrl.val());
                currentData[dataKey] = (IsNumeric((jQuery("#" + dataKey).val())) ? parseInt(jQuery("#" + dataKey).val()) : jQuery("#" + dataKey).val());
            });

            currentData["ContactType"] = "Current"
            currentData["EmployeeId"] = jQuery("#EmployeeId").val();
            currentData["EmployeeContactDetailId"] = jQuery("#EmployeeContactDetailId").val();
            formData.push(currentData)

            permanentData["ContactType"] = "Permanent"
            permanentData["EmployeeId"] = jQuery("#EmployeeId").val();
            permanentData["EmployeeContactDetailId"] = jQuery("#pEmployeeContactDetailId").val();
            formData.push(permanentData)

            return formData;
        }

        function ClearFormData() {
            var allCtrl = jQuery("[id^=Permanent]")
            allCtrl.each(function (i) {
                var curCtrl = jQuery(this);
                curCtrl.val('');
            });
        }

        function PopulateCascadingDDL(actionURL, parentDDL, parentDDLValue, childDDL, defaultSelected, keyText, valueText) {
            //var objDDL = countryDDL
            if (parentDDL != "")
                jQuery("#" + parentDDL).attr("disabled", true)

            if (parentDDL.toLowerCase() == "countryid" || parentDDL.toLowerCase() == "permanentcountryid" || parentDDL.toLowerCase() == "passportissuecountryid")
                sParam = { isActive: true, countryId: ((parentDDLValue == "" || parentDDLValue == 0) ? jQuery("#" + parentDDL).val() : parentDDLValue) };
            else if (parentDDL.toLowerCase() == "stateid" || parentDDL.toLowerCase() == "permanentstateid" || parentDDL.toLowerCase() == "passportissuestateid")
                sParam = { isActive: true, stateId: (parentDDLValue == 0 ? jQuery("#" + parentDDL).val() : parentDDLValue) };


            jQuery("#" + childDDL).html("")
            // jQuery(this).blockUI();
            jQuery.ajax({
                type: "GET",
                // url: "/WorkLocation/GetCounryStates",
                url: actionURL,
                data: sParam,
                success: function (response) {
                    //PopulateDropDown("StateId", response, 'Model.StateId', 'stateId', 'stateName')
                    PopulateDropDown(childDDL, response, defaultSelected, keyText, valueText)
                    jQuery("#" + parentDDL).attr("disabled", false)
                    jQuery("#" + childDDL).trigger("change");
                    // jQuery(document).ajaxStop(jQuery.unblockUI);
                },
                failure: function (response) {
                     $erroralert("Error!", response.responseText + '!');
                },
                error: function (response) {
                    $erroralert("Error!", response.responseText + '!');
                }
            });
        }

        function OpenWindows(src, type, target) {
            var myWindow = window.open("", "FileViwerWindow", "width=700,height=500");
            if (type == '')
                myWindow.document.write("<embed src='" + src + "' width='500' height='400' />");
            else
                myWindow.document.write("<embed src='" + src + "' type='" + type + "' width='500' height='400' />");
        }

        //function OpenWindows(src, type, target) {
        //    var myWindow = window.open("", "FileViwerWindow", "width=700,height=500");
        //    myWindow.document.write("<embed src='" + src + "'" + (type == '' ? "" : "type='" + type + "'")  width = '500' height = '400' /> ");
        //        }

         

        function SaveEmployeeInfo(formID, url) {

            jQuery("#FormName").val(formID);

            if (formID == "finalSubmit") {
                if (!ValidForm("employeepersonalinfoForm")) {
                    alert("Please fill personal information and try again");
                    return false;
                }
                else if (!ValidForm("employeejobForm")) {
                    alert("Please fill all mandatory fields in Job Information Section and try again");
                    return false;
                }
            }

            if (!ValidForm(formID)) {
                return false;
            }

            jQuery("#errorDiv").show();
            jQuery("#errorPara").html("");
            var moveNextForm = false;
            var keyAttr = tableID = "";
            var tableCols = [];
            var data = [];

            // var formData = jQuery("#employeepersonalinfoForm").serialize(); ;
            // if (formID == "employeeReferenceForm") {
            jQuery("#ReferenceOf").val(jQuery("#EmployeeId").val());
            //}
            if (formID == "employeecontactdetailForm" && jQuery("#sameAsCurrent").prop("checked") == true) {

                if (jQuery("#PermanentStateId").val() == "0") {
                    jQuery("#PermanentStateId").val(jQuery("#StateId").val())
                }
                if (jQuery("#PermanentCityId").val() == "0") {
                    jQuery("#PermanentCityId").val(jQuery("#CityId").val())
                }
            }

            if (formID == "employeecontactdetailForm") {
                formData = "employeeContactDataString=" + JSON.stringify(GetContactData());
            }
            else if (formID == "employeepassportdetailsForm" || formID == "employeejobForm" || formID == "employeepersonalinfoForm" || formID == "finalSubmit") {
                formData = jQuery("#employeepersonalinfoForm").serialize() + "&EmployeeId=" + jQuery("#EmployeeId").val() + "&FormName=" + jQuery("#FormName").val();
                formData = formData + "&" + jQuery("#employeejobForm").serialize()
                formData = formData + "&" + jQuery("#employeepassportdetailsForm").serialize()
                var infoFillingStatus = jQuery("#InfoFillingStatus").val();
                formData = (formID == "finalSubmit" ? formData + "&InfoFillingStatus=" + infoFillingStatus : formData + "&InfoFillingStatus=" + infoFillingStatus);
            }
            else if (formID == "employeeuploaddocForm") {
                var formData = GetEmployeeDocsData();
            }
            else if (formID == "employeelanguagesForm") {
                let read = $("#employeelanguagesForm").find("[name='Read']").is(':checked');// == true : false;
                let write = $("#employeelanguagesForm").find("[name='Write']").is(':checked');// == true : false;
                let speak = $("#employeelanguagesForm").find("[name='Speak']").is(':checked');// == true : false;
                let language = $("#employeelanguagesForm").find("[name='Language']").val();
                let EmployeeLanguageDetailId = $("#employeelanguagesForm").find("[name='EmployeeLanguageDetailId']").val();
                EmployeeLanguageDetailId = EmployeeLanguageDetailId == null ? 0 : EmployeeLanguageDetailId;
                EmployeeLanguageDetailId = EmployeeLanguageDetailId == "" ? 0 : EmployeeLanguageDetailId;
                //formData = jQuery("#" + formID).serialize() + "  &EmployeeId=" + jQuery("#EmployeeId").val() + "&FormName=" + jQuery("#FormName").val();;
                formData = "Language=" + language + "&Read=" + read + "&Write=" + write + "&Speak=" + speak + "&EmployeeLanguageDetailId=" + EmployeeLanguageDetailId + "&EmployeeId=" + jQuery("#EmployeeId").val() + "&FormName=" + jQuery("#FormName").val();
            }
            else
                formData = jQuery("#" + formID).serialize() + "&EmployeeId=" + jQuery("#EmployeeId").val() + "&FormName=" + jQuery("#FormName").val();
            var x = 1
            //jQuery.blockUI();
            BlockUI();
            jQuery.ajax({
                type: "POST",
                //url: "/Employee/SaveEmployeePersonalInfo",
                url: url,
                data: formData,
                cache: false,
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (receivedData) {
                    UnblockUI();
                    if (formID == "finalSubmit") {
                        if (receivedData.displayMessage.trim().toUpperCase() == "SUCCESS") {
                            alert("All information submitted successfully");
                            window.location.href = '/Employee/Employees'
                        }
                        else {
                            jQuery("#errorDiv").show();
                            jQuery("#errorPara").html(receivedData.displayMessage.trim().replace("\r\n", "</br>"));
                            moveNextForm = false;
                        }
                        //OpenWindows('/Employee/Employee');
                    }
                    else if (formID == "employeepersonalinfoForm") {
                        if (IsNumeric(receivedData)) {
                            jQuery("#EmployeeId").val(receivedData)
                            jQuery("#EmployeeCode").val(receivedData)
                            moveNextForm = true;
                            MoveNext(formID);
                        }
                        else if (receivedData.toUpperCase() == "SUCCESS") {
                            moveNextForm = true;
                            MoveNext(formID)
                        }
                        else {
                            jQuery("#errorDiv").show();
                            jQuery("#errorPara").html(receivedData.replace("\r\n", "</br>"));
                        }
                    }
                    else if (formID == "employeeBankForm" || formID == "employeecontactdetailForm" || formID == "employeejobForm" || formID == "employeepassportdetailsForm") {
                        if (receivedData.toUpperCase() == "SUCCESS") {
                            moveNextForm = true;
                            MoveNext(formID)
                        }
                        else {
                            jQuery("#errorDiv").show();
                            jQuery("#errorPara").html(receivedData.replace("\r\n", "</br>"));
                        }

                    }
                    else if (formID == "employeefamilyForm") {
                        //PopulateFamilyTable("familyTable", data);
                        data = receivedData.employeeFamilyDetails;
                        tableID = "familyTable";
                        keyAttr = "employeeFamilyDetailId"
                        tableCols = ['memberName', 'memberDob', 'relationship', 'Action']
                        moveNextForm = true;
                    }
                    else if (formID == "employeeacdemicForm") {
                        data = receivedData.employeeAcademicDetails;
                        tableID = "academicTable";
                        keyAttr = "academicDetailId"
                        tableCols = ['instituteName', 'academicName,data-selectedid,academicId', 'passingYear', 'percentage', 'Action']
                        moveNextForm = true;
                    }
                    else if (formID == "employeeexperienceForm") {
                        data = receivedData.employeeExperienceDetails;
                        tableID = "experienceTable";
                        keyAttr = "experienceDetailId"
                        tableCols = ['companyName', 'jobTitle,data-selectedid,ExperienceJobTitleId', 'joinDate', 'lastWorkingDate', 'Action']
                        moveNextForm = true;
                    }
                    else if (formID == "employeecertificationForm") {
                        data = receivedData.employeeCertificationDetails;
                        tableID = "certificationTable";
                        keyAttr = "CertificationDetailId"
                        tableCols = ['certificationName', 'yearOfCertification', 'duration', 'Action']
                        moveNextForm = true;
                    }
                    else if (formID == "employeereferenceForm") {
                        data = receivedData.employeeReferenceDetails;
                        tableID = "referenceTable";
                        keyAttr = "employeeReferenceId"
                        tableCols = ['personName', 'presentCompany', 'referenceDesignation', 'referenceContactNo', 'referenceMobileNo', 'howYouKnow', 'Action']
                        moveNextForm = true;
                    }
                    else if (formID == "employeelanguagesForm") {
                        data = receivedData.employeeLanguageDetails;
                        tableID = "languageTable";
                        keyAttr = "employeeLanguageDetailId"
                        tableCols = ['language', 'read', 'write', 'speak', 'Action']
                        moveNextForm = true;
                    }
                    if (data != null) {
                        if (!(formID == "employeepersonalinfoForm" || formID == "employeecontactdetailForm")) {
                            if (keyAttr != "")
                                jQuery("#" + CapitalizeSmallFirstLetter(keyAttr, "C")).val("0");
                            if (data.length > 0)
                                PopulateTable(tableID, data, tableCols, keyAttr)
                        }
                    }

                    if (receivedData.displayMessage.toUpperCase() != "SUCCESS") {
                        jQuery("#errorDiv").show();
                        jQuery("#errorPara").html(receivedData.displayMessage.replace("\r\n", "</br>"));
                        moveNextForm = false;
                    }

                    if ((!(formID == "employeepersonalinfoForm" || formID == "employeecontactdetailForm" || formID == "employeejobForm" || formID == "employeebankForm")) && moveNextForm)
                        ResetForm(formID);


                    if ((formID == "employeefamilyForm" || formID == "employeeacdemicForm" || formID == "employeeexperienceForm" || formID == "employeecertificationForm" || formID == "employeereferenceForm") && moveNextForm == true)
                        ResetForm(formID);


                },
                error: function (result) {
                    UnblockUI();
                    $erroralert("Error!", result.responseText + '!');
                    var x = 1;
                }
            });
        }
        
        function SetReferenceId(formId)
        {
            
            var refId = 0;
            if (formId.toLowerCase() == "employeeBankform")
                refId = jQuery("#BankDetailId").val();
            else if (formId.toLowerCase() == "employeefamilyform")
                refId = jQuery("#EmployeeFamilyDetailId").val();
            else if (formId.toLowerCase() == "employeeacdemicform")
                refId = jQuery("#AcademicDetailId").val();
            else if (formId.replace(" ", "").toLowerCase() == "employeeexperienceform")
                refId = jQuery("#ExperienceDetailId").val();
            else if (formId.toLowerCase() == "employeecertificationform")
                refId = jQuery("#CertificationDetailId").val();
            else if (formId.toLowerCase() == "employeereferenceForm")
                refId = jQuery("#EmployeeReferenceId").val();
            else if (formId.toLowerCase() == "employeepassportdetailsform")
                refId = jQuery("#EmployeeLanguageDetailId").val();

            if (refId != 0)
                jQuery("#TableReferenceId").val(refId);
        }


        function remove(collection, key) {
            // if the collections is an array
            if (collection instanceof Array) {
                if (collection.indexOf(key) != -1) {
                    collection.splice(collection.indexOf(key), 1);
                }
            }
            // it's an object
            else if (collection.hasOwnProperty(key)) {
                delete collection[key];
            }
            return collection;
        };

        var TempEditEmployeeDataList = {};

        function CollectEmployeeEditInfo(changeType, ChangeValue,formId) {
            var listDatail={}
            listDatail.TableReferenceId=0;
            var sFormWithTabRefId="employeeBankform, employeefamilyform, employeeacdemicform, employeeexperienceform, employeecertificationform, employeereferenceForm,employeepassportdetailsform"
            SetReferenceId(formId);
            listDatail.ChangeType =  changeType;
            listDatail.ChangeValue = ChangeValue;
            listDatail.TableReferenceId = jQuery("#TableReferenceId").val();
            listDatail.EntrySource = "EmployeeEditScreen";
            if (sFormWithTabRefId.indexOf(formId.toLowerCase()) >= 0 && listDatail.TableReferenceId != "") {
                remove(TempEditEmployeeDataList, changeType);
                TempEditEmployeeDataList[changeType] = listDatail
            }
            else if (sFormWithTabRefId.indexOf(formId.toLowerCase()) <=-1)
            {
                remove(TempEditEmployeeDataList, changeType);
                TempEditEmployeeDataList[changeType] = listDatail
            }
            

        }

        function SaveEmployeeEditInfo() {
            var sErrorMsg = "";
            var editEmployeeDataVM = {};
            var EditEmployeeDataList = new Array();
            editEmployeeDataVM.TicketId = jQuery("#TicketId").val();
            $.each(TempEditEmployeeDataList, function (key, val) {
                EditEmployeeDataList.push(val)
            });

            if(EditEmployeeDataList.length>0)
                editEmployeeDataVM.EditEmployeeDataList=EditEmployeeDataList;
            else
            {
                $erroralert("Error","Changes not found for approroval");
                return false;
            }
                
            
            BlockUI();
            jQuery.ajax({
                type: "POST",
                url: "/Account/SaveChangesForApproval",
                data: editEmployeeDataVM,
                success: function (data) {
                    //alert(data)
                    UnblockUI();
                    // var sMsg = data.displayMessage  //.Trim().Replace("< br > ", "\r\n")
                    if (data.displayMessage.toUpperCase() == "SUCCESS") {
                        //jQuery('[name = "btnPopupClose"]').on('click', RediretToView)
                        $successalert("Success", "Edit detail saved successfully");
                        //EditEmployeeDataDTO.append("TicketId", jQuery("#TicketId").val());
                        //ClearOptions();
                        jQuery("#fileName").val('');
                        jQuery("#fieldName").val('');
                        jQuery("#fieldValue").val('');
                        jQuery("#fieldSelect").val('');
                        jQuery("#TicketId").val(data.ticketId);
                        TempEditEmployeeDataList = {};
                        //jQuery("#editScreen").modal('hide');
                        //window.location.href = "/EmployeeValidation/EmployeeValidation/EmployeeMaster";
                    }
                    // window.location.href = "/EmployeeAttendanceUI/RegularizeAttendance"
                },
                error: function (result) {
                    var x = 1;
                    if (result.responseText.toUpperCase() == "SUCCESS") {
                        //jQuery('[name = "btnPopupClose"]').on('click', RediretToView)
                        //EditEmployeeDataDTO.append("TicketId", jQuery("#TicketId").val());
                        $successalert("Error", "Edit detail saved successfully");
                        jQuery("#editScreen").modal('hide');
                        jQuery("#fileName").val('');
                        jQuery("#fieldName").val('');
                        jQuery("#fieldSelect").val('');
                    }
                    else {
                        $erroralert("Error", "errror<br>" + result.responseText);
                    }
                    UnblockUI();

                }
            });
        }

        function ResetForm(formID) {
            jQuery("#" + formID)[0].reset();
            jQuery("#EmployeeFamilyDetailId").val("0");
            jQuery("#academicDetailId").val("0");
            jQuery("#ExperienceDetailId").val("0");
            jQuery("#CertificationDetailId").val("0");
            jQuery("#EmployeeReferenceId").val("0");
            jQuery("#EmployeeLanguageDetailId").val("0");
            jQuery("#FormName").val("");
        }

        //function IsNumeric(data) {
        //    isNumeric = /^[-+]?(\d+|\d+\.\d*|\d*\.\d+)$/;
        //    return isNumeric.test(data) ? true : false;
        //}

        function PopulateTable(tableID, data, tableCols, keyAttr) {
            // alert("List");
            var tableCtrl = jQuery("#" + tableID)
            //var tBody = jQuery('<tbody>')
            //jQuery("#" + tableID + " tbody").remove();
            //jQuery("#" + tableID + " tr").each(function () {
            //    this.parentNode.removeChild(this);
            //});
            jQuery("#" + tableID + " tr").slice(1).remove()

            data.forEach(function (row) {
                var tr = $('<tr>');
                tableCols.forEach(function (attr) {
                    if (attr.toUpperCase() == "ACTION")
                        tr.append('<th><button  class="btn btn-primary" onclick="SetFormDetail(\'' + tableID + '\',\'' + keyAttr + '\',\'' + row[keyAttr] +
                            '\')">Edit</button><Button  class="btn btn-primary" onclick = "DeleteRecordList(\'' + row[keyAttr] +
                            '\',\'' + tableID + '\')">Delete</Button></th>');
                    else if (attr.indexOf(',') >= 1) {
                        arrAttr = attr.split(',')
                        tr.append('<td><span id="' + CapitalizeSmallFirstLetter(arrAttr[2], "C") + '_' + row[keyAttr] + '" ' + arrAttr[1] + '="' + row[arrAttr[2]] + '">' + row[arrAttr[0]] + '</span></td>');
                    }
                    else
                        tr.append('<td><span id="' + CapitalizeSmallFirstLetter(attr, "C") + '_' + row[keyAttr] + '">' + row[attr] + '</span></td>');

                    //tr.append();
                });
                tableCtrl.append(tr);
            });

        }

        function SetFormDetail(tableID, keyID, keyValue) {
            var tableCols = [];
            if (tableID == "familyTable") {
                tableCols = ['MemberName', 'MemberDob', 'Relationship'];
            }
            else if (tableID == "academicTable") {
                tableCols = ['InstituteName', 'AcademicId', 'PassingYear', 'Percentage']
            }
            else if (tableID == "experienceTable") {
                tableCols = ['CompanyName', 'ExperienceJobTitleId', 'JoinDate', 'LastWorkingDate']
            }
            else if (tableID == "certificationTable") {
                tableCols = ['CertificationName', 'YearOfCertification', 'Duration']
            }
            else if (tableID == "referenceTable") {
                tableCols = ['PersonName', 'PresentCompany', 'ReferenceDesignation', 'ReferenceContactNo', 'ReferenceMobileNo', 'HowYouKnow']
            }
            else if (tableID == "languageTable") {
                tableCols = ['Language', 'Read', 'Write', 'Speak']
            }
            jQuery("#" + CapitalizeSmallFirstLetter(keyID, "C")).val(keyValue);
            tableCols.forEach(function (attr) {
                spanCtrl = jQuery("#" + attr + "_" + keyValue)
                sSpanVal = spanCtrl.text()
                var idVal = spanCtrl.data("selectedid");
                sSpanVal = idVal != undefined ? idVal : sSpanVal;
                //var isNotReadonly = (jQuery("#" + attr).attr('readonly') == undefined ? "" : jQuery("#" + attr).attr('readonly'));
                //if (isNotReadonly.toLowerCase() == "readonly")
                //    jQuery("#" + attr).removeAttr('readonly');
                if (attr.toUpperCase() == "DOB") {
                    //  var fp = jQuery("#Dob").flatpickr({ dateFormat: "d-m-Y", setDate(new Date(sSpanVal)})

                }
                if (jQuery("#" + attr).attr("type") == "checkbox") {
                    if (sSpanVal.toUpperCase() == "TRUE") {
                        jQuery("#" + attr).prop('checked', true);
                    }
                    else {
                        jQuery("#" + attr).prop('checked', false);
                    }
                }
                else {
                    jQuery("#" + attr).val(sSpanVal)
                }

                //if (isNotReadonly.toLowerCase() == "readonly")
                //    jQuery("#" + attr).attr('readonly', true);

            });


        }

    </script>
    <script>
        var btnUpload = $("#upload_file"),
            btnOuter = $(".button_outer");
        btnUpload.on("change", function (e) {
            var ext = btnUpload.val().split('.').pop().toLowerCase();
            if ($.inArray(ext, ['gif', 'png', 'jpg', 'jpeg']) == -1) {
                $(".error_msg").text("Not an Image...");
            } else {
                $(".error_msg").text("");
                btnOuter.addClass("file_uploading");
                setTimeout(function () {
                    btnOuter.addClass("file_uploaded");
                }, 3000);
                var uploadedFile = URL.createObjectURL(e.target.files[0]);
                setTimeout(function () {
                    $("#uploaded_view").append('<img src="' + uploadedFile + '" />').addClass("show");
                }, 3500);
            }
        });
        $(".file_remove").on("click", function (e) {
            $("#uploaded_view").removeClass("show");
            $("#uploaded_view").find("img").remove();
            btnOuter.removeClass("file_uploading");
            btnOuter.removeClass("file_uploaded");
        });

        function GetEmployeeDocsData() {
            var ajaxData = new FormData();
            jQuery.each(jQuery(".employeeDocs"), function (i, obj) {
                var dataId = jQuery(this).data("dcumenttypes")
                jQuery.each(obj.files, function (j, file) {
                    // var fileName = file.name;
                    var fileExtension = file.name.replace(/^.*\./, '');
                    var newName = dataId + "." + fileExtension
                    ajaxData.append('UploadedFile', file, newName); // is the var i against the var j, because the i is incremental the j is ever 0
                });
            });
            ajaxData.append("EmployeeId", jQuery("#EmployeeId").val());
            ajaxData.append("ClientId", jQuery("#ClientId").val());
            ajaxData.append("FormName", jQuery("#FormName").val());
            ajaxData.append("EmailId", jQuery("#EmailId").val());
            ajaxData.append("FieldName", jQuery("#FieldName").val());
             ajaxData.append("ChangeValue", jQuery("#" + jQuery("#FieldName").val()).val());
            //ajaxData.append("ChangeValue", jQuery("#" + jQuery("#FieldName").val()).val());
            //ajaxData.append("EntrySource", "EditEmployeeScreen");
            ajaxData.append("TableReferenceId", jQuery("#TableReferenceId").val());
            ajaxData.append("TicketId", jQuery("#TicketId").val());
            ajaxData.append("EntrySource", "EmployeeEditScreen");
            //ajaxData.append("ReferenceId", jQuery("#ReferenceId").val());
            // ajaxData.append('UploadDcumentDetailId', jQuery("#UploadDcumentDetailId").val());
            return ajaxData;
        }


        function GetProfileImage() {
            let formData = new FormData();
            formData.append("ProfileImageFile", jQuery("#upload_file")[0].files[0]);
            formData.append("EmployeeId", jQuery("#EmployeeId").val());
            formData.append("ClientId", jQuery("#ClientId").val());
            formData.append("UnitId", jQuery("#UnitId").val());
            formData.append("EmployeeCode", jQuery("#EmployeeCode").val());
            formData.append("FormName", jQuery("#FormName").val());

            return formData;
        }

        //$(document).ready(function () {
        //    //jQuery(".employeeDocs").each(function (key) {
        //    //    jQuery(this).change(function () {
        //    //        jQuery(this).addClass('dirty');
        //    //    });
        //    //});

        //});


        function UploadAttachment(url) {
            if (jQuery(".dirty").length == 0) {
                return false;
            }
            var formData = new FormData();
            formData = GetEmployeeDocsData();
            var x = 1
            BlockUI();
            jQuery.ajax({
                type: "POST",
                url: url,
                data: formData,
                cache: false,
                processData: false,
                contentType: false,
                dataType: "json",
                success: function (data) {                                        
                    UnblockUI();
                    if (data.displayMessage.toUpperCase() == "SUCCESS") {
                        jQuery("#attachmentPopUp").modal("hide");
                        jQuery("#TicketId").val(data.ticketId);
                        //GetEmployeeDocsData();
                        jQuery("#FormName").val("");
                        jQuery("#FileName").val("");
                        $successalert("SUCCESS!", "File saved successfully");
                         jQuery(".employeeDocs").each(function (key) {
                            jQuery(this).removeClass('dirty');
                        });
                    }
                    else
                    {
                        $erroralert("Error!", data.displayMessage + '!');
                    }
                    
                    
                },
                error: function (result) {
                    UnblockUI();
                    var x = 1;
                    jQuery("#FormName").val("");
                    //MoveNext(formID);
                }
            });
        }


        function UploadEmployeeDocument(formID, url, actionId) {
            jQuery("#FormName").val(formID);
            if (jQuery(".dirty").length == 0) {
                if (!ValidForm(formID)) {

                    if (formID == "employeeportfolioForm") {
                        if (jQuery("#profileimagepreview").prop("src") != "" && jQuery("#profileimagepreview").prop("src") != undefined) {
                            MoveNext(formID);
                            $("#upload_file").removeClass("error");
                            $("#upload_file").parent().find("label.error").remove();
                            return false;
                        }
                        else
                            return false;
                    }
                    else {
                        return false;
                    }
                }
            }

            var formData = new FormData();
            if (formID == "employeeuploaddocForm")
                formData = GetEmployeeDocsData();
            if (formID == "employeeportfolioForm")
                formData = GetProfileImage();
            var x = 1
            BlockUI();
            jQuery.ajax({
                type: "POST",
                url: url,
                data: formData,
                cache: false,
                processData: false,
                contentType: false,
                dataType: "json",
                success: function (data) {
                    UnblockUI();
                    jQuery("#FormName").val("");
                    if (actionId == "uploaddocs")
                        GetEmployeeDocsData();
                    else if (actionId == "uploaddocs_N_movenext")
                        MoveNext(formID);
                },
                error: function (result) {
                    UnblockUI();
                    var x = 1;
                    jQuery("#FormName").val("");
                    MoveNext(formID);
                }
            });
        }

        function DeleteRecordList(id, tableId) {
            var del = false;
            var url = "", formData = "";
            if (tableId == "languageTable") {
                del = true;
                formData = "EmployeeLanguageDetailId=" + id + "&EmployeeId=" + jQuery("#EmployeeId").val() + "";
                url = "/EmployeeLanguageDetail/DeleteEmployeeLanguage";
            }

            if (del == true) {
                BlockUI();
                jQuery.ajax({
                    type: "POST",
                    //url: "/Employee/SaveEmployeePersonalInfo",
                    url: url,
                    data: formData,
                    cache: false,
                    contentType: "application/x-www-form-urlencoded; charset=utf-8",
                    success: function (receivedData) {
                        UnblockUI();
                        let data, keyAttr, tableCols;
                        if (tableId == "languageTable") {
                            data = receivedData.employeeLanguageDetails;
                            keyAttr = "employeeLanguageDetailId"
                            tableCols = ['language', 'read', 'write', 'speak', 'Action']
                            if (keyAttr != "")
                                jQuery("#" + CapitalizeSmallFirstLetter(keyAttr, "C")).val("0");
                        }
                        PopulateTable(tableId, data, tableCols, keyAttr);
                    },
                    error: function (result) {
                        UnblockUI();
                        $erroralert("Error!", result.responseText + '!');

                    }
                });
            }

        }

    </script>
}
