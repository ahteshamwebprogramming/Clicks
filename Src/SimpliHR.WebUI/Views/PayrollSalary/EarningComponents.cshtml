@model SimpliHR.Infrastructure.Models.Payroll.PayrollComponentViewModel
@{
    ViewData["Title"] = "Earning Components";
}
<style>


    label.required:after {
        content: "*";
        color: red;
        font-size: 14px;
    }

</style>
<!-- Content -->
<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">
        <span class="text-muted fw-light">Salary Components /</span> Earning Component
    </h4>
    @*<ul class="nav nav-pills mb-3" role="tablist">
    <li class="nav-item">
    <button type="button" class="nav-link active" role="tab" data-bs-toggle="tab" data-bs-target="#earnings" aria-controls="earnings" aria-selected="true">
    Earnings
    </button>
    </li>
    <li class="nav-item">
    <button type="button" class="nav-link" role="tab" data-bs-toggle="tab" data-bs-target="#deductions" aria-controls="deductions" aria-selected="false">
    Deductions
    </button>
    </li>
    <li class="nav-item">
    <button type="button" class="nav-link" role="tab" data-bs-toggle="tab" data-bs-target="#reimbursements" aria-controls="reimbursements" aria-selected="false">
    Reimbursements
    </button>
    </li>
    </ul>*@
    <form id="SaveComponentForm" onSubmit="return false">
        <div class="row">
            <div class="col-md-12">
                <div class="card mb-4">
                    <!-- Current Plan -->
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-1">
                                <div class="mb-3">
                                    <label class="form-label required" for="username">
                                        Earning Name
                                    </label>
                                    @*   @Html.DropDownList("SalaryComponentId",new SelectList(Model.SalaryComponentKeyValues,"SalaryComponentId","SalaryComponentTitle"),"Select Components",htmlAttributes: new { @class="select2 form-select select2-hidden-accessible dbcol", @name="SalaryComponentId", @required="required"})*@

                                    <select class="form-select" id="SalaryComponentId" required name="SalaryComponentId" onchange="javascript:GetEarnnigName(this.value)" data-allow-clear="true" data-select2-id="multicol-country" aria-hidden="true">
                                        <option selected>Select an option</option>

                                        @if (Model.SalaryComponentKeyValues != null)
                                            foreach (var item in Model.SalaryComponentKeyValues)
                                            {

                                                if (Model.PayrollEarningComponent.SalaryComponentId > 0)
                                                {
                                                    if (item.SalaryComponentId == Model.PayrollEarningComponent.SalaryComponentId)
                                                    {

                                                        <option value="@item.SalaryComponentId" selected> @item.SalaryComponentTitle</option>
                                                    }
                                                }
                                                else
                                                {

                                                    <option value="@item.SalaryComponentId"> @item.SalaryComponentTitle</option>
                                                }
                                                @* if (item.SalaryComponentId == Model.PayrollEarningComponent.SalaryComponentId)
                                        {
                                        <option value="@item.SalaryComponentId" selected> @item.SalaryComponentTitle</option>
                                        }
                                        else
                                        {
                                        <option value="@item.SalaryComponentId"> @item.SalaryComponentTitle</option>
                                        }*@

                                            }
                                    </select>
                                </div>
                                @*<div class="mb-3">
                                <label class="form-label" for="username">
                                Earning Name <span class="text-danger">*</span>
                                </label>
                                <input type="text" id="EarningName" name="EarningName" value="@Model.PayrollEarningComponent.EarningName" class="form-control dbcol"
                                placeholder="earningname" />
                                </div>*@
                                <div class="mb-3">
                                    <label class="form-label required" for="username">
                                        Name in Payslip
                                    </label>
                                    <input type="text" id="NameInPaySlip" required name="NameInPaySlip" value="@Model.PayrollEarningComponent.NameInPaySlip" class="form-control dbcol"
                                           placeholder="nameinpayslip" />
                                </div>
                               @* <div class="mb-3">
                                    <div>
                                        <label class="form-label required" for="username">
                                            Calculation Type
                                        </label>
                                    </div>
                                    <div>
                                        <input class="form-check-input dbcol"
                                               type="radio" id="CalculationType_Percentage" name="CalculationType" value="Percentage" @(Model.PayrollEarningComponent.CalculationType == "Percentage" ? Html.Raw("checked=\'checked\'") : "") />
                                        <label class="form-check-label" id="CalcPer">
                                            % of Basic
                                        </label>
                                    </div>
                                    <div>
                                        <input class="form-check-input dbcol"
                                               type="radio" id="CalculationType_Flat" name="CalculationType" value="Flat" @(Model.PayrollEarningComponent.CalculationType == "Flat" ? Html.Raw("checked=\'checked\'") : "") />
                                        <label class="form-check-label">
                                            Fixed Amount
                                        </label>
                                    </div>

                                </div>
                                <div class="mb-3">
                                    <label class="form-label required" for="username">
                                        Enter Percentage/Amount
                                    </label>
                                    <input type="text" id="Percentage" required name="Percentage" value="@Model.PayrollEarningComponent.Percentage" class="form-control dbcol" placeholder="Percentage/Amount" />
                                </div>*@
                                <div class="mb-3">
                                    <input class="form-check-input dbcol" type="checkbox" id="IsActive" name="IsActive" @(Model.PayrollEarningComponent.IsActive == true ? Html.Raw("checked=\'checked\'") : "") />
                                    <label class="form-check-label">
                                        Is Active
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-6 mb-1">
                                <div>
                                    <h4 class="mb-4">Other Configurations</h4>
                                   @* <div class="mb-3">
                                        <div class="col-12 form-check">
                                            <input class="form-check-input dbcol" id="IsSalaryPart" name="IsSalaryPart" type="checkbox" @(Model.PayrollEarningComponent.IsSalaryPart == true ? Html.Raw("checked=\'checked\'") : "")>
                                            Part of the salary structure
                                        </div>
                                    </div>*@
                                    <div class="mb-3">
                                        <div class="col-12 form-check">
                                            <input class="form-check-input dbcol" type="checkbox" id="IsTaxableIncome" name="IsTaxableIncome" @(Model.PayrollEarningComponent.IsTaxableIncome == true ? Html.Raw("checked=\'checked\'") : "")>
                                            Taxable earning <i class="fa-solid fa-circle-info" data-bs-toggle="tooltip"
                                                               data-bs-offset="0,4"
                                                               data-bs-placement="top"
                                                               data-bs-html="true"
                                                               title="<span class='small'>The income tax amount will be divided equally and deducted every month across the financial year."></i>
                                            <div>
                                                @*<div>
                                                <div class="help-text pb-2 text-semi-muted">
                                                The income tax amount will be divided equally and deducted every month across the financial year.
                                                </div>

                                                </div>*@
                                            </div>
                                        </div>
                                    </div>
                                   @* <div class="mb-3">
                                        <div class="col-12 form-check">
                                            <input id="ember4321"
                                                   class="ember-checkbox ember-view form-check-input dbcol"
                                                   id="IsProRataCalculation" name="IsProRataCalculation"
                                                   type="checkbox" @(Model.PayrollEarningComponent.IsProRataCalculation == true ? Html.Raw("checked=\'checked\'") : "")> Calculate based on employee working days
                                           
                                        </div>
                                    </div>*@
                                    <div class="mb-3">
                                        <div class="col-12 form-check">
                                            <input class="form-check-input dbcol" type="checkbox" id="IsEpfConsidration" name="IsEpfConsidration" @(Model.PayrollEarningComponent.IsEpfConsidration == true ? Html.Raw("checked=\'checked\'") : "")>
                                            EPF Contribution
                                        </div>
                                    </div>
                                    @* <div class="mb-4" style="padding-left: 20px;">
                                    <div class="col-12">
                                    <input class="mr-2 form-check-input dbcol" type="radio" id="EPFConsidration_Always" name="EPFConsidrationType" value="Always" @(Model.PayrollEarningComponent.EpfConsidrationType == "Always" ? Html.Raw("checked=\'checked\'") : "")>
                                    Always
                                    </div>
                                    <div class="col-12">
                                    <input class="mr-2 form-check-input dbcol" type="radio" id="EPFConsidration_LessThen" name="EPFConsidrationType" value="LessThen" @(Model.PayrollEarningComponent.EpfConsidrationType == "LessThen" ? Html.Raw("checked=\'checked\'") : "")>
                                    Only when PF Wage is less than ₹ 15,000 <i class="fa-solid fa-circle-info" data-bs-toggle="tooltip"
                                    data-bs-offset="0,4"
                                    data-bs-placement="top"
                                    data-bs-html="true"
                                    title="<span class='small'>A pre-tax deduction is money Taken out of an employee's pay before income tax calculated. This helps reduce the taxable income</span>"></i>
                                    <span>
                                    </span>
                                    </div>
                                    </div>*@
                                    <div class="mb-3">
                                        <div class="col-12 form-check">
                                            <input class="form-check-input dbcol" type="checkbox" id="IsEsiConsidrable" name="IsEsiConsidrable" @(Model.PayrollEarningComponent.IsEsiConsidrable == true ? Html.Raw("checked=\'checked\'") : "")> ESI Applicability
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <div class="col-12 form-check">
                                            <input class="form-check-input dbcol" type="checkbox" id="IsVisibleInPaySlip" name="IsVisibleInPaySlip" @(Model.PayrollEarningComponent.IsVisibleInPaySlip == true ? Html.Raw("checked=\'checked\'") : "")> You want to show it in payslip
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-12">
                                <button class="btn btn-primary me-2 mt-2" onclick="SaveEarningComponents()">
                                    Save
                                </button>
                                <button class="btn btn-primary me-2 mt-2" onclick="javascript:window.location.href='/PayrollSalary/SalaryHeads/'">
                                    Cancel
                                </button>
                                <input type="hidden" class="dbcol" id="UnitId" name="UnitId" value="@Model.PayrollEarningComponent.UnitId" />
                                <input type="hidden" class="dbcol" id="EarningId" name="EarningId" value="@Model.PayrollEarningComponent.EarningId" />
                            </div>

                            <div class="modal fade" id="showAlert" tabindex="-1" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered1 modal-simple modal-add-new-cc">
                                    <h2>SimpliHR2.0</h2>
                                    <div class="modal-content p-3 p-md-5">
                                        <div class="modal-body">
                                            <button type="button" class="btn-close" name="btnPopupClose" data-bs-dismiss="modal" aria-label="Close"></button>
                                            <div class="text-center mb-4">
                                            </div>
                                            <form id="showAlert" class="row g-3" onsubmit="return false">
                                                <div class="col-12 text-center" id="errorDiv">
                                                    <p id="errorPara" class="error" style="color:red"></p>
                                                </div>
                                                <div class="col-12 text-center" id="successDiv">
                                                    <p id="successPara" class="error" style="color:black"></p>
                                                </div>
                                            </form>
                                        </div>

                                        <div id="popupBtnDiv" class="col-12 text-center">
                                            @*  <button type="submit" class="btn btn-primary me-sm-3 me-1 mt-3">Submit</button>*@
                                            <button type="reset" name="btnPopupClose"
                                                    class="btn btn-label-secondary btn-reset mt-3"
                                                    data-bs-dismiss="modal"
                                                    aria-label="Close">
                                                Close
                                            </button>

                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Modal -->
                    <!-- /Modal -->
                    <!-- /Current Plan -->
                </div>
            </div>
        </div>
    </form>


</div>
@section scripts{

    <script src="~/customjs/commonfunction.js"></script>
    <script src="~/customjs/employeevalidation.js"></script>
    <script type="text/javascript">
        // jQuery(document).ready(function () {
        //     alert("@Model.PayrollEarningComponent.IsActive");
        // });

     //   BlockUI();
        function ShowServerMessage(sMsg) {
            jQuery("#successPara").html("");
            jQuery("#errorPara").html("");
            if (sMsg != "_blank") {
                if (sMsg.toUpperCase() == "SUCCESS") {
                    sMsg = "Earnnig component created/updated successfully";
                  //  jQuery("#successDiv").show();
                   // jQuery("#successPara").html(sMsg);
                    $successalert("Earning Component", sMsg);
                    // window.location = "/EmployeeAttendanceUI/ViewAttendance"
                }
                else {

                    $erroralert("Error!", sMsg);
                    // jQuery("#errorDiv").show();
                    // jQuery("#errorPara").html(sMsg);
                }

               // jQuery("#showAlert").modal('show');
                //ResetForm();

            }
        }

        function GetEarnnigName(name) {

            $("#NameInPaySlip").val($("#SalaryComponentId option:selected").text());
            //if ($("#SalaryComponentId option:selected").text().trim() == "Basic") {

            //    $("#CalcPer").html(' % of CTC');
            //}
            //else {
            //    $("#CalcPer").html(' % of Basic');
            //}

        }

        function SaveEarningComponents() {
            var rowData = {};
            var payrollEarningComponentVM = {};
            var isData = false;
            var dataCollection = new Array();
            payrollEarningComponentVM.PayrollEarningComponent = GetFormControls();
            payrollEarningComponentVM.PayrollEarningComponent.SalaryComponentId = jQuery("#SalaryComponentId").val()
            var url = "/PayrollSalary/SaveEarningComponent"
            BlockUI();
            jQuery.ajax({
                type: "POST",
                url: url,
                data: { payrollEarningVM: payrollEarningComponentVM },
                //cache: false,
                //contentType: "application/x-www-form-urlencoded; charset=utf-8",
                success: function (data) {
                    if (data.toUpperCase() == "SUCCESS") {
                        window.location.href = "/PayrollSalary/SalaryHeads"
                    }
                    else {
                            $erroralert("Earning Components", data);
                      //  ShowServerMessage(data);
                    }
                    UnblockUI();
                },
                error: function (result) {
                    UnblockUI();
                    var x = 1;
                    jQuery("#FormName").val("");
                }
            });

        }

        function GetPayrollEarningComponentControls() {
            var payrollEarningComponentVM = {};
            var $allCtrl = $('.dbcol');
            //$allCtrl.each(function (i) {
            //    var curCtrl = jQuery(this);
            //    payrollEarningComponentVM.PayrollEarningComponent[curCtrl.attr('name')] = curCtrl.val();
            //})
            payrollEarningComponentVM
            return payrollEarningComponentVM;
        }

    </script>
}